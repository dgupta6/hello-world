GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   3  SCALAR re_freq                    /1/;
   4  PARAMETER demand_cycletime        /6/;
   5  PARAMETER demand_variation        /0/;
   6  PARAMETER demand_magnitude        /12/;
   7  PARAMETER lambda_Demand           /0.00/;
   8  SCALAR surprise                   /0.00/;
   9  SCALAR optcr_value                /0/;
  10  PARAMETER SEED_VALUE              /1716/;
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code\ConfigurationFile.gms
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 2
CONFIGURATION_FILE
C o m p i l a t i o n


  23   
  24  *$SETGLOBAL OPTIMIZATION_DIRECTION  maximizing
  25  *$SETGLOBAL MODEL_NAME MAX_PROFIT
  26  *$SETGLOBAL InitialInventoryFlag 1
  27   
  28  *$SETGLOBAL OPTIMIZATION_DIRECTION  minimizing
  29  *$SETGLOBAL MODEL_NAME MIN_COST
  30  *$SETGLOBAL InitialInventoryFlag 0
  31  *******HORIZON********
  32  *$SETGLOBAL H 192
  34  *$SETGLOBAL MH 20
  35  *SCALAR re_freq /1/;
  36  *Used in chopping off initial transient in closed loop cost evaluation
  37  *$SETGLOBAL Transient_H 48
  38  *$SETGLOBAL Transient_H 0
  39  *We do Closed_Loop_Upper # of calc and record closed loop solution only ti
      ll there
  40  *$SETGLOBAL Closed_Loop_Upper 168
  41  *$SETGLOBAL Closed_Loop_Upper 192
  42  *******HORIZON********
  43   
  44  *******NETWORK AND MODEL********
  45  *$SETGLOBAL NetworkNumber 1
  48  *******NETWORK AND MODEL********
  49   
  50  *******DEMAND LOAD********
  51  *PARAMETER demand_cycletime /12/;
  52  *PARAMETER demand_variation /3/;
  53  *PARAMETER demand_magnitude NOMINAL LOAD /25/;
  54  *******DEMAND LOAD********
  55   
  56  ******DISTURBANCES********************
  57  *$SETGLOBAL Demand_Disturbance_flag 0
  61  *Parameters for demand uncertainty
  62  *What fraction ahead of rolling Horizon does demand forecast changes'
  63  *SCALAR surprise /0.34/;
  64  *Magnitude of Uncertainties
  65  *PARAMETER lambda_Demand /0.2/;
  66  *Yet to replace these names in ModelSolution9 file
  67  *and these values are hardcoded right now (look into code again)
  68  PARAMETER lambda_TaskDelay /0.2/;
  69  PARAMETER default_delay_length /1/;
  70  PARAMETER lambda_UnitBreakdown /0.2/;
  71  PARAMETER time_to_bring_unit_back_online /2/;
  72  PARAMETER lambda_Handling /0.2/;
  73  ******DISTURBANCES********************
  74   
  75  *******OPTIMIZATION OPTIONS****
  76  *SCALAR   optcr_value /0/;
  77  SCALAR   timelimit /600/;
  78  *******OPTIMIZATION OPTIONS****
  79   
  80  *******EVALUATION********
  81  *$SETGLOBAL N_runs 1
  82  *******EVALUATION********
  83   
  84  *******REPORTING********
  87  *$SETGLOBAL Results_FileName Config_Results
  88  *******REPORTING********
  89   
  90  *Run the closed loop and generate results
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code\MasterFile.gms
  92  *Change this to name of the instance
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 3
MasterFile
C o m p i l a t i o n


  98  *$OFFLISTING
  99   
 100  execseed=SEED_VALUE;
 101  *parameter cc /0/;
 102   
 104  SCALAR KillLength /2/;
 105   
 106  SET run /run1*run1/;
 107   
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code\NetworkN2.gms
 109  Sets     i tasks  /T1*T3/
 110           s states /M1*M4/
 111           j units  /U1*U2/
 112           u utilities /manpower/
 113   
 114  *         Ki(j,i) set of equipments(units) suitable for task i
 115  *         /(Reactor1).(TA,TB),Heater.Heating/
 116           Ij(i,j) set of equipments(units) suitable for task i
 117           /T1.U1,(T2,T3).U2/
 118   
 119           FIS(s) States with Finite Intermediate Storage /M2/
 120           product_states(s) Product States/M3*M4/
 121           feed_states(s) Feed States/M1/
 122   
 123           UtilInt Intervals for utility /Int1/
 124           UnitInt Intervals for unit-unavailability /Int1/
 125   
 126           Attributes/magnitude, starttime, price/
 127  ;
 128   
 129  Table UtilData(UtilInt,u,Attributes)
 130               manpower.starttime            manpower.magnitude      manpowe
      r.price
 131  Int1                    0                         10                     0
 132  ;
 133   
 134  *Availability of unit  0=available, 1=not available
 135  Table UnitData(UnitInt,j,Attributes)
 136                U1.magnitude         U1.starttime
 137  Int1              0                     0
 138  ;
 139   
 140  Parameters rho(i,s) proportion of input of task i from states s
 141             /T1.M1 1,(T2,T3).M2 1/
 142             rhobar(i,s) proportion of ouput of task i to state s
 143             /T1.M2 1, T2.M3 1, T3.M4 1/
 144   
 145             pis(i,s) processing time for output of task i into state s
 146             /T1.M2 2,T2.M3 2, T3.M4 3/
 147             pi(i) maximum processing time in task i for any stage produced 
      by it
 148   
 149             alpha(u,i) fixed utility demand by task i throughout its run
 150             /manpower.(T1*T2) 0/
 151             beta(u,i) "variable utility demand by task i throughout its run
      (te/hr)"
 152             /manpower.(T1*T2) 0/
 153   
 154             vmaxij(i,j)  Maximum capacity of unit j when used for task i
 155             /T1.U1 20, (T2,T3).U2 10/
 156             vminij(i,j)  Minimum capacity of unit j when used for task i
 157             /T1.U1 10, (T2,T3).U2 5/
 158             Cs(s) maximum storage capacity for stage s  /(M1*M4) 99999/
 159             Cst(s) unit price of s/M1 1, M2 5, M3 10, M4 10/
 160  ;
 161  *pis(i,s)=5;
 162  pi(i)=smax(s,pis(i,s));
 163   
      ******DEMAND INFORMATION*****************************
      *Each order for all products
      set         o orders /o1*o%H%/;
      parameter deliveries_time(o);
      deliveries_time(o)=demand_cycletime*ord(o);
      deliveries_time(o)=deliveries_time(o)+UniformInt(-demand_variation,demand_
      variation);
      parameter deliveries(o,s);
      deliveries(o,s)$(product_states(s))=demand_magnitude;
      ******DEMAND INFORMATION*****************************
 175   
 176  *END OF INSTANCE FILE
 177   
 178   
 179   
 180   
 181   
 182   
 183   
 184   
 185   
 186   
 187   
 188   
 189   
 190   
 191   
 192   
      Table deliveries(o,s)
              SA      SB
      o1      5       5
      o2      5       5
      o3      5       5
      o4      5       5
      o5      5       5
      o6      5       5
      o7      5       5
      o8      5       5;
 205   
 206   
      For debugging/testing utility formulas
      Table UtilData(UtilInt,u,Attributes)
                   manpower.starttime            manpower.magnitude      manpowe
      r.price
      Int1                    0                         1                     1
      Int2                    1.5                       0                     0
      Int3                    3.5                       1                     1
      Int4                    6.1                       0                     0;
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code\Model9.gms
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 4
State_Space_Model
C o m p i l a t i o n


 218   
 219  PARAMETER Small_number /1E-2/;
 220  *used for rounding W,B in recordstates in modelsolution file
 221   
 222  *Now generating time grid using delta
 225  *$EvalGlobal calculations (%horizon%-%window%)
 229   
 230  set h time(multiples of delta) /h0*h216/
 231      n time window   /n0*n16/
 232      calc #of windows /calc0*calc24/
 233   
 234      closed_loop(h) horizon points for which we calculate closed loop cost
 235   
 236      Sbari(s,i)  materials produced by task i
 237      Si(s,i)     materials consumed by task i
 238      Tbars(i,s)    Tasks producing material s
 239      Ts(i,s) Tasks consuming material s;
 240   
 241  Sbari(s,i)=1$(rhobar(i,s) gt 0);
 242  Si(s,i)=1$(rho(i,s) gt 0);
 243  *Ij(i,j)=Ki(j,i);
 244  Tbars(i,s)=Sbari(s,i);
 245  Ts(i,s)=Si(s,i);
 246   
 247  closed_loop(h)=0;
 248  closed_loop(h)$(ord(h)-1 ge 0 and ord(h)-1 le 24)=1;
 249   
 250   
 251  alias(i,ip)
 252  alias(j,jp)
 253  alias(s,sp)
 254  alias(n,np)
 255  alias(h,hbar);
 256   
 257  set     UnitUnavailable_full(j,h)
 258  UnitUnavailable(j,n);
 259   
 260  parameter Uutmax_full(u,h),Cut_full(u,h) utility price;
 261   
 262  parameters Dst(s,n),Uutmax(u,n),Cut(u,n);
 263   
 264   
 265  parameter pis_new(i,s),pi_new(i);
 266  *tau_new(j,k,kp);
 267  pis_new(i,s)=ceil(pis(i,s)/1);
 268  pi_new(i)=ceil(pi(i)/1);
 269   
 270  parameter alpha_new(u,i),beta_new(u,i),Cst_new(s);
 271   
 272  alpha_new(u,i)=alpha(u,i);
 273   
 274  beta_new(u,i)=beta(u,i);
 275   
 276  Cst_new(s)=Cst(s);
 277   
 278   
 279   
 280   
 281  *UTILITY CALCULATIONS NEED TO BE CORRECTED
 282  *RIGHT NOW THERE IS BUG THAT IF THERE IS MORE THAN ONE CHANGE
 283  *WITHIN AN INTERVAL THEN THE CODE TAKES FIRST CHANGE ONLY
 284  *AND IGNORES THE SECOND CHANGE
 285  loop(UtilInt,
 286  *Maximum available utility
 287  Uutmax_full(u,h)$(ord(UtilInt) eq 1 and
 288                   ord(h) ge 1 and
 289                   ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1)$(
      UtilData(UtilInt,u,"magnitude") gt UtilData(UtilInt+1,u,"magnitude"))+
 290                                ceil(UtilData(UtilInt+1,u,"starttime")/1)$(U
      tilData(UtilInt,u,"magnitude") le UtilData(UtilInt+1,u,"magnitude")) ))
 291                  =  UtilData(UtilInt,u,"magnitude");
 292   
 293   
 294   
 295   
 296  Uutmax_full(u,h)$((ord(UtilInt) gt 1 and ord(UtilInt) lt card(UtilInt)) an
      d
 297                   ord(h)-1 ge (floor(UtilData(UtilInt,u,"starttime")/1)$(Ut
      ilData(UtilInt-1,u,"magnitude") gt UtilData(UtilInt,u,"magnitude"))+
 298                                ceil(UtilData(UtilInt,u,"starttime")/1)$(Uti
      lData(UtilInt-1,u,"magnitude") le UtilData(UtilInt,u,"magnitude")) ) and
 299                   ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1)$(
      UtilData(UtilInt,u,"magnitude") gt UtilData(UtilInt+1,u,"magnitude"))+
 300                                ceil(UtilData(UtilInt+1,u,"starttime")/1)$(U
      tilData(UtilInt,u,"magnitude") le UtilData(UtilInt+1,u,"magnitude")) ))
 301                  =  UtilData(UtilInt,u,"magnitude");
 302   
 303   
 304   
 305  Uutmax_full(u,h)$(ord(UtilInt) eq card(UtilInt) and
 306                   ord(h)-1 ge (floor(UtilData(UtilInt,u,"starttime")/1)$(Ut
      ilData(UtilInt-1,u,"magnitude") gt UtilData(UtilInt,u,"magnitude"))+
 307                                ceil(UtilData(UtilInt,u,"starttime")/1)$(Uti
      lData(UtilInt-1,u,"magnitude") le UtilData(UtilInt,u,"magnitude")) ) and
 308                   ord(h) le card(h))
 309                  =  UtilData(UtilInt,u,"magnitude");
 310   
 311   
 312  *Utility Price
 313  Cut_full(u,h)$(ord(UtilInt) eq 1 and
 314            ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1))   )
 315            =  UtilData(UtilInt,u,"price");
 316   
 317  Cut_full(u,h)$(ord(UtilInt) gt 1 and ord(UtilInt) lt card(UtilInt) and
 318            ord(h)-1 gt (floor(UtilData(UtilInt,u,"starttime")/1)) and
 319            ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1))   )
 320            =  UtilData(UtilInt,u,"price");
 321   
 322  Cut_full(u,h)$(ord(UtilInt) eq card(UtilInt) and
 323            ord(h)-1 gt floor(UtilData(UtilInt,u,"starttime")/1) and
 324            ord(h) le card(h)   )
 325            =  UtilData(UtilInt,u,"price");
 326   
 327  Cut_full(u,h)$(ord(UtilInt) gt 1 and
 328           ord(h)-1 eq floor(UtilData(UtilInt,u,"starttime")/1))
 329           =(   UtilData(UtilInt-1,u,"price")*(UtilData(UtilInt,u,"starttime
      ")-(ord(h)-1)* 1 )
 330                +UtilData(UtilInt,u,"price")*(ord(h)*1-UtilData(UtilInt,u,"s
      tarttime"))   )/1;
 331  *Bug in cost calculation: what if there are 3 cost levels within one time 
      grid?
 332  )
 333   
 334   
 335  *UnitUnavailabality(note the difference in inequalities as opposed to Util
      ity....1=>unit not available so more magnitude is bad)
 336  loop(UnitInt,
 337  Unitunavailable_full(j,h)$(ord(UnitInt) eq 1 and
 338                   ord(h)-1 ge 0 and
 339                   ord(h)-1 lt (floor(UnitData(UnitInt+1,j,"starttime")/1)$(
      UnitData(UnitInt,j,"magnitude") lt UnitData(UnitInt+1,j,"magnitude"))+
 340                                ceil(UnitData(UnitInt+1,j,"starttime")/1)$(U
      nitData(UnitInt,j,"magnitude") ge UnitData(UnitInt+1,j,"magnitude")) ))
 341                  =  UnitData(UnitInt,j,"magnitude");
 342   
 343   
 344   
 345   
 346  Unitunavailable_full(j,h)$((ord(UnitInt) gt 1 and ord(UnitInt) lt card(Uni
      tInt)) and
 347                   ord(h)-1 ge (floor(UnitData(UnitInt,j,"starttime")/1)$(Un
      itData(UnitInt-1,j,"magnitude") lt UnitData(UnitInt,j,"magnitude"))+
 348                                ceil(UnitData(UnitInt,j,"starttime")/1)$(Uni
      tData(UnitInt-1,j,"magnitude") ge UnitData(UnitInt,j,"magnitude")) ) and
 349                   ord(h)-1 lt (floor(UnitData(UnitInt+1,j,"starttime")/1)$(
      UnitData(UnitInt,j,"magnitude") lt UnitData(UnitInt+1,j,"magnitude"))+
 350                                ceil(UnitData(UnitInt+1,j,"starttime")/1)$(U
      nitData(UnitInt,j,"magnitude") ge UnitData(UnitInt+1,j,"magnitude")) ))
 351                  =  UnitData(UnitInt,j,"magnitude");
 352   
 353   
 354   
 355  Unitunavailable_full(j,h)$(ord(UnitInt) eq card(UnitInt) and
 356                   ord(h)-1 ge (floor(UnitData(UnitInt,j,"starttime")/1)$(Un
      itData(UnitInt-1,j,"magnitude") lt UnitData(UnitInt,j,"magnitude"))+
 357                                ceil(UnitData(UnitInt,j,"starttime")/1)$(Uni
      tData(UnitInt-1,j,"magnitude") ge UnitData(UnitInt,j,"magnitude")) ) and
 358                   ord(h) le card(h))
 359                  =  UnitData(UnitInt,j,"magnitude");
 360  )
 361   
 362   
 363   
 364  *display UnitUnavailable_full,Uutmax_full,Cut_full,Sbari,Si,rhobar,rho,Tba
      rs,Ts,calc;
 365   
 366  *Ijk,tauChangeMax
 367   
 368   
 369   
 370  *Disturbance parameter for loading/unloading of materials
 371  parameters betaHatProd(i,j,s,n),betaHatCons(i,j,s,n);
 372  betaHatProd(i,j,s,n)=0;
 373  betaHatCons(i,j,s,n)=0;
 374   
 375   
 376  *Disturbance parameter for task delays
 377  parameters
 378  Yhat(i,j,n,hbar)
 379  Delay(calc,i,j,hbar)
 380  Zhat(i,j,n,hbar)
 381  Breakdown(calc,i,j,hbar)
 382  Duration_breakdown(calc,j)
 383  UnitBroken(j,n)
 384  WbarInfo(i,j,n,hbar)
 385  BbarInfo(i,j,n,hbar)
 386  KillDuration(i,j)
 387  KillDurationCountdown(i,j)
 388  KillOccupy(j,n)
 389  KillCountdown(j);
 390   
 391  *Initializing parameters
 392  Yhat(i,j,n,hbar)=0;
 393  Delay(calc,i,j,hbar)=0;
 394  Zhat(i,j,n,hbar)=0;
 395  Breakdown(calc,i,j,hbar)=0;
 396  Duration_breakdown(calc,j)=0;
 397  UnitBroken(j,n)=0;
 398  WbarInfo(i,j,n,hbar)=0;
 399  BbarInfo(i,j,n,hbar)=0;
 400  KillDuration(i,j)=0;
 401  KillDurationCountdown(i,j)=0;
 402  KillOccupy(j,n)=0;
 403  KillCountdown(j)=0;
 404   
 405  *hbar are the time points for lifting of variables
 406  *binary variables W(i,j,n),Wbar(i,j,n,hbar),T(i,j,hbar) Kill_Variable;
 407  binary variables Wbar(i,j,n,hbar),T(i,j,hbar) Kill_Variable;
 408  positive variable Bbar(i,j,n,hbar),Sst(s,n),Backlog(s,n),Ship(s,n),Ship_sa
      les(s,n),Uut(u,n),Rst(s,n),SstTerminal(s),BacklogTerminal(s);
 409  variables obj_variable;
 410  integer variable NB(i,j) number of batches;
 411  *Assigning values to variables that might not participate in optimization
 412  Uut.l(u,n)=0;
 413  Ship_sales.l(s,n)=0;
 414   
 415  Equations
 416  numberOfBatches,
 417  Allocation,
 418  UnitCapacityMax,UnitCapacityMin,
 419  InventoryLimit,
 420  InventoryBalance,
 421  EndingInventory,
 422  BacklogBalance,
 423  EndingBacklog,
 424  UtilityLimit,
 425  UtilityBalance,
 426  objective_MIN_COST,
 427  objective_MAX_PROFIT,
 428  objective_MAX_PROFIT_Greedy
 429  UnitUnavailabality,
 430  *CorrectHolding(i,j,n),
 431  LiftingW,
 432  *LiftingW0,
 433  LiftingB,
 434  *LiftingB0,
 435  Carryover_W,Carryover_B,
 436  InventoryBalance_MAX_PROFIT,
 437  EndingInventory_MAX_PROFIT
 438  Ship_constraint(s,n)
 439  NoShip(s,n)
 440  NoTaskStart;
 441  *SHIPMENT;
 442  *NoTaskRunningAtEndOfHorizon;
 443   
 444  numberOfBatches(i,j)$Ij(i,j).. NB(i,j)=E=sum((n,hbar)$(ord(hbar)-1 eq 0),W
      bar(i,j,n,hbar));
 445   
 446  *scalar ord_calc /0/;
 447  SCALAR fixed_decisions /0/;
 448  SCALAR reschedule_flag /0/;
 449  *re_freq-1-mod(ord_calc-1+re_freq-1,re_freq)  is zero for calc0
 450  Carryover_W(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 ge 1 
      and ord(hbar)-1 le pi(i) and Ij(i,j))..Wbar(i,j,n,hbar)=E=WbarInfo(i,j,n,h
      bar)*(1-T(i,j,hbar))*(1-Zhat(i,j,n,hbar));
 451  Carryover_B(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 ge 1 
      and ord(hbar)-1 le pi(i) and Ij(i,j))..Bbar(i,j,n,hbar)=E=BbarInfo(i,j,n,h
      bar)*(1-T(i,j,hbar))*(1-Zhat(i,j,n,hbar));
 452   
 453  *LiftingW(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (
      ord(n) lt card(n)) and Ij(i,j))..
 454  *         Wbar(i,j,n+1,hbar)=E=Wbar(i,j,n,hbar-1)+Yhat(i,j,n,hbar)-Yhat(i,
      j,n,hbar-1)-Zhat(i,j,n,hbar-1);
 455  *LiftingB(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (
      ord(n) lt card(n)) and Ij(i,j))..
 456  *         Bbar(i,j,n+1,hbar)=E=Bbar(i,j,n,hbar-1)+Bbar(i,j,n,hbar)*Yhat(i,
      j,n,hbar)-Bbar(i,j,n,hbar-1)*Yhat(i,j,n,hbar-1)
 457   
 458  LiftingW(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (o
      rd(n) lt card(n)) and Ij(i,j))..
 459           Wbar(i,j,n+1,hbar)=E=Wbar(i,j,n,hbar-1)+Yhat(i,j,n,hbar)-Yhat(i,j
      ,n,hbar-1);
 460   
 461  LiftingB(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (o
      rd(n) lt card(n)) and Ij(i,j))..
 462           Bbar(i,j,n+1,hbar)=E=Bbar(i,j,n,hbar-1)+Bbar(i,j,n,hbar)*Yhat(i,j
      ,n,hbar)-Bbar(i,j,n,hbar-1)*Yhat(i,j,n,hbar-1);
 463  Allocation(j,n).. sum((i,hbar)$(Ij(i,j) and (ord(hbar) -1 le (pi_new(i)-1)
      ) ), Wbar(i,j,n,hbar))=L=1-sum((i,hbar)$(Ij(i,j) and (ord(hbar) -1 eq pi_n
      ew(i)) ) , Yhat(i,j,n,hbar))-UnitBroken(j,n)
 464                        -sum((i,hbar)$(Ij(i,j) and ord(hbar)-1 ge 1 and ord(
      hbar)-1 le pi(i)),T(i,j,hbar)$(ord(n)-1 lt KillDuration(i,j)))-KillOccupy(
      j,n);
 465  *ord(np)-1=0 => Wbar0 which is also included in the above sum, so we dont 
      have to explicitly sum over W now since W0 is also there
 466   
 467  UnitCapacityMax(i,j,n,hbar)$(Ij(i,j) and ord(hbar)-1 eq 0).. Bbar(i,j,n,hb
      ar)=L=Wbar(i,j,n,hbar)*vmaxij(i,j);
 468   
 469  UnitCapacityMin(i,j,n,hbar)$(Ij(i,j) and ord(hbar)-1 eq 0).. Bbar(i,j,n,hb
      ar)=G=Wbar(i,j,n,hbar)*vminij(i,j);
 470   
 471  InventoryLimit(s,n)$(FIS(s)).. Sst(s,n)=L=Cs(s);
 472   
 473  *Watch out for brackets in betahatCons and betaHatProd. One has multiplica
      tion with rho other does not
 474  InventoryBalance(s,n)$(ord(n) lt card(n)).. Sst(s,n+1)=E=Sst(s,n)+sum((i,j
      ,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(hbar) -1 eq pis_new(i,s))),rhobar(
      i,s)*(Bbar(i,j,n,hbar)*(1-Yhat(i,j,n,hbar)-Zhat(i,j,n,hbar))+betaHatProd(i
      ,j,s,n)))
 475                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j) and ord(hbar
      ) eq 1),rho(i,s)*Bbar(i,j,n,hbar)+betaHatCons(i,j,s,n)) -Ship(s,n)$(produc
      t_states(s))+Rst(s,n)$(feed_states(s));
 476  EndingInventory(s,n)$(ord(n) eq card(n)).. SstTerminal(s)=E=Sst(s,n)+sum((
      i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(hbar) -1 eq pis_new(i,s))),rhob
      ar(i,s)*(Bbar(i,j,n,hbar)*(1-Yhat(i,j,n,hbar)-Zhat(i,j,n,hbar))+betaHatPro
      d(i,j,s,n)))
 477                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j)and ord(hbar)
       eq 1),rho(i,s)*Bbar(i,j,n,hbar)+betaHatCons(i,j,s,n)) -Ship(s,n)$(product
      _states(s))+Rst(s,n)$(feed_states(s));
 478   
 479  ********
 480  *Inventory at point 2 means, inventory level infinitesimal time just befor
      e point 2, ie 2-, need to define extra ending inventory variable SstTermin
      al(s)
 481  *Deliveries are point functions like B, W while inventory is interval func
      tion
 482  *Kondili has convention that inventory at point 2 is 2+, so has to define 
      extra initial inventory parameter Sst0(s)
 483   
 484   
 485  ***********Backlogs******
 486  BacklogBalance(s,n)$(product_states(s) and ord(n) lt card(n)).. Backlog(s,
      n+1)=E=Backlog(s,n)-Ship(s,n)+Dst(s,n);
 487  EndingBacklog(s,n)$(product_states(s) and ord(n) eq card(n)).. BacklogTerm
      inal(s)=E=Backlog(s,n)-Ship(s,n)+Dst(s,n);
 488   
 489  ***********UtilityBalance******
 490  UtilityLimit(u,n).. Uut(u,n)=L=Uutmax(u,n);
 491  UtilityBalance(u,n).. Uut(u,n)=E=sum((i,j,hbar)$(Ij(i,j) and (ord(hbar)-1 
      le pi_new(i)-1)),alpha_new(u,i)*Wbar(i,j,n,hbar)+beta_new(u,i)*Bbar(i,j,n,
      hbar)  );
 492   
 493  UnitUnavailabality(i,j,n)$(UnitUnavailable(j,n) and Ij(i,j)).. sum((hbar)$
      (ord(hbar)-1 le pi_new(i)-1),Wbar(i,j,n,hbar))=E=0;
 494   
 495  *Utility cost: sum((u,n),Cut(u,n)*Uut(u,n))
 496  *objective_MIN_COST.. obj_variable  =E= 1E1*sum(s,Cst_new(s)*SstTerminal(s
      )) +1E1*sum((s,n),Cst_new(s)*Sst(s,n))
 497  *                                 +1E2*sum((s,n)$(product_states(s)),Cst_n
      ew(s)*Backlog(s,n))+1E2*sum(s$(product_states(s)),Cst_new(s)*BacklogTermin
      al(s))
 498  *                                 +sum((i,j,hbar)$Ij(i,j),T(i,j,hbar));
 499  objective_MIN_COST.. obj_variable  =E= 1E1*sum(s,Cst_new(s)*SstTerminal(s)
      ) + 1E1*sum((s,n),Cst_new(s)*Sst(s,n))
 500                                   +1E2*sum((s,n)$(product_states(s)),Cst_ne
      w(s)*Backlog(s,n))
 501                                   +1E2*sum(s$(product_states(s)),Cst_new(s)
      *BacklogTerminal(s))
 502                                   +sum((i,j,n,hbar)$(Ij(i,j) AND ord(hbar)-
      1 eq 0),Wbar(i,j,n,hbar));
 503   
 504   
 505  *objective_MAX_PROFIT.. obj_variable =E= 1E1*sum(s$(product_states(s)),Cst
      _new(s)*SstTerminal(s))+1E1*sum((s,n)$(product_states(s)),Cst_new(s)*Ship(
      s,n))
 506  *                                       -1E2*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Backlog(s,n))-1E2*sum(s$(product_states(s)),Cst_new(s)*Backlog
      Terminal(s) );
 507   
 508  *objective_MAX_PROFIT.. obj_variable =E= 1E1*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Sst(s,n))+1E1*sum(s$(product_states(s)),Cst_new(s)*SstTerminal
      (s))
 509  *                                       -1E2*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Backlog(s,n))-1E2*sum(s$(product_states(s)),Cst_new(s)*Backlog
      Terminal(s))
 510  *                                       +1E1*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Ship(s,n));
 511   
 512  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),rou
      nd(2-ord(n)/card(n),2)*Cst_new(s)*Ship(s,n))-sum((i,j,n,hbar)$(Ij(i,j) AND
       ord(hbar)-1 eq 0),Wbar(i,j,n,hbar));
 513   
 514  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst
      _new(s)*(Ship_sales(s,n)))
 515  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst
      _new(s)*(Ship_sales(s,n)+Ship(s,n)))
 516  objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst_
      new(s)*(Ship_sales(s,n)))
 517                                           -sum((i,j,n,hbar)$(Ij(i,j) AND or
      d(hbar)-1 eq 0),Wbar(i,j,n,hbar))
 518                                           -1E2*sum((s,n)$(product_states(s)
      ),Cst_new(s)*Backlog(s,n))
 519                                           -1E2*sum(s$(product_states(s)),Cs
      t_new(s)*BacklogTerminal(s));
 520   
 521  objective_MAX_PROFIT_Greedy.. obj_variable =E= sum((s,n)$(product_states(s
      )),round(2-(ord(n)/card(n)),2)*Cst_new(s)*(Ship(s,n)+Ship_sales(s,n)))
 522                                           -sum((i,j,n,hbar)$(Ij(i,j) AND or
      d(hbar)-1 eq 0),Wbar(i,j,n,hbar))
 523                                           -1E2*sum((s,n)$(product_states(s)
      ),Cst_new(s)*Backlog(s,n))
 524                                           -1E2*sum(s$(product_states(s)),Cs
      t_new(s)*BacklogTerminal(s));
 525  *Objective_makespan_min.. obj_variable =E= sum(ord(n)*W)
 526   
 527  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),rou
      nd(2-ord(n)/card(n),2)*Cst_new(s)*Ship(s,n));
 528   
 529  *SHIPMENT(s,n).. Ship(s,n)=L=Dst(s,n)  ;
 530  InventoryBalance_MAX_PROFIT(s,n)$(ord(n) lt card(n)).. Sst(s,n+1)=E=Sst(s,
      n)
 531                           +sum((i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(
      hbar) -1 eq pis_new(i,s))),rhobar(i,s)*Bbar(i,j,n,hbar))
 532                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j) and ord(hbar
      ) eq 1),rho(i,s)*Bbar(i,j,n,hbar))
 533                           -Ship_sales(s,n)$(product_states(s))-Ship(s,n)$(p
      roduct_states(s))+Rst(s,n)$(feed_states(s));
 534   
 535  EndingInventory_MAX_PROFIT(s,n)$(ord(n) eq card(n)).. SstTerminal(s)=E=Sst
      (s,n)
 536                           +sum((i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(
      hbar) -1 eq pis_new(i,s))),rhobar(i,s)*Bbar(i,j,n,hbar))
 537                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j)and ord(hbar)
       eq 1),rho(i,s)*Bbar(i,j,n,hbar))
 538                           -Ship(s,n)$(product_states(s))-Ship_sales(s,n)$(p
      roduct_states(s))+Rst(s,n)$(feed_states(s));
 539   
 540  *Ship_constraint(s,n)$(ord(n) gt 1 AND ord(n) lt card(n) ).. Ship(s,n)=E=0
      ;
 541  *Ship_constraint(s,n)$(Dst(s,n) eq 0).. Ship_sales(s,n)=E=0;
 542  Ship_constraint(s,n)$(NOT Dst(s,n) gt 0).. Ship_sales(s,n)=E=0;
 543   
 544  *NoTaskRunningAtEndOfHorizon(i,j,n)$(ord(n) eq card(n) and Ij(i,j))..   su
      m(hbar$(ord(hbar)-1 le pi_new(i)-1),Wbar(i,j,n,hbar))=E=0;
 545  NoShip(s,n)$(ord(n) lt card(n)/2 and sameas(s,'M4')).. Ship_sales(s,n)=E=0
      ;
 546  *NoShip(s,n)$(ord(n) lt card(n)/2).. Ship_sales(s,n)=E=0;
 547   
 548  NoTaskStart(i,j,n,hbar)$(ord(n)-1 eq 0 AND ord(hbar)-1 eq 0).. Wbar(i,j,n,
      hbar)=E=0;
 549   
 550  *****************
 551  *DISTURBANCE VARIABLES
 552  *Build feature rich instances and do rigorous testing
 553  *****************
 554   
 555  SET attributes_states /W,B/;
 556  PARAMETERS
 557  record_states_raw(run,calc,attributes_states,i,j,n,hbar),
 558  record_states(run,calc,attributes_states,i,j,n,hbar),
 559  record_objective(run,calc),
 560  record_utility(run,calc,u,n),
 561  record_inventory(run,calc,s,n),
 562  record_inventory_raw(run,calc,s,n),
 563  record_backlog(run,calc,s,n),
 564  record_backlog_raw(run,calc,s,n),
 565  record_inventoryTerminal(run,calc,s),
 566  record_backlogTerminal(run,calc,s)
 567  record_T(run,calc,i,j,hbar)
 568  record_shipment(run,calc,s,n)
 569  record_shipment_sales(run,calc,s,n)
 570  record_shipment_sales_raw(run,calc,s,n)
 571  record_Rst(run,calc,s,n)
 572  record_shipment_raw(run,calc,s,n)
 573  record_Rst_raw(run,calc,s,n)
 574  record_yieldloss(run,calc,i,j,s,n)
 575  record_demands(run,calc,s,n)
 576  record_WbarInfo(run,calc,i,j,n,hbar)
 577  record_BbarInfo(run,calc,i,j,n,hbar)
 578  record_Demands_realization(run,s,h)
 579  record_fixed_decision(calc)
 580  record_reschedule_flag(calc,run)
 581  record_relaxed_objective(run,calc) Objective from solving RMIP
 582  record_relaxed_states(run,calc,attributes_states,i,j,n,hbar) states from s
      olving RMIP
 583  record_relaxed_shipment(run,calc,s,n)
 584  record_relaxed_shipment_sales(run,calc,s,n)
 585  record_relaxed_backlog(run,calc,s,n);
 586   
 587  record_states_raw(run,calc,attributes_states,i,j,n,hbar)=0;
 588  record_states(run,calc,'B',i,j,n,hbar)=0;
 589  record_states(run,calc,'W',i,j,n,hbar)=0;
 590  record_inventory(run,calc,s,n)=0;
 591  record_inventory_raw(run,calc,s,n)=0;
 592  record_backlog(run,calc,s,n)=0;
 593  record_backlog_raw(run,calc,s,n)=0;
 594  record_T(run,calc,i,j,hbar)=0;
 595  record_shipment(run,calc,s,n)=0 ;
 596  record_Rst(run,calc,s,n)=0;
 597  record_shipment_raw(run,calc,s,n)=0;
 598  record_shipment_sales_raw(run,calc,s,n)=0;
 599  record_shipment_sales(run,calc,s,n)=0;
 600  record_Rst_raw(run,calc,s,n)=0;
 601  record_yieldloss(run,calc,i,j,s,n)=0;
 602  record_demands(run,calc,s,n)=0;
 603  record_WbarInfo(run,calc,i,j,n,hbar)=0;
 604  record_BbarInfo(run,calc,i,j,n,hbar)=0;
 605  record_Demands_realization(run,s,h)=0;
 606  record_fixed_decision(calc)=0;
 607  record_reschedule_flag(calc,run)=0;
 608  record_relaxed_objective(run,calc)=0;
 609  record_relaxed_states(run,calc,attributes_states,i,j,n,hbar)=0;
 610  record_relaxed_shipment(run,calc,s,n)=0;
 611  record_relaxed_shipment_sales(run,calc,s,n)=0;
 612  record_relaxed_backlog(run,calc,s,n)=0;
 613   
 614  *Initial conditions for first optimization horizon
 615  PARAMETERS InitialBbar(i,j,n,hbar),InitialWbar(i,j,n,hbar),InitialInventor
      y(s),InitialBacklog(s);
 616  InitialBbar(i,j,n,hbar)=0;
 617  InitialWbar(i,j,n,hbar)=0;
 618  InitialInventory(s)=0;
 619  InitialBacklog(s)=0;
 620   
 621  *if (%InitialInventoryFlag% eq 1,
 622  *Start with half day of inventory
 623  *InitialInventory(s)$product_states(s)=12*demand_magnitude/demand_cycletim
      e;
 624  *);
 625  InitialInventory(s)$product_states(s)=0*demand_magnitude/demand_cycletime;
 626   
 627   
 628  *MODEL P1 /all/;
 629  MODEL MIN_COST /
 630  numberOfBatches,
 631  Allocation,
 632  UnitCapacityMax,
 633  UnitCapacityMin,
 634  *InventoryLimit,
 635  InventoryBalance,
 636  EndingInventory,
 637  BacklogBalance,
 638  EndingBacklog,
 639  *UtilityLimit,
 640  *UtilityBalance,
 641  *UnitUnavailabality,
 642  LiftingW,
 643  LiftingB,
 644  Carryover_W,
 645  Carryover_B,
 646  objective_MIN_COST/;
 647   
 648  MODEL MAX_PROFIT_1 /
 649  numberOfBatches,
 650  Allocation,
 651  UnitCapacityMax,
 652  UnitCapacityMin,
 653  Carryover_B
 654  InventoryBalance_MAX_PROFIT,
 655  LiftingW,
 656  BacklogBalance
 657  LiftingB,
 658  Carryover_W,
 659  objective_MAX_PROFIT
 660  Ship_constraint
 661  EndingInventory_MAX_PROFIT,
 662  EndingBacklog/;
 663   
 664  MODEL MAX_PROFIT_2 /
 665  numberOfBatches,
 666  Allocation,
 667  UnitCapacityMax,
 668  UnitCapacityMin,
 669  InventoryBalance_MAX_PROFIT,
 670  EndingInventory_MAX_PROFIT,
 671  BacklogBalance,
 672  EndingBacklog,
 673  LiftingW,
 674  LiftingB,
 675  Carryover_W,
 676  Carryover_B,
 677  objective_MAX_PROFIT
 678  Ship_constraint/;
 679   
 680  MODEL MAX_PROFIT_SellAnytime /
 681  numberOfBatches,
 682  Allocation,
 683  UnitCapacityMax,
 684  UnitCapacityMin,
 685  InventoryBalance_MAX_PROFIT,
 686  EndingInventory_MAX_PROFIT,
 687  BacklogBalance,
 688  EndingBacklog,
 689  LiftingW,
 690  LiftingB,
 691  Carryover_B,
 692  Carryover_W,
 693  objective_MAX_PROFIT
 694  NoTaskStart/;
 695  MODEL MAX_PROFIT_SellAnytime_Greedy /
 696  numberOfBatches,
 697  Allocation,
 698  UnitCapacityMax,
 699  UnitCapacityMin,
 700  InventoryBalance_MAX_PROFIT,
 701  EndingInventory_MAX_PROFIT,
 702  BacklogBalance,
 703  EndingBacklog,
 704  LiftingW,
 705  LiftingB,
 706  Carryover_B,
 707  Carryover_W,
 708  objective_MAX_PROFIT_Greedy /;
 709   
 710  MODEL MAX_PROFIT_GREEDY /
 711  numberOfBatches,
 712  Allocation,
 713  UnitCapacityMax,
 714  UnitCapacityMin,
 715  InventoryBalance_MAX_PROFIT,
 716  EndingInventory_MAX_PROFIT,
 717  BacklogBalance,
 718  EndingBacklog,
 719  LiftingW,
 720  LiftingB,
 721  Carryover_W,
 722  Carryover_B,
 723  *objective_MAX_PROFIT
 724  objective_MAX_PROFIT_Greedy
 725  Ship_constraint/;
 726  *NoShip/;
 727   
 728  MODEL MAX_PROFIT_NOSHIP /
 729  numberOfBatches,
 730  Allocation,
 731  UnitCapacityMax,
 732  UnitCapacityMin,
 733  InventoryBalance_MAX_PROFIT,
 734  EndingInventory_MAX_PROFIT,
 735  BacklogBalance,
 736  EndingBacklog,
 737  LiftingW,
 738  LiftingB,
 739  Carryover_W,
 740  Carryover_B,
 741  objective_MAX_PROFIT
 742  *objective_MAX_PROFIT_Greedy
 743  Ship_constraint
 744  NoShip/;
 745   
 746  MODEL MAX_PROFIT_GREEDY_NOSHIP /
 747  numberOfBatches,
 748  Allocation,
 749  UnitCapacityMax,
 750  UnitCapacityMin,
 751  InventoryBalance_MAX_PROFIT,
 752  EndingInventory_MAX_PROFIT,
 753  BacklogBalance,
 754  EndingBacklog,
 755  LiftingW,
 756  LiftingB,
 757  Carryover_W,
 758  Carryover_B,
 759  *objective_MAX_PROFIT
 760  objective_MAX_PROFIT_Greedy
 761  Ship_constraint
 762  NoShip/;
 763   
 764  *SHIPMENT/;
 765   
 766   
 767  T.l(i,j,hbar)=0;
 768  *Parameters for Gantt Charting in Excel
 769  *END OF MODEL FILE
 770   
 771   
 772   
 773   
 774  PARAMETER runcost(run) cost of implemented closed loop
 775           runcost_Inv(run) Inventory cost,runcost_BO(run) Backlog cost, run
      cost_W(run) start_cost_of_tasks
 776           runprofit(run) closed loop profit in MAX_profit
 777           sales_profit(run);
 778   
 779           runcost_Inv(run)=0;runcost_BO(run)=0; runcost_W(run)=0;runcost(ru
      n)=0; runprofit(run)=0;sales_profit(run)=0;
 780   
 781  PARAMETER modelStat(calc,run)     Should be 1 for successful optimization
 782            BOStat_OL(calc,run)     If 1 means open loop had non zero back o
      rder
 783            BOStat_CL(calc,run)     If 1 means closed loop had non zero back
       order
 784            IntegralityGap(calc,run)
 785            Est_modelGap1(calc,run)  Estimated optimality gap by CPLEX (obj.
      val in denominator)
 786            Est_modelGap2(calc,run)  Estimated optimality gap by CPLEX (obj.
      Est in denominator)
 787            True_modelGap(calc,run) True optimality gap obtained by solving 
      to optcr=0
 788            ETSolve(calc,run)
 789            ETSolver(calc,run)
 790            iterUsd(calc,run)
 791            nodUsd(calc,run)
 792            resUsd(calc,run)
 793            numDVar(calc,run)
 794            numEqu(calc,run)
 795            numInfes(calc,run)
 796            numNZ(calc,run)
 797            numVar(calc,run)
 798            solveStat(calc,run)
 799            Suboptimal_objective /0/
 800            Optimal_Objective /0/
 801            TimeToSolveOptimal(calc,run);
 802   
      ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
      ******DEMAND INFORMATION*****************************
      *Each order for all products
      SET         o orders /o1*o%H%/;
      PARAMETER deliveries_time(o,run);
      deliveries_time(o,run)=demand_cycletime*ord(o);
      PARAMETER deliveries(o,s);
      deliveries(o,s)$(product_states(s))=demand_magnitude;
      ******DEMAND INFORMATION*****************************
       
      PARAMETER Dst_full(s,h);
      Dst_full(s,h)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(deliveries_time(o)/
      %delta%)));
       
      PARAMETER Dst_full_realization(s,h,run);
      Dst_full_realization(s,h,run)=Dst_full(s,h);
       
      *IF(%Demand_Disturbance_flag% eq 1,
               LOOP(run,
                  deliveries_time(o,run)=deliveries_time(o,run)+UniformInt(-dema
      nd_variation,demand_variation);
                  Dst_full_realization(s,h,run)=(Dst_full(s,h)+Dst_full(s,h)*uni
      formInt(-lambda_Demand,lambda_Demand)  )$(Dst_full(s,h) gt 0);
               );
      *);
      ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 828  ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 829  ******DEMAND INFORMATION*****************************
 830  *Each order for all products
 831  SET         o orders /o1*o216/;
 832  PARAMETER deliveries_time(o,run);
 833  deliveries_time(o,run)=demand_cycletime*ord(o);
 834  PARAMETER deliveries(o,s);
 835  deliveries(o,s)$(product_states(s))=demand_magnitude;
 836  ******DEMAND INFORMATION*****************************
 837   
 838  PARAMETER Dst_full_realization(s,h,run),Dst_full(s,h);
 839   
 840  *IF(%Demand_Disturbance_flag% eq 1,
 841  LOOP(run,
 842    deliveries_time(o,run)=deliveries_time(o,run)+UniformInt(-demand_variati
      on,demand_variation);
 843    Dst_full_realization(s,h,run)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(d
      eliveries_time(o,run)/1)));
 844    Dst_full_realization(s,h,run)=(Dst_full_realization(s,h,run)+Dst_full_re
      alization(s,h,run)/100*uniformInt(-lambda_Demand*100,lambda_Demand*100)  )
      $(Dst_full_realization(s,h,run) gt 0);
 845  );
 846  *Dst_full_realization(s,h,run)$(ord(h)-1 le 6 OR ord(h)-1 gt 13)=0;
 847  *Dst_full_realization(s,h,run)$(ord(h)-1 le 6)=0;
 848  *);
 849  ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 850   
 851   
 852  PARAMETER ClosedLoopINV(run,s,h),ClosedLoopBO(run,s,h),ClosedLoopShip(run,
      s,h),ClosedLoopShip_sales(run,s,h),
 853            ClosedLoopStart(run,h),Cost_EndInventory(run),ClosedLoopExecutio
      ns(run,i);
 854  ClosedLoopINV(run,s,h)=0;
 855  ClosedLoopBO(run,s,h)=0;
 856  ClosedLoopShip(run,s,h)=0;
 857  ClosedLoopShip_sales(run,s,h)=0;
 858  ClosedLoopStart(run,h)=0;
 859  Cost_EndInventory(run)=0;
 860  ClosedLoopExecutions(run,i)=0;
 861  *This parameter switches to 1 at end of this file
 862  *indicating a succesful run(sweep of code) throughout
 863  PARAMETER SUCCESS /0/;
 864   
 865   
 866  PARAMETER timeLeft /0/;
 867  PARAMETER endingSeed /0/;
 868  *PARAMETER sample /0/;
 869   
 870  ********************STOPPING CRITERION*************
      PARAMETER mean_runcost(run), std_dev_runcost(run), delta_std_dev_runcost(r
      un), max_delta_std_dev_runcost(run), N_run count of runs;
      mean_runcost(run)=0;
      std_dev_runcost(run)=0;
      delta_std_dev_runcost(run)=0;
      max_delta_std_dev_runcost(run)=0;
      N_run=0;
      ALIAS(run,run_p);
      ********************STOPPING CRITERION*************
 881   
 882  ********************[Start] Evaluations Runs *****************************
      **********
 883  loop(run,
      put screen;
      put 'I am on run ' run.tl;
      putclose;
      put log;
      put 'I am on run ' run.tl;
      putclose;
 892   
 893  *We need to reset Dst_full(s,h) with each run to nominal values
 894  *and then as MH goes forward, Dst_full slowly takes the value of Dst_full_
      realization
 895  *for that particular run, after which here we need to refresh it to nomina
      l values
 896  Dst_full(s,h)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(deliveries_time(o,r
      un)/1)));
 897   
 898  if(0 eq 1,
 899  abort$1 "Look into robust case demand generation in MasterFile and make su
      re its correct";
 900           Dst_full(s,h)=Dst_full(s,h)*(1+ lambda_Demand);
 901  );
 902  *this time sample is equal to 1, so we are in evaluation mode
 903   
 904  ********CLOSED-LOOP SOLUTION*********
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code\ModelSolution9.gms
 906  OPTIONS limrow = 0, limcol = 0, solprint = off;
 907  *OPTIONS limrow = 1000, limcol = 1000, solprint = on;
 908  *No upper limit on inventory (equation not enforced)
 909   
 910  loop(calc,
 911  *Caution: Watch out W equations in case changeovers are involved with rega
      rds to lifting(pi(i)+tauC)
 912  *fixed_decisions=re_freq-1-mod(ord(calc)-1+re_freq-1,re_freq);
 913  *abort$1 "stopped for debugging";
 914  *abort$(ord(calc)-1 eq 1) "stopped for debugging";
 915   
      IF(ord(calc)-1 eq 4,
      rhobar('T2','M3')=0.79;
      rhobar('T2','M2')=0.21;
      *T2.(M3 0.8,M2 0.2)
      );
 923   
 924  *********VARIABLE RESCHEDULING FREQUENCY********
 925  *resetting old parameter values
 926  WbarInfo(i,j,n,hbar)=0;
 927  BbarInfo(i,j,n,hbar)=0;
 928   
 929  *DEMAND SAMPLING
 930  *Picking realized demand upto surprise factor within MH from demand_sample
       generated for this run
 931          Dst_full(s,h)$(ord(h)-1 le (ord(calc)-1 + ceil(card(n)*(1-surprise
      ))) ) = Dst_full_realization(s,h,run);
 932  *Now allocating demands to the rolling horizon calculation
 933          Dst(s,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Dst_full(s,h
      ));
      IF(ord(calc)-1 eq 5,
      Dst(s,n)$(product_states(s) and ord(n)-1 eq 7 and sameas(s,'M3'))=15;
      );
      * EVENT BASED RESCHEDULING (HAS BUG: when moving horizon is shorter than r
      escheduling freq, more decisions
      *are wrongly fixed)
      if (re_freq=0,
      *Reschedule flag is 1 for first optimization
              reschedule_flag=0;
      *Now see if we should reschedule or not depending on whether new demand ca
      me or not
              reschedule_flag=1$(sum((s,n)$(ord(n) eq card(n)),Dst(s,n)) > 0);
      *Also do find schedule for the very first optimization
              reschedule_flag$(ord(calc)-1 eq 0)=1;
      *Now decide the fixed decisions (W,B) depending on rescheduling_flag
              if (reschedule_flag=1,
      *Complete freedom to start new tasks (subject to old tasks not already run
      ning)
                      fixed_decisions=0;
              else
      *Forced to follow previous fixed (planned) decisions
                      fixed_decisions=card(n)-1;
              );
      else
 959          fixed_decisions=re_freq-1 - mod(ord(calc)-1+(re_freq-1),re_freq);
 960          reschedule_flag=0;
 961          reschedule_flag$(fixed_decisions=0)=1;
 962  *);
 963  record_fixed_decision(calc)=fixed_decisions;
 964  record_reschedule_flag(calc,run)=reschedule_flag;
 965   
 966  *Unfix fixed variables
 967  Ship.lo(s,n)=0;Ship.up(s,n)=Inf;
 968  Rst.lo(s,n)=0;Rst.up(s,n)=Inf;
 969  Ship_sales.lo(s,n)=0;Ship_sales.up(s,n)=Inf;
 970  *Uut.lo(u,n)=0; Uut.up(u,n)=Inf;
 971  *Fix Input states
 972  WbarInfo(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 le pi(i)
       and Ij(i,j))=record_states(run,calc-1,'W',i,j,n,hbar-1)+InitialWbar(i,j,n
      ,hbar)$(ord(calc)-1 eq 0)+Yhat(i,j,n,hbar)-Yhat(i,j,n,hbar-1);
 973  BbarInfo(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 le pi(i)
       and Ij(i,j))=record_states(run,calc-1,'B',i,j,n,hbar-1)+InitialBbar(i,j,n
      ,hbar)$(ord(calc)-1 eq 0)+record_states(run,calc-1,'B',i,j,n,hbar)*Yhat(i,
      j,n,hbar)-record_states(run,calc-1,'B',i,j,n,hbar-1)*Yhat(i,j,n,hbar-1);
 974  Ship.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_shipment(run,calc-1,s,
      n+1);
 975  Rst.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_Rst(run,calc-1,s,n+1);
 976  Ship_sales.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_shipment_sales(r
      un,calc-1,s,n+1);
 977  T.fx(i,j,hbar)=0;
 978  *********VARIABLE RESCHEDULING FREQUENCY********
 979  *(Variable rescheduling frequency does not extend to disturbances other th
      an demand)
 980   
 981  *Since inventory and backlog depend on the inputs, as long as we have corr
      ectly carried over the inventory we are good
 982  Sst.fx(s,n)$(ord(n)-1 le 0)=record_inventory(run,calc-1,s,n+1)+InitialInve
      ntory(s)$(ord(calc)-1 eq 0);
 983  Backlog.fx(s,n)$(ord(n)-1 le 0)=record_backlog(run,calc-1,s,n+1)+InitialBa
      cklog(s)$(ord(calc)-1 eq 0);
 984  *Uut.fx(u,n)$(ord(n)-1 le 0)=record_utility(run,calc-1,u,n+1);
 985   
 986   
 987  *Fix backlogs to zero if corresponding flag is 0
 988  if(1 eq 0,
 989  Backlog.fx(s,n)=0;
 990  BacklogTerminal.fx(s)=0;
 991  );
 992  *Dst(s,n)$(product_states(s) AND ord(n) eq 1) = 1;
 993  *Ship_sales.fx(s,n)$(ord(n)-1 eq 0 AND sameas(s,'M4')) = 8.05;
 994  *Ship_sales.fx(s,n)$(ord(n) lt card(n)) = 0;
 995   
 996  *cc=execseed;
 997  ***************SAMPLING DISTURBANCES/UNCERTAINTIES************************
      ******
 998  *Introducing disturbance in demand by modifying Dst_full(s,h) only if Dist
      urbance flag is 1(on)
 999  *if(%Demand_Disturbance_Flag% eq 1,
1000  *);
1001   
1002  **UNCOMMENT HERE TO HERE  (commented for event based rescheduling)
1003  **        Dst_full(s,h)$(ord(h)-1 le (ord(calc)-1 + ceil(card(n)*(1-surpri
      se))) )=Dst_full_realization(s,h,run);
1004  *Now allocating demands to the rolling horizon calculation
1005  *        Dst(s,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Dst_full(s,
      h));
1006  **UNCOMMENT HERE TO HERE
1007  *Display Dst_full;
1008   
1009   
1010  *UnitBreakdown disturbance
1011  *First breakdown unit for whole horizon and then sample after 1 time step
1012  *when it is coming back
1013  UnitBroken(j,n)=0;
1014  Zhat(i,j,n,hbar)=0;
1015  if(0 eq 1 and ord(calc)-1 ge 2,
1016           Breakdown(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and De
      lay(calc-1,i,j,hbar-1) eq 0)=1$(uniform(0,1) le lambda_UnitBreakdown and D
      uration_breakdown(calc-1,j) eq 0 and (sum(n$(ord(n)-1 eq 0),record_states(
      run,calc-1,'W',i,j,n,hbar-1)) gt 0));
1017   
1018  *If there is a delay ongoing then sample this breakdown
1019           Breakdown(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and De
      lay(calc-1,i,j,hbar) gt 0)=1$(uniform(0,1) le lambda_UnitBreakdown and Dur
      ation_breakdown(calc-1,j) eq 0 and (sum(n$(ord(n)-1 eq 0),record_states(ru
      n,calc-1,'W',i,j,n,hbar)) gt 0));
1020   
1021  *Assume on breakdown that the unit by default is not available the whole r
      emaining horizon and then
1022  *resample after one time step when it is due to come back[here half of rol
      ling horizon length]
1023   
1024  *         Duration_breakdown(calc,j)=floor(uniform(0,card(n)/2))$(sum((hba
      r,i)$(Ij(i,j) and ord(hbar)-1 le pi(i)),Breakdown(calc-1,i,j,hbar)) eq 1 a
      nd Duration_breakdown(calc-1,j) eq (card(h)))
1025  *                                         +(Duration_breakdown(calc-1,j)-1
      )$(Duration_breakdown(calc-1,j) gt 0 and Duration_breakdown(calc-1,j) lt c
      ard(h))
1026  *                                         +card(h)$(sum((hbar,i)$(Ij(i,j) 
      and ord(hbar)-1 le pi(i)),Breakdown(calc,i,j,hbar)) eq 1);
1027           Duration_breakdown(calc,j)=time_to_bring_unit_back_online$(sum((h
      bar,i)$(Ij(i,j) and ord(hbar)-1 le pi(i)),Breakdown(calc-1,i,j,hbar)) eq 1
       and Duration_breakdown(calc-1,j) eq (card(h)))
1028                                           +(Duration_breakdown(calc-1,j)-1)
      $(Duration_breakdown(calc-1,j) gt 0 and Duration_breakdown(calc-1,j) lt ca
      rd(h))
1029                                           +(card(h))$(sum((hbar,i)$(Ij(i,j)
       and ord(hbar)-1 le pi(i)),Breakdown(calc,i,j,hbar)) eq 1);
1030  *display Breakdown,duration_breakdown;
1031   
1032           UnitBroken(j,n)=0;
1033           UnitBroken(j,n)$(ord(n)-1 lt Duration_breakdown(calc,j))=1;
1034   
1035           Zhat(i,j,n,hbar)=0;
1036           Zhat(i,j,n,hbar)$(ord(n)-1 eq 0 and Breakdown(calc,i,j,hbar) eq 1
      )=1;
1037   
1038  );
1039   
1040   
1041   
1042  *Disturbance associated with delay in tasks, hbar indicates the running st
      atus of the task
1043  *Due to nature of lifting, there is already a 1 time unit lag, hence we li
      mit hbar from 0 to pi(i)
1044  *so that recordstates is accessed only upto pi(i)-1. Record state being pi
      (i) means that the task
1045  *was already over in the last horizon
1046  if(0 eq 1,
1047  *          Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i))=(Delay(
      calc-1,i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) ge 1)
1048  *                                                            +2$(uniform(0
      ,1) ge 0 and (sum(n$(ord(n)-1 eq 0),record_states(calc-1,'W',i,j,n,hbar-1)
      ) gt 0) and Delay(calc-1,i,j,hbar-1) eq 0);
1049            Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i))=(Delay(c
      alc-1,i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) ge 1);
1050            Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and Delay
      (calc-1,i,j,hbar) eq 0)=default_delay_length$(uniform(0,1) ge 0.6 and (sum
      (n$(ord(n)-1 eq 0),record_states(run,calc-1,'W',i,j,n,hbar-1)) gt 0 and De
      lay(calc-1,i,j,hbar-1) eq 0));
1051  *          Delay(calc,i,j,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=(Delay(calc-1,
      i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) gt 0)
1052  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=1$(uniform(0,1) gt
       0 and record_states(calc-1,'W',i,j,n,hbar-1) gt 0);
1053   
1054  *display Delay;
1055  *Wipes out previous Yhats
1056            Yhat(i,j,n,hbar)=0;
1057  *Over-rides Delays with Unit breakdown. ie if unit breakdown occurs then t
      here cannot be a delay
1058            Delay(calc,i,j,hbar)=Delay(calc,i,j,hbar)$(sum(n$(ord(n)-1 eq 0)
      ,Zhat(i,j,n,hbar)+Zhat(i,j,n,hbar+1)) eq 0);
1059  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=1$(Delay(calc,i,j,
      hbar) gt 0);
1060            Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 lt Delay(calc,i,j,hbar))=
      1$(Delay(calc,i,j,hbar) gt 0);
1061   
1062  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0 and ord(hbar)-1 le 
      pi(i))=1$(uniform(0,1) ge 0 and record_states(calc-1,'W',i,j,n,hbar) gt 0)
      ;
1063  *          WbarInfo(i,j,n,hbar)$Yhat(i,j,n,hbar)=1;
1064  *          BbarInfo(i,j,n,hbar)$Yhat(i,j,n,hbar)=record_states(calc-1,'W',
      i,j,n,hbar);
1065  );
1066   
1067  *display Yhat;
1068  *display WbarInfo;
1069  *display BbarInfo;
1070   
1071   
1072  *Introducing disturbance in material handling(loading/unloading)
1073  *Here we implement only production disturbance because its more likely tha
      n consumption disturbance
1074  *Consumption disturbance has the tricky part that if loading was 5 units, 
      and we had just 5 units, the task is already started and we cant
1075  *then add a disturbance on top of it saying 5.5 units was actually consume
      d because the task has already started.
1076  if(0 eq 1,
1077  *the last two multiplication of (1-z(h+1))(1-z(h)) are when there are only
       unit breakdown, and when there is unit breakdown in middle of delay respe
      ctively
1078  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0 and produc
      t_states(s))=uniform(-0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),rec
      ord_states(calc-1,'B',i,j,n,hbar)*(1-Yhat(i,j,n,hbar+1))*(1-Zhat(i,j,n,hba
      r+1))*(1-Zhat(i,j,n,hbar)));
1079  *wipes out previous parameter values
1080  betaHatProd(i,j,s,n)=0;
1081   
1082  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-
      0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)),BbarInfo(i,j,n,hbar)*(1-Yha
      t(i,j,n,hbar))*(1-Zhat(i,j,n,hbar))*(1-Zhat(i,j,n,hbar-1)));
1083   
1084  betaHatProd(i,j,s,n)$(sameas(i,'T2') and Tbars(i,s) and Ij(i,j) and ord(n)
      -1 eq 0)=-0.01*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)),BbarInfo(i,j,n,hbar
      )*(1-Yhat(i,j,n,hbar))*(1-Zhat(i,j,n,hbar))*(1-Zhat(i,j,n,hbar-1)));
1085  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-
      0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),record_states(calc-1,'B',
      i,j,n,hbar)*(1-Yhat(i,j,n,hbar+1))*(1-Zhat(i,j,n,hbar)));
1086  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-
      0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),record_states(calc-1,'B',
      i,j,n,hbar));
1087  );
1088  *Display betaHatProd;
1089   
1090   
1091  *Correct allocation constraint
1092  *KillDurationCountdown(i,j)$Ij(i,j)=%KillSwitch%$(sum(hbar,T.l(i,j,hbar)) 
      gt 0);
1093  KillOccupy(j,n)=0;
1094  KillDuration(i,j)$Ij(i,j)=KillLength$(0);
1095  *KillDuration(i,j)$Ij(i,j)=(%KillSwitch%+1)$(sum(hbar,T.l(i,j,hbar)) gt 0 
      and KillDuration(i,j) eq 0);
1096  *KillDuration(i,j)$(Ij(i,j) and KillDuration(i,j) <> 0)=KillDuration(i,j)-
      1;
1097  KillCountdown(j)=sum((i,hbar)$Ij(i,j),T.l(i,j,hbar)*KillDuration(i,j))  +(
      KillCountdown(j)-1)$(KillCountdown(j) gt 0);
1098  KillOccupy(j,n)$(ord(n)-1 lt KillCountdown(j)-1)=1;
1099  if(0 eq 0,
1100     T.fx(i,j,hbar)=0;
1101  );
1102  *Display Breakdown,Duration_breakdown,UnitBroken,Zhat,KillOccupy;
1103  ***************SAMPLING DISTURBANCES/UNCERTAINTIES************************
      ******
1104   
1105  ***************UTILITIES**************************************************
      ******
1106  Uutmax(u,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Uutmax_full(u,h))
      ;
1107  Unitunavailable(j,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Unitunav
      ailable_full(j,h));
1108  Cut(u,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Cut_full(u,h));
1109  *Correct Cutfull calculation, all the relation of taking hours to time poi
      nts
1110  *This correction is needed in model file
1111  ***************UTILITIES**************************************************
      ******
1112  *Display Dst;
1113   
1114  *abort$(sameas(calc,"calc25")) "stopped for debugging";
1115  *Solve optimization horizon
1116   
1117  Option IntVarUp=0;
1118  *******************FIND OPEN LOOP SCHEDULE********************************
      ******
1119  MIN_COST.optcr = optcr_value$(reschedule_flag)+1$(NOT reschedule_flag);
1120  MIN_COST.reslim = timelimit;
1121  MIN_COST.holdFixed=1;
1122  solve MIN_COST using MIP MINIMIZING obj_variable;
1123   
1124  modelStat(calc,run)=MIN_COST.ModelStat;
1125  *Watch out what should be denominator, Relaxed or Best found solution
1126  *Cplex uses division by best found integer solution
1127  Est_modelGap1(calc,run)=abs((MIN_COST.objEst-MIN_COST.objVal)/(MIN_COST.ob
      jVal+1E-10));
1128  Est_modelGap2(calc,run)=abs((MIN_COST.objEst-MIN_COST.objVal)/(MIN_COST.ob
      jEst+1E-10));
1129  Suboptimal_objective=MIN_COST.objVal;
1130   
1131  ETSolve(calc,run)=MIN_COST.etSolve;
1132  ETSolver(calc,run)=MIN_COST.etSolver;
1133  iterUsd(calc,run)=MIN_COST.iterUsd;
1134  nodUsd(calc,run)=MIN_COST.nodUsd;
1135  resUsd(calc,run)=MIN_COST.resUsd;
1136  numDVar(calc,run)=MIN_COST.numDVar;
1137  numEqu(calc,run)=MIN_COST.numEqu;
1138  numInfes(calc,run)=MIN_COST.numInfes;
1139  numNZ(calc,run)=MIN_COST.numNZ;
1140  numVar(calc,run)=MIN_COST.numVar;
1141  solveStat(calc,run)=MIN_COST.solveStat;
1142   
1143  *Recording optimized variables for each optimization horizon
1144  record_states_raw(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,
      j))= Bbar.l(i,j,n,hbar);
1145  record_states_raw(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,
      j))= Wbar.l(i,j,n,hbar);
1146  record_states(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))=
       round(Bbar.l(i,j,n,hbar),2)$(Bbar.l(i,j,n,hbar) ge vminij(i,j)+Small_numb
      er and Bbar.l(i,j,n,hbar) le vmaxij(i,j)-Small_number) + round(Bbar.l(i,j,
      n,hbar))$(NOT (Bbar.l(i,j,n,hbar) ge vminij(i,j)+Small_number and Bbar.l(i
      ,j,n,hbar) le vmaxij(i,j)-Small_number));
1147  record_states(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))=
       round(Wbar.l(i,j,n,hbar));
1148  record_T(run,calc,i,j,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))= T.l(i,j,hb
      ar);
1149  record_inventory(run,calc,s,n)=round(Sst.l(s,n),3);
1150  record_backlog(run,calc,s,n)=round(Backlog.l(s,n),3);
1151  record_inventory_raw(run,calc,s,n)=Sst.l(s,n);
1152  record_backlog_raw(run,calc,s,n)=Backlog.l(s,n);
1153  record_yieldloss(run,calc,i,j,s,n)=betaHatProd(i,j,s,n);
1154  record_objective(run,calc)=obj_variable.l;
1155  record_utility(run,calc,u,n)=Uut.l(u,n);
1156  record_inventoryTerminal(run,calc,s)=SstTerminal.l(s);
1157  record_backlogTerminal(run,calc,s)=BacklogTerminal.l(s);
1158  record_shipment_raw(run,calc,s,n)=Ship.l(s,n);
1159  record_shipment(run,calc,s,n)=round(Ship.l(s,n),2);
1160  record_shipment_sales_raw(run,calc,s,n)=Ship_sales.l(s,n);
1161  record_shipment_sales(run,calc,s,n)=round(Ship_sales.l(s,n),2);
1162  record_Rst_raw(run,calc,s,n)=Rst.l(s,n);
1163  record_Rst(run,calc,s,n)=round(Rst.l(s,n),2);
1164  record_demands(run,calc,s,n)=Dst(s,n);
1165  record_Demands_realization(run,s,h)=Dst_Full_Realization(s,h,run);
1166   
1167  record_WbarInfo(run,calc,i,j,n,hbar)=WbarInfo(i,j,n,hbar);
1168  record_BbarInfo(run,calc,i,j,n,hbar)=BbarInfo(i,j,n,hbar);
1169   
1170  BOStat_OL(calc,run) =  1$(sum((s,n),record_backlog(run,calc,s,n)+record_ba
      cklogTerminal(run,calc,s)) > 0);
1171  BOStat_CL(calc,run) =  1$(sum((s,n)$(ord(n)-1 eq 0),record_backlog(run,cal
      c,s,n)) > 0);
1172   
1173  *display ship.l;
1174  Optimal_Objective=Suboptimal_Objective;
1175  ***********************FIND OPTIMAL OBJECTIVE IF OPTCR <>0****************
      *
1176  IF(MIN_COST.optcr <> 0 AND reschedule_flag eq 1,
      put screen;
      put 'Now solving optimal open loop';
      putclose;
1182  MIN_COST.optcr=0;
1183  solve MIN_COST using MIP MINIMIZING obj_variable;
1184  Optimal_Objective=MIN_COST.objVal;
1185  True_modelGap(calc,run)=(Suboptimal_objective-Optimal_Objective)/(Optimal_
      objective+1E-10);
1186  TimeToSolveOptimal(calc,run)=MIN_COST.resUsd;
1187  );
1188   
1189  ***********************FIND OPTIMAL OBJECTIVE IF OPTCR <>0****************
      *
1190   
1191  ******WARNING: ALL VARIABLE LEVEL VALUES ARE THOSE OF OPTCR=0 NOW*********
      *
1192   
1193  IF (reschedule_flag eq 1,
1194  ***********************SOLVE RMIP TO GET INTEGRALITY GAP*****************
1195  solve MIN_COST using RMIP MINIMIZING obj_variable;
1196  record_relaxed_objective(run,calc)=obj_variable.l;
1197  IntegralityGap(calc,run)=record_relaxed_objective(run,calc)/(Optimal_Objec
      tive+1E-10);
1198  record_relaxed_states(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and I
      j(i,j))= Bbar.l(i,j,n,hbar);
1199  record_relaxed_states(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and I
      j(i,j))= Wbar.l(i,j,n,hbar);
1200  record_relaxed_shipment(run,calc,s,n)=Ship.l(s,n);
1201  record_relaxed_shipment_sales(run,calc,s,n)=Ship_sales.l(s,n);
1202  record_relaxed_backlog(run,calc,s,n)=Backlog.l(s,n);
1203  );
1204  ***********************SOLVE RMIP TO GET INTEGRALITY GAP*****************
1205   
1206  ******WARNING: ALL VARIABLE LEVEL VALUES ARE THOSE OF RMIP NOW**********
1207   
1208  );
1209  **END OF CALC LOOP HERE
1210   
1211  *END OF SOLUTION FILE
1212   
1213   
1214   
1215  ********STORING CL-SOLUTION IN RECOGNIZABLE PARAMETERS FOR EASY ACCESS AND
       ANALAYSIS*******
1216  loop((n,calc)$(ord(n)-1 eq 0),
1217           ClosedLoopINV(run,s,h)$(ord(h) eq ord(calc))=record_inventory(run
      ,calc,s,n);
1218           ClosedLoopBO(run,s,h)$(ord(h) eq ord(calc))=record_backlog(run,ca
      lc,s,n);
1219           ClosedLoopShip(run,s,h)$(ord(h) eq ord(calc))=record_shipment(run
      ,calc,s,n);
1220           ClosedLoopShip_sales(run,s,h)$(ord(h) eq ord(calc))=record_shipme
      nt_sales(run,calc,s,n);
1221           ClosedLoopStart(run,h)$(ord(calc) eq ord(h))=sum((i,j,hbar)$(Ij(i
      ,j) AND ord(hbar)-1 eq 0),record_states(run,calc,'W',i,j,n,hbar));
1222  *         ClosedLoopStart(run,h)$(ord(calc) eq ord(h))=0;
1223  );
1224           ClosedLoopExecutions(run,i)=sum((calc,j,n,hbar)$(Ij(i,j) AND ord(
      hbar)-1 eq 0
1225                                           AND ord(n)-1 eq 0 AND ord(calc)-1
       le 24-1),
1226                                           record_states(run,calc,'W',i,j,n,
      hbar));
1227   
1228  *         runcost_Inv(run)=1E1*sum((s,h)$closed_loop(h),Cst_new(s)*Sinv(s,
      h));
1229  *         runcost_BO(run)=1E2*sum((s,h)$closed_loop(h),Cst_new(s)*BO(s,h))
      ;
1230           runcost_Inv(run)=1E1*sum((s,h)$closed_loop(h),Cst_new(s)*ClosedLo
      opINV(run,s,h));
1231           runcost_BO(run)=1E2*sum((s,h)$closed_loop(h),Cst_new(s)*ClosedLoo
      pBO(run,s,h));
1232           runcost_W(run)=sum((h)$closed_loop(h),ClosedLoopStart(run,h));
1233  *total profit from all shipments (demand+sales)
1234   
1235           runcost(run)=runcost_Inv(run)+runcost_BO(run)+runcost_W(run);
1236   
1237  *         sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(
      h) and (ord(h)-1 ne %Closed_Loop_Upper_delta%) ),
1238  *                                 Cst_new(s)*(ClosedLoopShip(run,s,h)+Clos
      edLoopShip_sales(run,s,h) ));
1239           sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(h
      ) and (ord(h)-1 ne 24) ),
1240                                   Cst_new(s)*(ClosedLoopShip_sales(run,s,h)
       ));
1241  *         sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(
      h) and (ord(h)-1 ne %Closed_Loop_Upper_delta%) ),Cst_new(s)*ClosedLoopShip
      _sales(run,s,h));
1242           Cost_EndInventory(run)=sum((s,h)$(product_states(s) and ord(h)-1 
      eq 24),Cst_new(s)*ClosedLoopINV(run,s,h));
1243  *         runcost_W(run)=0;
1244  *         runprofit(run)=sum((s,h)$(product_states(s) and closed_loop(h)),
      Cst_new(s)*ClosedLoopShip(run,s,h))+runcost_W(run);
1245  *Runprofit includes subtraction of BO even at last point because BO are wr
      itten like inventory
1246  *BO at 168 means just before 168th point. Ship at 168 means at 168 not bef
      ore or after.
1247  *Our runprofit is only for 167 points of closed loop and 168th point as co
      rrection. So we are essentially wasting the last decision
1248  *that is the open loop that was computed at 168.
1249           runprofit(run)=sales_profit(run)+Cost_EndInventory(run)
1250                           -(runcost_W(run)-sum((h)$(ord(h)-1 eq 24),ClosedL
      oopStart(run,h)))
1251                           -runcost_BO(run);
1252   
1253  *         runprofit(run)=runcost_Inv(run)-runcost_BO(run)
1254  *                        +1E1*sum((s,h)$(product_states(s) and closed_loop
      (h)),Cst_new(s)*ClosedLoopShip(run,s,h));
1255   
1256  *Does not include cost of Terminal BO and inventory but thats okay because
       they are irrelevant when some extra horizon is allowed for getting comple
      te closed loop rolling horizon solution
1257  ************[Start]Information to get very crude estimate for running time
       left**************
1258  timeLeft=MIN_COST.etSolve*(card(run)-ord(run))*card(calc);
      put screen;
      put 'Time for run ' P1.etSolve;
      put ' Estimated Time Left ' timeLeft;
      putclose;
1265  *************[End]Information to get very crude estimate for running time 
      left***************
1266   
      *************Stopping Criterion**************
      N_run=ord(run);
      mean_runcost(run)=sum(run_p$(ord(run_p) le N_run),runcost(run_p))/N_run;
      std_dev_runcost(run)$(ord(run) gt 1)= sqrt(       sum(run_p$(ord(run_p) le
       N_run),     ( abs(  runcost(run_p)-mean_runcost(run) )**2)) /(N_run-1)   
       );
      delta_std_dev_runcost(run)$(ord(run) gt 2)=std_dev_runcost(run)/std_dev_ru
      ncost(run-1)  - 1;
      max_delta_std_dev_runcost(run)= sqrt( 1 + (1.96**2-1)/N_run ) -1;
      *icdfnorm(0.95,0,1);
      *************Stopping Criterion**************
1277  );
1278  ********************[End] runs loop **************************************
      *
1279   
1280  *******************GANTT CHART PARAMETERS*********************************
      ****
1281  PARAMETERS BS(i,j,h),start(i,j,h),Sinv(s,h),end(i,j,h),BO(s,h);
1282  IF (0 eq 0,
1283           loop((run,calc)$(ord(run) eq 1),
1284             BS(i,j,h)$(ord(h) eq ord(calc))=sum((hbar,n)$(ord(hbar)-1 eq 0 
      and ord(n)-1 eq 0),record_states(run,calc,'B',i,j,n,hbar));
1285  *start(i,j,h)$(ord(h)eq ord(calc))=round(sum((hbar,n)$(ord(hbar)-1 eq 0 an
      d ord(n)-1 eq 0),record_states(calc,'W',i,j,n,hbar)));
1286             start(i,j,h)$(ord(h)eq ord(calc))=sum((hbar,n)$(ord(hbar)-1 eq 
      0 and ord(n)-1 eq 0),record_states(run,calc,'W',i,j,n,hbar));
1287             Sinv(s,h)$(ord(h) eq ord(calc))=sum(n$(ord(n)-1 eq 0),record_in
      ventory(run,calc,s,n));
1288             BO(s,h)$(ord(h) eq ord(calc))=sum(n$(ord(n)-1 eq 0),record_back
      log(run,calc,s,n));
1289           );
1290  ELSE
1291  *Write OPEN loop static gantt chart %GanttChart_OPENLOOP% eq 1
1292           loop((run,calc)$(ord(run) eq 1 and ord(calc)-1 eq 5),
1293             BS(i,j,h)$(Ij(i,j))=sum((hbar,n)$(ord(hbar)-1 eq 0 and (ord(n) 
      eq ord(h))),record_states(run,calc,'B',i,j,n,hbar));
1294             start(i,j,h)$(Ij(i,j))=sum((hbar,n)$(ord(hbar)-1 eq 0 and (ord(
      n) eq ord(h))),record_states(run,calc,'W',i,j,n,hbar));
1295             Sinv(s,h)=sum(n$(ord(n) eq ord(h)),record_inventory(run,calc,s,
      n));
1296             BO(s,h)=sum(n$(ord(n) eq ord(h)),record_backlog(run,calc,s,n));
1297           );
1298  );
1299  *Have ending account for task delays
1300  end(i,j,h) = start(i,j,h-pi_new(i))$(BS(i,j,h-pi_new(i))>0);
1301  *******************GANTT CHART PARAMETERS*********************************
      ****
1302   
1303  *******************EXPORT ALL RESULTS IN GDX FILE*************************
      ****
1304  SUCCESS=1;
1305  EXECUTE_UNLOAD 'Z_N2_MH16_RF_Uncertainty_vs_Advancement.gdx';
1306  *******************EXPORT ALL RESULTS IN GDX FILE*************************
      ****
1307   
1308  *********Generate EXCEL SHEEL FOR GANTT CHARTING (Requires windows)*******
      ****
1309  IF(1 eq 1,
1310  ************************************************
1311  ********Closed-Loop GanttChartGeneration********
1312  ************************************************
1313  *Name of the excel file where the data will be exported
1314  *$setglobal file %Results_FileName%_Gantt
1315  *i = set of tasks
1316  *j = set of units
1317  *h = set of time points
1318  *BS = batch size of task i starting in unit j at time t (must be indexed i
      jt)
1319  *start = binary variable that is 1 if task i starts in unit j at time t (m
      ust be indexed ijt)
1320  *Sinv = inventory level of material s at time t (must be indexed st)
1321  *BO= backorder of state s at time t
1322  *end =  binary variable that is 1 if task i ends in unit j at time t (must
       be indexed ijt)
1323   
1324  *EXECUTE_UNLOAD '%Results_FileName%_Gantt.gdx' BS i j h  Sinv start end;
1325   
1326  *The first word of each line gives the type: set = set, var = variable, pa
      r = parameter. This may need to be changed depending on your model
1327  *The location of the output or the sheet names must not be changed
1337   
1338  *display BS,start,end,Sinv,BO;
1339           IF (0 eq 0,
1340                    EXECUTE 'gdxxrw Input=Z_N2_MH16_RF_Uncertainty_vs_Advanc
      ement.gdx Output=Z_N2_MH16_RF_Uncertainty_vs_Advancement_Gantt_CL @GANTT_w
      rite.txt'
1341           ELSE
1342                    EXECUTE 'gdxxrw Input=Z_N2_MH16_RF_Uncertainty_vs_Advanc
      ement.gdx Output=Z_N2_MH16_RF_Uncertainty_vs_Advancement_Gantt_OL_5 @GANTT
      _write.txt'
1343           );
1344  );
1345  *********Generate EXCEL SHEEL FOR GANTT CHARTING (Requires windows)*******
      ****
1346   
1347  *END OF MASTER FILE
1348   
1349   
1350   
1351   
1352   
1353   
1354  *Watch out for overflow of solution for rolling horizon...ie the spilling 
      over of
1355  *rolling horizon beyond real horizon to get last implemented closed loop s
      olution
1356   
1357   
1358  *$set console
1359  *$if %system.filesys% == UNIX  $set console /dev/tty
1360  *$if %system.filesys% == DOS $set console con
1361  *$if %system.filesys% == MS95  $set console con
1362  *$if %system.filesys% == MSNT  $set console con
1363  *$if "%console%." == "." abort "filesys not recognized";
1364  *file screen / '%console%' /;
1365  *file log /''/
1366   
1367   
1368   
1369   
1370   
1371   
1372   
1373   
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 5
State_Space_Model
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\dhruv\Box Sync\Work\Codes\GAM
                                          S_Code\Z_N2_MH16_RF_Uncertainty_vs_Adv
                                          ancement.gms
     2       21 INCLUDE        1      21  .C:\Users\dhruv\Box Sync\Work\Codes\GA
                                           MS_Code\ConfigurationFile.gms
     3       91 INCLUDE        2      70  ..C:\Users\dhruv\Box Sync\Work\Codes\G
                                            AMS_Code\MasterFile.gms
     4      108 INCLUDE        3      17  ...C:\Users\dhruv\Box Sync\Work\Codes\
                                             GAMS_Code\NetworkN2.gms
     5      216 INCLUDE        3      18  ...C:\Users\dhruv\Box Sync\Work\Codes\
                                             GAMS_Code\Model9.gms
     6      905 INCLUDE        3     153  ...C:\Users\dhruv\Box Sync\Work\Codes\
                                             GAMS_Code\ModelSolution9.gms


COMPILATION TIME     =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 6
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc0


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.047 SECONDS      4 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.078 SECONDS      4 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc0

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 7
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            60211.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       703    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.08sec (det. 38.84 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.42 ticks)
Proven optimal solution.

MIP Solution:        60211.000000    (691 iterations, 65 nodes)
Final Solve:         60211.000000    (12 iterations)

Best possible:       60211.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 8
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc0


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc0

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 9
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            42407.2000

 RESOURCE USAGE, LIMIT          0.016       600.000
 ITERATION COUNT, LIMIT       118    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.02sec (det. 1.34 ticks)
Optimal solution found.
Objective :       42407.200000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 10
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc1


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc1

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 11
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            60410.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       765    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.08sec (det. 29.16 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.42 ticks)
Proven optimal solution.

MIP Solution:        60410.000000    (755 iterations, 41 nodes)
Final Solve:         60410.000000    (10 iterations)

Best possible:       60410.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 12
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc1


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc1

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 13
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            42406.7000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       121    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.36 ticks)
Optimal solution found.
Objective :       42406.700000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 14
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc2


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc2

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 15
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            74411.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       648    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.06sec (det. 26.96 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.42 ticks)
Proven optimal solution.

MIP Solution:        74411.000000    (637 iterations, 57 nodes)
Final Solve:         74411.000000    (11 iterations)

Best possible:       74411.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 16
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc2


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.141 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.141 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc2

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 17
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            50609.3000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT       143    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.56 ticks)
Optimal solution found.
Objective :       50609.300000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 18
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc3


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc3

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 19
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            80812.0000

 RESOURCE USAGE, LIMIT          0.094       600.000
 ITERATION COUNT, LIMIT       461    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.09sec (det. 25.67 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.43 ticks)
Proven optimal solution.

MIP Solution:        80812.000000    (446 iterations, 51 nodes)
Final Solve:         80812.000000    (15 iterations)

Best possible:       80812.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 20
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc3


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc3

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 21
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            60874.9667

 RESOURCE USAGE, LIMIT          0.047       600.000
 ITERATION COUNT, LIMIT       128    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.05sec (det. 1.40 ticks)
Optimal solution found.
Objective :       60874.966667



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 22
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc4


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc4

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 23
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            86912.0000

 RESOURCE USAGE, LIMIT          0.140       600.000
 ITERATION COUNT, LIMIT       597    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.14sec (det. 29.21 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        86912.000000    (579 iterations, 75 nodes)
Final Solve:         86912.000000    (18 iterations)

Best possible:       86912.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 24
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc4


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc4

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 25
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            67008.5000

 RESOURCE USAGE, LIMIT          0.047       600.000
 ITERATION COUNT, LIMIT       141    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.57 ticks)
Optimal solution found.
Objective :       67008.500000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 26
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc5


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc5

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 27
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            92912.0000

 RESOURCE USAGE, LIMIT          0.187       600.000
 ITERATION COUNT, LIMIT       708    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.09sec (det. 40.11 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.09sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        92912.000000    (690 iterations, 64 nodes)
Final Solve:         92912.000000    (18 iterations)

Best possible:       92912.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 28
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc5


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc5

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 29
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            67208.8000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       155    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.63 ticks)
Optimal solution found.
Objective :       67208.800000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 30
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc6


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc6

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 31
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            93010.0000

 RESOURCE USAGE, LIMIT          0.094       600.000
 ITERATION COUNT, LIMIT       671    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.09sec (det. 41.04 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.45 ticks)
Proven optimal solution.

MIP Solution:        93010.000000    (652 iterations, 66 nodes)
Final Solve:         93010.000000    (19 iterations)

Best possible:       93010.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 32
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc6


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc6

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 33
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            67407.3000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       136    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.50 ticks)
Optimal solution found.
Objective :       67407.300000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 34
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc7


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc7

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 35
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            92010.0000

 RESOURCE USAGE, LIMIT          0.094       600.000
 ITERATION COUNT, LIMIT       931    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.09sec (det. 34.75 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        92010.000000    (914 iterations, 80 nodes)
Final Solve:         92010.000000    (17 iterations)

Best possible:       92010.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 36
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc7


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc7

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 37
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            66407.3000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       134    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.50 ticks)
Optimal solution found.
Objective :       66407.300000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 38
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc8


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc8

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 39
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            88011.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       352    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.08sec (det. 27.29 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.43 ticks)
Proven optimal solution.

MIP Solution:        88011.000000    (338 iterations, 25 nodes)
Final Solve:         88011.000000    (14 iterations)

Best possible:       88011.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 40
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc8


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc8

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 41
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            65808.4000

 RESOURCE USAGE, LIMIT          0.016       600.000
 ITERATION COUNT, LIMIT       132    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.02sec (det. 1.44 ticks)
Optimal solution found.
Objective :       65808.400000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 42
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc9


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc9

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 43
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            92111.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       505    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.08sec (det. 36.39 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        92111.000000    (491 iterations, 39 nodes)
Final Solve:         92111.000000    (14 iterations)

Best possible:       92111.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 44
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc9


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc9

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 45
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            68475.0667

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       136    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.51 ticks)
Optimal solution found.
Objective :       68475.066667



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 46
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc10


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc10

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 47
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            96209.0000

 RESOURCE USAGE, LIMIT          0.094       600.000
 ITERATION COUNT, LIMIT       367    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.09sec (det. 17.82 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        96209.000000    (353 iterations, 42 nodes)
Final Solve:         96209.000000    (14 iterations)

Best possible:       96209.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 48
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc10


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc10

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 49
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            70608.1000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT       134    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.47 ticks)
Optimal solution found.
Objective :       70608.100000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 50
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc11


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc11

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 51
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            93610.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       387    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.06sec (det. 27.67 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        93610.000000    (373 iterations, 29 nodes)
Final Solve:         93610.000000    (14 iterations)

Best possible:       93610.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 52
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc11


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc11

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 53
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            68007.9000

 RESOURCE USAGE, LIMIT          0.047       600.000
 ITERATION COUNT, LIMIT       131    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.47 ticks)
Optimal solution found.
Objective :       68007.900000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 54
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc12


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc12

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 55
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            90910.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       448    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.06sec (det. 31.61 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.45 ticks)
Proven optimal solution.

MIP Solution:        90910.000000    (433 iterations, 36 nodes)
Final Solve:         90910.000000    (15 iterations)

Best possible:       90910.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 56
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc12


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc12

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 57
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            65207.9000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       138    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.54 ticks)
Optimal solution found.
Objective :       65207.900000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 58
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc13


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc13

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 59
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            88108.0000

 RESOURCE USAGE, LIMIT          0.062       600.000
 ITERATION COUNT, LIMIT       399    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 20.50 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.43 ticks)
Proven optimal solution.

MIP Solution:        88108.000000    (385 iterations, 48 nodes)
Final Solve:         88108.000000    (14 iterations)

Best possible:       88108.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 60
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc13


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc13

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 61
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            72406.4000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT       119    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.35 ticks)
Optimal solution found.
Objective :       72406.400000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 62
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc14


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.046 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.062 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc14

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 63
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            91611.0000

 RESOURCE USAGE, LIMIT          0.046       600.000
 ITERATION COUNT, LIMIT       304    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 23.39 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        91611.000000    (289 iterations, 8 nodes)
Final Solve:         91611.000000    (15 iterations)

Best possible:       91611.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 64
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc14


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc14

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 65
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            72542.3333

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       160    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.67 ticks)
Optimal solution found.
Objective :       72542.333333



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 66
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc15


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc15

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 67
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            93610.0000

 RESOURCE USAGE, LIMIT          0.063       600.000
 ITERATION COUNT, LIMIT       254    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.06sec (det. 16.79 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.45 ticks)
Proven optimal solution.

MIP Solution:        93609.999973    (237 iterations, 9 nodes)
Final Solve:         93609.999964    (17 iterations)

Best possible:       93609.999973
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 68
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc15


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc15

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 69
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            73008.0000

 RESOURCE USAGE, LIMIT          0.046       600.000
 ITERATION COUNT, LIMIT       137    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.05sec (det. 1.50 ticks)
Optimal solution found.
Objective :       73008.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 70
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc16


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc16

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 71
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            89010.9999

 RESOURCE USAGE, LIMIT          0.063       600.000
 ITERATION COUNT, LIMIT       207    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 15.52 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.45 ticks)
Proven optimal solution.

MIP Solution:        89010.999984    (195 iterations, 11 nodes)
Final Solve:         89010.999947    (12 iterations)

Best possible:       89010.999984
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 72
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc16


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc16

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 73
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            74608.2000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       137    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.58 ticks)
Optimal solution found.
Objective :       74608.200000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 74
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc17


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.046 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc17

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 75
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            84410.9999

 RESOURCE USAGE, LIMIT          0.141       600.000
 ITERATION COUNT, LIMIT       264    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 21.60 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.09sec (det. 0.46 ticks)
Proven optimal solution.

MIP Solution:        84410.999986    (250 iterations, 8 nodes)
Final Solve:         84410.999910    (14 iterations)

Best possible:       84410.999986
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 76
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc17


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.094 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.094 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc17

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 77
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            70008.5000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT       150    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.67 ticks)
Optimal solution found.
Objective :       70008.500000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 78
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc18


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.078 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc18

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 79
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            79809.0000

 RESOURCE USAGE, LIMIT          0.078       600.000
 ITERATION COUNT, LIMIT       104    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.06sec (det. 5.69 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        79809.000000    (89 iterations, 0 nodes)
Final Solve:         79809.000000    (15 iterations)

Best possible:       79809.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 80
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc18


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.063 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.063 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc18

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 81
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            75007.0000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT       139    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.01sec (det. 1.53 ticks)
Optimal solution found.
Objective :       75007.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 82
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc19


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc19

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 83
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            78609.0000

 RESOURCE USAGE, LIMIT          0.047       600.000
 ITERATION COUNT, LIMIT        97    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 6.24 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.43 ticks)
Proven optimal solution.

MIP Solution:        78609.000000    (87 iterations, 0 nodes)
Final Solve:         78609.000000    (10 iterations)

Best possible:       78609.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 84
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc19


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.062 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc19

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 85
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            73807.0000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT       121    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.43 ticks)
Optimal solution found.
Objective :       73807.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 86
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc20


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.063 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.125 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc20

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 87
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            80311.0000

 RESOURCE USAGE, LIMIT          0.062       600.000
 ITERATION COUNT, LIMIT       185    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 15.75 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.01sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        80311.000000    (170 iterations, 15 nodes)
Final Solve:         80311.000000    (15 iterations)

Best possible:       80311.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 88
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc20


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc20

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 89
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            70008.6000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       145    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.62 ticks)
Optimal solution found.
Objective :       70008.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 90
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc21


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.046 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.062 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc21

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 91
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            79211.0000

 RESOURCE USAGE, LIMIT          0.046       600.000
 ITERATION COUNT, LIMIT       212    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.03sec (det. 20.81 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        79211.000000    (197 iterations, 5 nodes)
Final Solve:         79211.000000    (15 iterations)

Best possible:       79211.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 92
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc21


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc21

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 93
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            70274.7667

 RESOURCE USAGE, LIMIT          0.032       600.000
 ITERATION COUNT, LIMIT       142    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.59 ticks)
Optimal solution found.
Objective :       70274.766667



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 94
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc22


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc22

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 95
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            76811.0000

 RESOURCE USAGE, LIMIT          0.047       600.000
 ITERATION COUNT, LIMIT       211    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.02sec (det. 12.38 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.01sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        76811.000000    (196 iterations, 6 nodes)
Final Solve:         76811.000000    (15 iterations)

Best possible:       76811.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 96
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc22


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.062 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.062 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc22

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 97
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            70008.8000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT       146    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.64 ticks)
Optimal solution found.
Objective :       70008.800000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 98
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc23


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc23

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 99
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            73210.0000

 RESOURCE USAGE, LIMIT          0.062       600.000
 ITERATION COUNT, LIMIT       155    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 15.22 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.01sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        73210.000000    (138 iterations, 1 nodes)
Final Solve:         73210.000000    (17 iterations)

Best possible:       73210.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 100
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc23


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      4 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      4 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc23

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 101
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            68807.6000

 RESOURCE USAGE, LIMIT          0.032       600.000
 ITERATION COUNT, LIMIT       126    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.39 ticks)
Optimal solution found.
Objective :       68807.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 102
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1122


LOOPS                                  run   run1
                                      calc   calc24


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      4 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      4 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc24

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 103
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1122


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1122

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            74710.0000

 RESOURCE USAGE, LIMIT          0.047       600.000
 ITERATION COUNT, LIMIT       225    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.05sec (det. 19.53 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.44 ticks)
Proven optimal solution.

MIP Solution:        74710.000000    (208 iterations, 12 nodes)
Final Solve:         74710.000000    (17 iterations)

Best possible:       74710.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 104
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1195


LOOPS                                  run   run1
                                      calc   calc24


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      4 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      4 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc24

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 105
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1195


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1195

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE            68007.6000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT       146    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.03sec (det. 1.60 ticks)
Optimal solution found.
Objective :       68007.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 07/18/16 21:44:22 Page 106
State_Space_Model
E x e c u t i o n


EXECUTION TIME       =        0.546 SECONDS      4 MB  24.5.6 r55090 WEX-WEI


USER: Department of Chemical & Biological EngineeringG151026:1254AO-GEN
      University of Wisconsin - Madison                          DC4923
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code\Z_N2_MH16_RF_Uncertainty
           _vs_Advancement.gms
Output     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code\Z_N2_MH16_RF_Uncertainty
           _vs_Advancement.lst
