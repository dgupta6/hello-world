GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   3  SCALAR re_freq                    /1/;
   4  PARAMETER demand_cycletime        /16/;
   5  PARAMETER demand_variation        /0/;
   6  PARAMETER demand_magnitude        /12/;
   7  PARAMETER lambda_Demand           /0.00/;
   8  SCALAR surprise                   /0.00/;
   9  SCALAR optcr_value                /0/;
  10  PARAMETER SEED_VALUE              /1716/;
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\ConfigurationFile
           .gms
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 2
CONFIGURATION_FILE
C o m p i l a t i o n


  23   
  24  *$SETGLOBAL OPTIMIZATION_DIRECTION  maximizing
  25  *$SETGLOBAL MODEL_NAME MAX_PROFIT
  26  *$SETGLOBAL InitialInventoryFlag 1
  27   
  28  *$SETGLOBAL OPTIMIZATION_DIRECTION  minimizing
  29  *$SETGLOBAL MODEL_NAME MIN_COST
  30  *$SETGLOBAL InitialInventoryFlag 0
  31  *******HORIZON********
  32  *$SETGLOBAL H 192
  34  *$SETGLOBAL MH 20
  35  *SCALAR re_freq /1/;
  36  *Used in chopping off initial transient in closed loop cost evaluation
  37  *$SETGLOBAL Transient_H 48
  38  *$SETGLOBAL Transient_H 0
  39  *We do Closed_Loop_Upper # of calc and record closed loop solution only ti
      ll there
  40  *$SETGLOBAL Closed_Loop_Upper 168
  41  *$SETGLOBAL Closed_Loop_Upper 192
  42  *******HORIZON********
  43   
  44  *******NETWORK AND MODEL********
  45  *$SETGLOBAL NetworkNumber 1
  48  *******NETWORK AND MODEL********
  49   
  50  *******DEMAND LOAD********
  51  *PARAMETER demand_cycletime /12/;
  52  *PARAMETER demand_variation /3/;
  53  *PARAMETER demand_magnitude NOMINAL LOAD /25/;
  54  *******DEMAND LOAD********
  55   
  56  ******DISTURBANCES********************
  57  *$SETGLOBAL Demand_Disturbance_flag 0
  61  *Parameters for demand uncertainty
  62  *What fraction ahead of rolling Horizon does demand forecast changes'
  63  *SCALAR surprise /0.34/;
  64  *Magnitude of Uncertainties
  65  *PARAMETER lambda_Demand /0.2/;
  66  *Yet to replace these names in ModelSolution9 file
  67  *and these values are hardcoded right now (look into code again)
  68  PARAMETER lambda_TaskDelay /0.2/;
  69  PARAMETER lambda_UnitBreakdown /0.2/;
  70  PARAMETER bringing_unit_back /2/;
  71  PARAMETER lambda_Handling /0.2/;
  72  ******DISTURBANCES********************
  73   
  74  *******OPTIMIZATION OPTIONS****
  75  *SCALAR   optcr_value /0/;
  76  SCALAR   timelimit /600/;
  77  *******OPTIMIZATION OPTIONS****
  78   
  79  *******EVALUATION********
  80  *$SETGLOBAL N_runs 1
  81  *******EVALUATION********
  82   
  83  *******REPORTING********
  86  *$SETGLOBAL Results_FileName Config_Results
  87  *******REPORTING********
  88   
  89  *Run the closed loop and generate results
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\MasterFile.gms
  91  *Change this to name of the instance
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 3
MasterFile
C o m p i l a t i o n


  97  *$OFFLISTING
  98   
  99  execseed=SEED_VALUE;
 100  *parameter cc /0/;
 101   
 103  SCALAR KillLength /2/;
 104   
 105  SET run /run1*run1/;
 106   
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\NetworkN2.gms
 108  Sets     i tasks  /T1*T3/
 109           s states /M1*M4/
 110           j units  /U1*U2/
 111           u utilities /manpower/
 112   
 113  *         Ki(j,i) set of equipments(units) suitable for task i
 114  *         /(Reactor1).(TA,TB),Heater.Heating/
 115           Ij(i,j) set of equipments(units) suitable for task i
 116           /T1.U1,(T2,T3).U2/
 117   
 118           FIS(s) States with Finite Intermediate Storage /M2/
 119           product_states(s) Product States/M3*M4/
 120           feed_states(s) Feed States/M1/
 121   
 122           UtilInt Intervals for utility /Int1/
 123           UnitInt Intervals for unit-unavailability /Int1/
 124   
 125           Attributes/magnitude, starttime, price/
 126  ;
 127   
 128  Table UtilData(UtilInt,u,Attributes)
 129               manpower.starttime            manpower.magnitude      manpowe
      r.price
 130  Int1                    0                         10                     0
 131  ;
 132   
 133  *Availability of unit  0=available, 1=not available
 134  Table UnitData(UnitInt,j,Attributes)
 135                U1.magnitude         U1.starttime
 136  Int1              0                     0
 137  ;
 138   
 139  Parameters rho(i,s) proportion of input of task i from states s
 140             /T1.M1 1,(T2,T3).M2 1/
 141             rhobar(i,s) proportion of ouput of task i to state s
 142             /T1.M2 1, T2.M3 1, T3.M4 1/
 143   
 144             pis(i,s) processing time for output of task i into state s
 145             /T1.M2 2,T2.M3 2, T3.M4 3/
 146             pi(i) maximum processing time in task i for any stage produced 
      by it
 147   
 148             alpha(u,i) fixed utility demand by task i throughout its run
 149             /manpower.(T1*T2) 0/
 150             beta(u,i) "variable utility demand by task i throughout its run
      (te/hr)"
 151             /manpower.(T1*T2) 0/
 152   
 153             vmaxij(i,j)  Maximum capacity of unit j when used for task i
 154             /T1.U1 20, (T2,T3).U2 10/
 155             vminij(i,j)  Minimum capacity of unit j when used for task i
 156             /T1.U1 10, (T2,T3).U2 5/
 157             Cs(s) maximum storage capacity for stage s  /(M1*M4) 99999/
 158             Cst(s) unit price of s/M1 1, M2 5, M3 10, M4 10/
 159  ;
 160  *pis(i,s)=5;
 161  pi(i)=smax(s,pis(i,s));
 162   
      ******DEMAND INFORMATION*****************************
      *Each order for all products
      set         o orders /o1*o%H%/;
      parameter deliveries_time(o);
      deliveries_time(o)=demand_cycletime*ord(o);
      deliveries_time(o)=deliveries_time(o)+UniformInt(-demand_variation,demand_
      variation);
      parameter deliveries(o,s);
      deliveries(o,s)$(product_states(s))=demand_magnitude;
      ******DEMAND INFORMATION*****************************
 174   
 175  *END OF INSTANCE FILE
 176   
 177   
 178   
 179   
 180   
 181   
 182   
 183   
 184   
 185   
 186   
 187   
 188   
 189   
 190   
 191   
      Table deliveries(o,s)
              SA      SB
      o1      5       5
      o2      5       5
      o3      5       5
      o4      5       5
      o5      5       5
      o6      5       5
      o7      5       5
      o8      5       5;
 204   
 205   
      For debugging/testing utility formulas
      Table UtilData(UtilInt,u,Attributes)
                   manpower.starttime            manpower.magnitude      manpowe
      r.price
      Int1                    0                         1                     1
      Int2                    1.5                       0                     0
      Int3                    3.5                       1                     1
      Int4                    6.1                       0                     0;
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\Model9.gms
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 4
State_Space_Model
C o m p i l a t i o n


 217  OPTIONS limrow = 0, limcol = 0, solprint = off;
 218  *OPTIONS limrow = 1000, limcol = 1000, solprint = on;
 219  *No upper limit on inventory (equation not enforced)
 220   
 221  *used for rounding W,B in recordstates in modelsolution file
 222  PARAMETER Small_number /1E-2/;
 223   
 224  *Now generating time grid using delta
 227  *$EvalGlobal calculations (%horizon%-%window%)
 231   
 232  set h time(multiples of delta) /h0*h30/
 233      n time window   /n0*n16/
 234      calc #of windows /calc0*calc24/
 235   
 236      closed_loop(h) horizon points for which we calculate closed loop cost
 237   
 238      Sbari(s,i)  materials produced by task i
 239      Si(s,i)     materials consumed by task i
 240      Tbars(i,s)    Tasks producing material s
 241      Ts(i,s) Tasks consuming material s;
 242   
 243  Sbari(s,i)=1$(rhobar(i,s) gt 0);
 244  Si(s,i)=1$(rho(i,s) gt 0);
 245  *Ij(i,j)=Ki(j,i);
 246  Tbars(i,s)=Sbari(s,i);
 247  Ts(i,s)=Si(s,i);
 248   
 249  closed_loop(h)=0;
 250  closed_loop(h)$(ord(h)-1 ge 0 and ord(h)-1 le 24)=1;
 251   
 252   
 253  alias(i,ip)
 254  alias(j,jp)
 255  alias(s,sp)
 256  alias(n,np)
 257  alias(h,hbar);
 258   
 259  set     UnitUnavailable_full(j,h)
 260  UnitUnavailable(j,n);
 261   
 262  parameter Uutmax_full(u,h),Cut_full(u,h) utility price;
 263   
 264  parameters Dst(s,n),Uutmax(u,n),Cut(u,n);
 265   
 266   
 267  parameter pis_new(i,s),pi_new(i);
 268  *tau_new(j,k,kp);
 269  pis_new(i,s)=ceil(pis(i,s)/1);
 270  pi_new(i)=ceil(pi(i)/1);
 271   
 272  parameter alpha_new(u,i),beta_new(u,i),Cst_new(s);
 273   
 274  alpha_new(u,i)=alpha(u,i);
 275   
 276  beta_new(u,i)=beta(u,i);
 277   
 278  Cst_new(s)=Cst(s);
 279   
 280   
 281   
 282   
 283  *UTILITY CALCULATIONS NEED TO BE CORRECTED
 284  *RIGHT NOW THERE IS BUG THAT IF THERE IS MORE THAN ONE CHANGE
 285  *WITHIN AN INTERVAL THEN THE CODE TAKES FIRST CHANGE ONLY
 286  *AND IGNORES THE SECOND CHANGE
 287  loop(UtilInt,
 288  *Maximum available utility
 289  Uutmax_full(u,h)$(ord(UtilInt) eq 1 and
 290                   ord(h) ge 1 and
 291                   ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1)$(
      UtilData(UtilInt,u,"magnitude") gt UtilData(UtilInt+1,u,"magnitude"))+
 292                                ceil(UtilData(UtilInt+1,u,"starttime")/1)$(U
      tilData(UtilInt,u,"magnitude") le UtilData(UtilInt+1,u,"magnitude")) ))
 293                  =  UtilData(UtilInt,u,"magnitude");
 294   
 295   
 296   
 297   
 298  Uutmax_full(u,h)$((ord(UtilInt) gt 1 and ord(UtilInt) lt card(UtilInt)) an
      d
 299                   ord(h)-1 ge (floor(UtilData(UtilInt,u,"starttime")/1)$(Ut
      ilData(UtilInt-1,u,"magnitude") gt UtilData(UtilInt,u,"magnitude"))+
 300                                ceil(UtilData(UtilInt,u,"starttime")/1)$(Uti
      lData(UtilInt-1,u,"magnitude") le UtilData(UtilInt,u,"magnitude")) ) and
 301                   ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1)$(
      UtilData(UtilInt,u,"magnitude") gt UtilData(UtilInt+1,u,"magnitude"))+
 302                                ceil(UtilData(UtilInt+1,u,"starttime")/1)$(U
      tilData(UtilInt,u,"magnitude") le UtilData(UtilInt+1,u,"magnitude")) ))
 303                  =  UtilData(UtilInt,u,"magnitude");
 304   
 305   
 306   
 307  Uutmax_full(u,h)$(ord(UtilInt) eq card(UtilInt) and
 308                   ord(h)-1 ge (floor(UtilData(UtilInt,u,"starttime")/1)$(Ut
      ilData(UtilInt-1,u,"magnitude") gt UtilData(UtilInt,u,"magnitude"))+
 309                                ceil(UtilData(UtilInt,u,"starttime")/1)$(Uti
      lData(UtilInt-1,u,"magnitude") le UtilData(UtilInt,u,"magnitude")) ) and
 310                   ord(h) le card(h))
 311                  =  UtilData(UtilInt,u,"magnitude");
 312   
 313   
 314  *Utility Price
 315  Cut_full(u,h)$(ord(UtilInt) eq 1 and
 316            ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1))   )
 317            =  UtilData(UtilInt,u,"price");
 318   
 319  Cut_full(u,h)$(ord(UtilInt) gt 1 and ord(UtilInt) lt card(UtilInt) and
 320            ord(h)-1 gt (floor(UtilData(UtilInt,u,"starttime")/1)) and
 321            ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1))   )
 322            =  UtilData(UtilInt,u,"price");
 323   
 324  Cut_full(u,h)$(ord(UtilInt) eq card(UtilInt) and
 325            ord(h)-1 gt floor(UtilData(UtilInt,u,"starttime")/1) and
 326            ord(h) le card(h)   )
 327            =  UtilData(UtilInt,u,"price");
 328   
 329  Cut_full(u,h)$(ord(UtilInt) gt 1 and
 330           ord(h)-1 eq floor(UtilData(UtilInt,u,"starttime")/1))
 331           =(   UtilData(UtilInt-1,u,"price")*(UtilData(UtilInt,u,"starttime
      ")-(ord(h)-1)* 1 )
 332                +UtilData(UtilInt,u,"price")*(ord(h)*1-UtilData(UtilInt,u,"s
      tarttime"))   )/1;
 333  *Bug in cost calculation: what if there are 3 cost levels within one time 
      grid?
 334  )
 335   
 336   
 337  *UnitUnavailabality(note the difference in inequalities as opposed to Util
      ity....1=>unit not available so more magnitude is bad)
 338  loop(UnitInt,
 339  Unitunavailable_full(j,h)$(ord(UnitInt) eq 1 and
 340                   ord(h)-1 ge 0 and
 341                   ord(h)-1 lt (floor(UnitData(UnitInt+1,j,"starttime")/1)$(
      UnitData(UnitInt,j,"magnitude") lt UnitData(UnitInt+1,j,"magnitude"))+
 342                                ceil(UnitData(UnitInt+1,j,"starttime")/1)$(U
      nitData(UnitInt,j,"magnitude") ge UnitData(UnitInt+1,j,"magnitude")) ))
 343                  =  UnitData(UnitInt,j,"magnitude");
 344   
 345   
 346   
 347   
 348  Unitunavailable_full(j,h)$((ord(UnitInt) gt 1 and ord(UnitInt) lt card(Uni
      tInt)) and
 349                   ord(h)-1 ge (floor(UnitData(UnitInt,j,"starttime")/1)$(Un
      itData(UnitInt-1,j,"magnitude") lt UnitData(UnitInt,j,"magnitude"))+
 350                                ceil(UnitData(UnitInt,j,"starttime")/1)$(Uni
      tData(UnitInt-1,j,"magnitude") ge UnitData(UnitInt,j,"magnitude")) ) and
 351                   ord(h)-1 lt (floor(UnitData(UnitInt+1,j,"starttime")/1)$(
      UnitData(UnitInt,j,"magnitude") lt UnitData(UnitInt+1,j,"magnitude"))+
 352                                ceil(UnitData(UnitInt+1,j,"starttime")/1)$(U
      nitData(UnitInt,j,"magnitude") ge UnitData(UnitInt+1,j,"magnitude")) ))
 353                  =  UnitData(UnitInt,j,"magnitude");
 354   
 355   
 356   
 357  Unitunavailable_full(j,h)$(ord(UnitInt) eq card(UnitInt) and
 358                   ord(h)-1 ge (floor(UnitData(UnitInt,j,"starttime")/1)$(Un
      itData(UnitInt-1,j,"magnitude") lt UnitData(UnitInt,j,"magnitude"))+
 359                                ceil(UnitData(UnitInt,j,"starttime")/1)$(Uni
      tData(UnitInt-1,j,"magnitude") ge UnitData(UnitInt,j,"magnitude")) ) and
 360                   ord(h) le card(h))
 361                  =  UnitData(UnitInt,j,"magnitude");
 362  )
 363   
 364   
 365   
 366  *display UnitUnavailable_full,Uutmax_full,Cut_full,Sbari,Si,rhobar,rho,Tba
      rs,Ts,calc;
 367   
 368  *Ijk,tauChangeMax
 369   
 370   
 371   
 372  *Disturbance parameter for loading/unloading of materials
 373  parameters betaHatProd(i,j,s,n),betaHatCons(i,j,s,n);
 374  betaHatProd(i,j,s,n)=0;
 375  betaHatCons(i,j,s,n)=0;
 376   
 377   
 378  *Disturbance parameter for task delays
 379  parameters
 380  Yhat(i,j,n,hbar)
 381  Delay(calc,i,j,hbar)
 382  Zhat(i,j,n,hbar)
 383  Breakdown(calc,i,j,hbar)
 384  Duration_breakdown(calc,j)
 385  UnitBroken(j,n)
 386  WbarInfo(i,j,n,hbar)
 387  BbarInfo(i,j,n,hbar)
 388  KillDuration(i,j)
 389  KillDurationCountdown(i,j)
 390  KillOccupy(j,n)
 391  KillCountdown(j);
 392   
 393  *Initializing parameters
 394  Yhat(i,j,n,hbar)=0;
 395  Delay(calc,i,j,hbar)=0;
 396  Zhat(i,j,n,hbar)=0;
 397  Breakdown(calc,i,j,hbar)=0;
 398  Duration_breakdown(calc,j)=0;
 399  UnitBroken(j,n)=0;
 400  WbarInfo(i,j,n,hbar)=0;
 401  BbarInfo(i,j,n,hbar)=0;
 402  KillDuration(i,j)=0;
 403  KillDurationCountdown(i,j)=0;
 404  KillOccupy(j,n)=0;
 405  KillCountdown(j)=0;
 406   
 407  *hbar are the time points for lifting of variables
 408  *binary variables W(i,j,n),Wbar(i,j,n,hbar),T(i,j,hbar) Kill_Variable;
 409  binary variables Wbar(i,j,n,hbar),T(i,j,hbar) Kill_Variable;
 410  positive variable Bbar(i,j,n,hbar),Sst(s,n),Backlog(s,n),Ship(s,n),Ship_sa
      les(s,n),Uut(u,n),Rst(s,n),SstTerminal(s),BacklogTerminal(s);
 411  variables obj_variable;
 412  integer variable NB(i,j) number of batches;
 413  *Assigning values to variables that might not participate in optimization
 414  Uut.l(u,n)=0;
 415  Ship_sales.l(s,n)=0;
 416   
 417  Equations
 418  numberOfBatches,
 419  Allocation,
 420  UnitCapacityMax,UnitCapacityMin,
 421  InventoryLimit,
 422  InventoryBalance,
 423  EndingInventory,
 424  BacklogBalance,
 425  EndingBacklog,
 426  UtilityLimit,
 427  UtilityBalance,
 428  objective_MIN_COST,
 429  objective_MAX_PROFIT,
 430  objective_MAX_PROFIT_Greedy
 431  UnitUnavailabality,
 432  *CorrectHolding(i,j,n),
 433  LiftingW,
 434  *LiftingW0,
 435  LiftingB,
 436  *LiftingB0,
 437  Carryover_W,Carryover_B,
 438  InventoryBalance_MAX_PROFIT,
 439  EndingInventory_MAX_PROFIT
 440  Ship_constraint(s,n)
 441  NoShip(s,n);
 442  *SHIPMENT;
 443  *NoTaskRunningAtEndOfHorizon;
 444   
 445  numberOfBatches(i,j)$Ij(i,j).. NB(i,j)=E=sum((n,hbar)$(ord(hbar)-1 eq 0),W
      bar(i,j,n,hbar));
 446   
 447  *scalar ord_calc /0/;
 448  SCALAR fixed_decisions /0/;
 449  SCALAR reschedule_flag /0/;
 450  *re_freq-1-mod(ord_calc-1+re_freq-1,re_freq)  is zero for calc0
 451  Carryover_W(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 ge 1 
      and ord(hbar)-1 le pi(i) and Ij(i,j))..Wbar(i,j,n,hbar)=E=WbarInfo(i,j,n,h
      bar)*(1-T(i,j,hbar))*(1-Zhat(i,j,n,hbar));
 452  Carryover_B(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 ge 1 
      and ord(hbar)-1 le pi(i) and Ij(i,j))..Bbar(i,j,n,hbar)=E=BbarInfo(i,j,n,h
      bar)*(1-T(i,j,hbar))*(1-Zhat(i,j,n,hbar));
 453   
 454  *LiftingW(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (
      ord(n) lt card(n)) and Ij(i,j))..
 455  *         Wbar(i,j,n+1,hbar)=E=Wbar(i,j,n,hbar-1)+Yhat(i,j,n,hbar)-Yhat(i,
      j,n,hbar-1)-Zhat(i,j,n,hbar-1);
 456  *LiftingB(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (
      ord(n) lt card(n)) and Ij(i,j))..
 457  *         Bbar(i,j,n+1,hbar)=E=Bbar(i,j,n,hbar-1)+Bbar(i,j,n,hbar)*Yhat(i,
      j,n,hbar)-Bbar(i,j,n,hbar-1)*Yhat(i,j,n,hbar-1)
 458   
 459  LiftingW(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (o
      rd(n) lt card(n)) and Ij(i,j))..
 460           Wbar(i,j,n+1,hbar)=E=Wbar(i,j,n,hbar-1)+Yhat(i,j,n,hbar)-Yhat(i,j
      ,n,hbar-1);
 461   
 462  LiftingB(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (o
      rd(n) lt card(n)) and Ij(i,j))..
 463           Bbar(i,j,n+1,hbar)=E=Bbar(i,j,n,hbar-1)+Bbar(i,j,n,hbar)*Yhat(i,j
      ,n,hbar)-Bbar(i,j,n,hbar-1)*Yhat(i,j,n,hbar-1);
 464  Allocation(j,n).. sum((i,hbar)$(Ij(i,j) and (ord(hbar) -1 le (pi_new(i)-1)
      ) ), Wbar(i,j,n,hbar))=L=1-sum((i,hbar)$(Ij(i,j) and (ord(hbar) -1 eq pi_n
      ew(i)) ) , Yhat(i,j,n,hbar))-UnitBroken(j,n)
 465                        -sum((i,hbar)$(Ij(i,j) and ord(hbar)-1 ge 1 and ord(
      hbar)-1 le pi(i)),T(i,j,hbar)$(ord(n)-1 lt KillDuration(i,j)))-KillOccupy(
      j,n);
 466  *ord(np)-1=0 => Wbar0 which is also included in the above sum, so we dont 
      have to explicitly sum over W now since W0 is also there
 467   
 468  UnitCapacityMax(i,j,n,hbar)$(Ij(i,j) and ord(hbar)-1 eq 0).. Bbar(i,j,n,hb
      ar)=L=Wbar(i,j,n,hbar)*vmaxij(i,j);
 469   
 470  UnitCapacityMin(i,j,n,hbar)$(Ij(i,j) and ord(hbar)-1 eq 0).. Bbar(i,j,n,hb
      ar)=G=Wbar(i,j,n,hbar)*vminij(i,j);
 471   
 472  InventoryLimit(s,n)$(FIS(s)).. Sst(s,n)=L=Cs(s);
 473   
 474  *Watch out for brackets in betahatCons and betaHatProd. One has multiplica
      tion with rho other does not
 475  InventoryBalance(s,n)$(ord(n) lt card(n)).. Sst(s,n+1)=E=Sst(s,n)+sum((i,j
      ,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(hbar) -1 eq pis_new(i,s))),rhobar(
      i,s)*(Bbar(i,j,n,hbar)*(1-Yhat(i,j,n,hbar)-Zhat(i,j,n,hbar))+betaHatProd(i
      ,j,s,n)))
 476                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j) and ord(hbar
      ) eq 1),rho(i,s)*Bbar(i,j,n,hbar)+betaHatCons(i,j,s,n)) -Ship(s,n)$(produc
      t_states(s))+Rst(s,n)$(feed_states(s));
 477  EndingInventory(s,n)$(ord(n) eq card(n)).. SstTerminal(s)=E=Sst(s,n)+sum((
      i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(hbar) -1 eq pis_new(i,s))),rhob
      ar(i,s)*(Bbar(i,j,n,hbar)*(1-Yhat(i,j,n,hbar)-Zhat(i,j,n,hbar))+betaHatPro
      d(i,j,s,n)))
 478                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j)and ord(hbar)
       eq 1),rho(i,s)*Bbar(i,j,n,hbar)+betaHatCons(i,j,s,n)) -Ship(s,n)$(product
      _states(s))+Rst(s,n)$(feed_states(s));
 479   
 480  ********
 481  *Inventory at point 2 means, inventory level infinitesimal time just befor
      e point 2, ie 2-, need to define extra ending inventory variable SstTermin
      al(s)
 482  *Deliveries are point functions like B, W while inventory is interval func
      tion
 483  *Kondili has convention that inventory at point 2 is 2+, so has to define 
      extra initial inventory parameter Sst0(s)
 484   
 485   
 486  ***********Backlogs******
 487  BacklogBalance(s,n)$(product_states(s) and ord(n) lt card(n)).. Backlog(s,
      n+1)=E=Backlog(s,n)-Ship(s,n)+Dst(s,n);
 488  EndingBacklog(s,n)$(product_states(s) and ord(n) eq card(n)).. BacklogTerm
      inal(s)=E=Backlog(s,n)-Ship(s,n)+Dst(s,n);
 489   
 490  ***********UtilityBalance******
 491  UtilityLimit(u,n).. Uut(u,n)=L=Uutmax(u,n);
 492  UtilityBalance(u,n).. Uut(u,n)=E=sum((i,j,hbar)$(Ij(i,j) and (ord(hbar)-1 
      le pi_new(i)-1)),alpha_new(u,i)*Wbar(i,j,n,hbar)+beta_new(u,i)*Bbar(i,j,n,
      hbar)  );
 493   
 494  UnitUnavailabality(i,j,n)$(UnitUnavailable(j,n) and Ij(i,j)).. sum((hbar)$
      (ord(hbar)-1 le pi_new(i)-1),Wbar(i,j,n,hbar))=E=0;
 495   
 496  *Utility cost: sum((u,n),Cut(u,n)*Uut(u,n))
 497  *objective_MIN_COST.. obj_variable  =E= 1E1*sum(s,Cst_new(s)*SstTerminal(s
      )) +1E1*sum((s,n),Cst_new(s)*Sst(s,n))
 498  *                                 +1E2*sum((s,n)$(product_states(s)),Cst_n
      ew(s)*Backlog(s,n))+1E2*sum(s$(product_states(s)),Cst_new(s)*BacklogTermin
      al(s))
 499  *                                 +sum((i,j,hbar)$Ij(i,j),T(i,j,hbar));
 500  objective_MIN_COST.. obj_variable  =E= 1E1*sum(s,Cst_new(s)*SstTerminal(s)
      ) + 1E1*sum((s,n),Cst_new(s)*Sst(s,n))
 501                                   +1E2*sum((s,n)$(product_states(s)),Cst_ne
      w(s)*Backlog(s,n))
 502                                   +1E2*sum(s$(product_states(s)),Cst_new(s)
      *BacklogTerminal(s))
 503                                   +sum((i,j,n,hbar)$(Ij(i,j) AND ord(hbar)-
      1 eq 0),Wbar(i,j,n,hbar));
 504   
 505   
 506  *objective_MAX_PROFIT.. obj_variable =E= 1E1*sum(s$(product_states(s)),Cst
      _new(s)*SstTerminal(s))+1E1*sum((s,n)$(product_states(s)),Cst_new(s)*Ship(
      s,n))
 507  *                                       -1E2*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Backlog(s,n))-1E2*sum(s$(product_states(s)),Cst_new(s)*Backlog
      Terminal(s) );
 508   
 509  *objective_MAX_PROFIT.. obj_variable =E= 1E1*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Sst(s,n))+1E1*sum(s$(product_states(s)),Cst_new(s)*SstTerminal
      (s))
 510  *                                       -1E2*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Backlog(s,n))-1E2*sum(s$(product_states(s)),Cst_new(s)*Backlog
      Terminal(s))
 511  *                                       +1E1*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Ship(s,n));
 512   
 513  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),rou
      nd(2-ord(n)/card(n),2)*Cst_new(s)*Ship(s,n))-sum((i,j,n,hbar)$(Ij(i,j) AND
       ord(hbar)-1 eq 0),Wbar(i,j,n,hbar));
 514   
 515  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst
      _new(s)*(Ship_sales(s,n)))
 516  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst
      _new(s)*(Ship_sales(s,n)+Ship(s,n)))
 517  objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst_
      new(s)*(Ship_sales(s,n)))
 518                                           -sum((i,j,n,hbar)$(Ij(i,j) AND or
      d(hbar)-1 eq 0),Wbar(i,j,n,hbar))
 519                                           -1E2*sum((s,n)$(product_states(s)
      ),Cst_new(s)*Backlog(s,n))
 520                                           -1E2*sum(s$(product_states(s)),Cs
      t_new(s)*BacklogTerminal(s));
 521   
 522  objective_MAX_PROFIT_Greedy.. obj_variable =E= sum((s,n)$(product_states(s
      )),round(2-(ord(n)/card(n)),2)*Cst_new(s)*(Ship(s,n)+Ship_sales(s,n)))
 523                                           -sum((i,j,n,hbar)$(Ij(i,j) AND or
      d(hbar)-1 eq 0),Wbar(i,j,n,hbar))
 524                                           -1E2*sum((s,n)$(product_states(s)
      ),Cst_new(s)*Backlog(s,n))
 525                                           -1E2*sum(s$(product_states(s)),Cs
      t_new(s)*BacklogTerminal(s));
 526   
 527  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),rou
      nd(2-ord(n)/card(n),2)*Cst_new(s)*Ship(s,n));
 528   
 529  *SHIPMENT(s,n).. Ship(s,n)=L=Dst(s,n)  ;
 530  InventoryBalance_MAX_PROFIT(s,n)$(ord(n) lt card(n)).. Sst(s,n+1)=E=Sst(s,
      n)
 531                           +sum((i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(
      hbar) -1 eq pis_new(i,s))),rhobar(i,s)*Bbar(i,j,n,hbar))
 532                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j) and ord(hbar
      ) eq 1),rho(i,s)*Bbar(i,j,n,hbar))
 533                           -Ship_sales(s,n)$(product_states(s))-Ship(s,n)$(p
      roduct_states(s))+Rst(s,n)$(feed_states(s));
 534   
 535  EndingInventory_MAX_PROFIT(s,n)$(ord(n) eq card(n)).. SstTerminal(s)=E=Sst
      (s,n)
 536                           +sum((i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(
      hbar) -1 eq pis_new(i,s))),rhobar(i,s)*Bbar(i,j,n,hbar))
 537                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j)and ord(hbar)
       eq 1),rho(i,s)*Bbar(i,j,n,hbar))
 538                           -Ship(s,n)$(product_states(s))-Ship_sales(s,n)$(p
      roduct_states(s))+Rst(s,n)$(feed_states(s));
 539   
 540  *Ship_constraint(s,n)$(ord(n) gt 1 AND ord(n) lt card(n) ).. Ship(s,n)=E=0
      ;
 541  *Ship_constraint(s,n)$(Dst(s,n) eq 0).. Ship_sales(s,n)=E=0;
 542  Ship_constraint(s,n)$(NOT Dst(s,n) gt 0).. Ship_sales(s,n)=E=0;
 543   
 544  *NoTaskRunningAtEndOfHorizon(i,j,n)$(ord(n) eq card(n) and Ij(i,j))..   su
      m(hbar$(ord(hbar)-1 le pi_new(i)-1),Wbar(i,j,n,hbar))=E=0;
 545  NoShip(s,n)$(ord(n) lt card(n)/2 and sameas(s,'M4')).. Ship_sales(s,n)=E=0
      ;
 546  *NoShip(s,n)$(ord(n) lt card(n)/2).. Ship_sales(s,n)=E=0;
 547   
 548  *****************
 549  *DISTURBANCE VARIABLES
 550  *Build feature rich instances and do rigorous testing
 551  *****************
 552   
 553  SET attributes_states /W,B/;
 554  PARAMETERS
 555  record_states_raw(run,calc,attributes_states,i,j,n,hbar),
 556  record_states(run,calc,attributes_states,i,j,n,hbar),
 557  record_objective(run,calc),
 558  record_utility(run,calc,u,n),
 559  record_inventory(run,calc,s,n),
 560  record_inventory_raw(run,calc,s,n),
 561  record_backlog(run,calc,s,n),
 562  record_backlog_raw(run,calc,s,n),
 563  record_inventoryTerminal(run,calc,s),
 564  record_backlogTerminal(run,calc,s)
 565  record_T(run,calc,i,j,hbar)
 566  record_shipment(run,calc,s,n)
 567  record_shipment_sales(run,calc,s,n)
 568  record_shipment_sales_raw(run,calc,s,n)
 569  record_Rst(run,calc,s,n)
 570  record_shipment_raw(run,calc,s,n)
 571  record_Rst_raw(run,calc,s,n)
 572  record_yieldloss(run,calc,i,j,s,n)
 573  record_demands(run,calc,s,n)
 574  record_WbarInfo(run,calc,i,j,n,hbar)
 575  record_BbarInfo(run,calc,i,j,n,hbar)
 576  record_Demands_realization(run,s,h)
 577  record_fixed_decision(calc)
 578  record_reschedule_flag(calc,run)
 579  record_relaxed_objective(run,calc) Objective from solving RMIP
 580  record_relaxed_states(run,calc,attributes_states,i,j,n,hbar) states from s
      olving RMIP
 581  record_relaxed_shipment(run,calc,s,n)
 582  record_relaxed_shipment_sales(run,calc,s,n)
 583  record_relaxed_backlog(run,calc,s,n);
 584   
 585  record_states_raw(run,calc,attributes_states,i,j,n,hbar)=0;
 586  record_states(run,calc,'B',i,j,n,hbar)=0;
 587  record_states(run,calc,'W',i,j,n,hbar)=0;
 588  record_inventory(run,calc,s,n)=0;
 589  record_inventory_raw(run,calc,s,n)=0;
 590  record_backlog(run,calc,s,n)=0;
 591  record_backlog_raw(run,calc,s,n)=0;
 592  record_T(run,calc,i,j,hbar)=0;
 593  record_shipment(run,calc,s,n)=0 ;
 594  record_Rst(run,calc,s,n)=0;
 595  record_shipment_raw(run,calc,s,n)=0;
 596  record_shipment_sales_raw(run,calc,s,n)=0;
 597  record_shipment_sales(run,calc,s,n)=0;
 598  record_Rst_raw(run,calc,s,n)=0;
 599  record_yieldloss(run,calc,i,j,s,n)=0;
 600  record_demands(run,calc,s,n)=0;
 601  record_WbarInfo(run,calc,i,j,n,hbar)=0;
 602  record_BbarInfo(run,calc,i,j,n,hbar)=0;
 603  record_Demands_realization(run,s,h)=0;
 604  record_fixed_decision(calc)=0;
 605  record_reschedule_flag(calc,run)=0;
 606  record_relaxed_objective(run,calc)=0;
 607  record_relaxed_states(run,calc,attributes_states,i,j,n,hbar)=0;
 608  record_relaxed_shipment(run,calc,s,n)=0;
 609  record_relaxed_shipment_sales(run,calc,s,n)=0;
 610  record_relaxed_backlog(run,calc,s,n)=0;
 611   
 612  *Initial conditions for first optimization horizon
 613  PARAMETERS InitialBbar(i,j,n,hbar),InitialWbar(i,j,n,hbar),InitialInventor
      y(s),InitialBacklog(s);
 614  InitialBbar(i,j,n,hbar)=0;
 615  InitialWbar(i,j,n,hbar)=0;
 616  InitialInventory(s)=0;
 617  InitialBacklog(s)=0;
 618   
 619  *if (%InitialInventoryFlag% eq 1,
 620  *Start with half day of inventory
 621  *InitialInventory(s)$product_states(s)=12*demand_magnitude/demand_cycletim
      e;
 622  *);
 623  InitialInventory(s)$product_states(s)=0*demand_magnitude/demand_cycletime;
 624   
 625   
 626  *MODEL P1 /all/;
 627  MODEL MIN_COST /
 628  numberOfBatches,
 629  Allocation,
 630  UnitCapacityMax,
 631  UnitCapacityMin,
 632  *InventoryLimit,
 633  InventoryBalance,
 634  EndingInventory,
 635  BacklogBalance,
 636  EndingBacklog,
 637  *UtilityLimit,
 638  *UtilityBalance,
 639  *UnitUnavailabality,
 640  LiftingW,
 641  LiftingB,
 642  Carryover_W,
 643  Carryover_B,
 644  objective_MIN_COST/;
 645   
 646  MODEL MAX_PROFIT_1 /
 647  numberOfBatches,
 648  Allocation,
 649  UnitCapacityMax,
 650  UnitCapacityMin,
 651  Carryover_B
 652  InventoryBalance_MAX_PROFIT,
 653  LiftingW,
 654  BacklogBalance
 655  LiftingB,
 656  Carryover_W,
 657  objective_MAX_PROFIT
 658  Ship_constraint
 659  EndingInventory_MAX_PROFIT,
 660  EndingBacklog/;
 661   
 662  MODEL MAX_PROFIT_2 /
 663  numberOfBatches,
 664  Allocation,
 665  UnitCapacityMax,
 666  UnitCapacityMin,
 667  InventoryBalance_MAX_PROFIT,
 668  EndingInventory_MAX_PROFIT,
 669  BacklogBalance,
 670  EndingBacklog,
 671  LiftingW,
 672  LiftingB,
 673  Carryover_W,
 674  Carryover_B,
 675  objective_MAX_PROFIT
 676  Ship_constraint/;
 677   
 678  MODEL MAX_PROFIT_GREEDY /
 679  numberOfBatches,
 680  Allocation,
 681  UnitCapacityMax,
 682  UnitCapacityMin,
 683  InventoryBalance_MAX_PROFIT,
 684  EndingInventory_MAX_PROFIT,
 685  BacklogBalance,
 686  EndingBacklog,
 687  LiftingW,
 688  LiftingB,
 689  Carryover_W,
 690  Carryover_B,
 691  *objective_MAX_PROFIT
 692  objective_MAX_PROFIT_Greedy
 693  Ship_constraint/;
 694  *NoShip/;
 695   
 696  MODEL MAX_PROFIT_NOSHIP /
 697  numberOfBatches,
 698  Allocation,
 699  UnitCapacityMax,
 700  UnitCapacityMin,
 701  InventoryBalance_MAX_PROFIT,
 702  EndingInventory_MAX_PROFIT,
 703  BacklogBalance,
 704  EndingBacklog,
 705  LiftingW,
 706  LiftingB,
 707  Carryover_W,
 708  Carryover_B,
 709  objective_MAX_PROFIT
 710  *objective_MAX_PROFIT_Greedy
 711  Ship_constraint
 712  NoShip/;
 713   
 714  MODEL MAX_PROFIT_GREEDY_NOSHIP /
 715  numberOfBatches,
 716  Allocation,
 717  UnitCapacityMax,
 718  UnitCapacityMin,
 719  InventoryBalance_MAX_PROFIT,
 720  EndingInventory_MAX_PROFIT,
 721  BacklogBalance,
 722  EndingBacklog,
 723  LiftingW,
 724  LiftingB,
 725  Carryover_W,
 726  Carryover_B,
 727  *objective_MAX_PROFIT
 728  objective_MAX_PROFIT_Greedy
 729  Ship_constraint
 730  NoShip/;
 731   
 732  *SHIPMENT/;
 733   
 734   
 735  T.l(i,j,hbar)=0;
 736  *Parameters for Gantt Charting in Excel
 737  *END OF MODEL FILE
 738   
 739   
 740   
 741   
 742  PARAMETER runcost(run) cost of implemented closed loop
 743           runcost_Inv(run) Inventory cost,runcost_BO(run) Backlog cost, run
      cost_W(run) start_cost_of_tasks
 744           runprofit(run) closed loop profit in MAX_profit
 745           sales_profit(run);
 746   
 747           runcost_Inv(run)=0;runcost_BO(run)=0; runcost_W(run)=0;runcost(ru
      n)=0; runprofit(run)=0;sales_profit(run)=0;
 748   
 749  PARAMETER modelStat(calc,run)     Should be 1 for successful optimization
 750            BOStat_OL(calc,run)     If 1 means open loop had non zero back o
      rder
 751            BOStat_CL(calc,run)     If 1 means closed loop had non zero back
       order
 752            IntegralityGap(calc,run)
 753            Est_modelGap1(calc,run)  Estimated optimality gap by CPLEX (obj.
      val in denominator)
 754            Est_modelGap2(calc,run)  Estimated optimality gap by CPLEX (obj.
      Est in denominator)
 755            True_modelGap(calc,run) True optimality gap obtained by solving 
      to optcr=0
 756            ETSolve(calc,run)
 757            ETSolver(calc,run)
 758            iterUsd(calc,run)
 759            nodUsd(calc,run)
 760            resUsd(calc,run)
 761            numDVar(calc,run)
 762            numEqu(calc,run)
 763            numInfes(calc,run)
 764            numNZ(calc,run)
 765            numVar(calc,run)
 766            solveStat(calc,run)
 767            Suboptimal_objective /0/
 768            Optimal_Objective /0/
 769            TimeToSolveOptimal(calc,run);
 770   
      ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
      ******DEMAND INFORMATION*****************************
      *Each order for all products
      SET         o orders /o1*o%H%/;
      PARAMETER deliveries_time(o,run);
      deliveries_time(o,run)=demand_cycletime*ord(o);
      PARAMETER deliveries(o,s);
      deliveries(o,s)$(product_states(s))=demand_magnitude;
      ******DEMAND INFORMATION*****************************
       
      PARAMETER Dst_full(s,h);
      Dst_full(s,h)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(deliveries_time(o)/
      %delta%)));
       
      PARAMETER Dst_full_realization(s,h,run);
      Dst_full_realization(s,h,run)=Dst_full(s,h);
       
      *IF(%Demand_Disturbance_flag% eq 1,
               LOOP(run,
                  deliveries_time(o,run)=deliveries_time(o,run)+UniformInt(-dema
      nd_variation,demand_variation);
                  Dst_full_realization(s,h,run)=(Dst_full(s,h)+Dst_full(s,h)*uni
      formInt(-lambda_Demand,lambda_Demand)  )$(Dst_full(s,h) gt 0);
               );
      *);
      ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 796  ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 797  ******DEMAND INFORMATION*****************************
 798  *Each order for all products
 799  SET         o orders /o1*o30/;
 800  PARAMETER deliveries_time(o,run);
 801  deliveries_time(o,run)=demand_cycletime*ord(o);
 802  PARAMETER deliveries(o,s);
 803  deliveries(o,s)$(product_states(s))=demand_magnitude;
 804  ******DEMAND INFORMATION*****************************
 805   
 806  PARAMETER Dst_full_realization(s,h,run),Dst_full(s,h);
 807   
 808  *IF(%Demand_Disturbance_flag% eq 1,
 809  LOOP(run,
 810    deliveries_time(o,run)=deliveries_time(o,run)+UniformInt(-demand_variati
      on,demand_variation);
 811    Dst_full_realization(s,h,run)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(d
      eliveries_time(o,run)/1)));
 812    Dst_full_realization(s,h,run)=(Dst_full_realization(s,h,run)+Dst_full_re
      alization(s,h,run)/100*uniformInt(-lambda_Demand*100,lambda_Demand*100)  )
      $(Dst_full_realization(s,h,run) gt 0);
 813  );
 814  *);
 815  ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 816   
 817   
 818  PARAMETER ClosedLoopINV(run,s,h),ClosedLoopBO(run,s,h),ClosedLoopShip(run,
      s,h),ClosedLoopShip_sales(run,s,h),
 819            ClosedLoopStart(run,h),Cost_EndInventory(run),ClosedLoopExecutio
      ns(run,i);
 820  ClosedLoopINV(run,s,h)=0;
 821  ClosedLoopBO(run,s,h)=0;
 822  ClosedLoopShip(run,s,h)=0;
 823  ClosedLoopShip_sales(run,s,h)=0;
 824  ClosedLoopStart(run,h)=0;
 825  Cost_EndInventory(run)=0;
 826  ClosedLoopExecutions(run,i)=0;
 827  *This parameter switches to 1 at end of this file
 828  *indicating a succesful run(sweep of code) throughout
 829  PARAMETER SUCCESS /0/;
 830   
 831   
 832  PARAMETER timeLeft /0/;
 833  PARAMETER endingSeed /0/;
 834  *PARAMETER sample /0/;
 835   
 836  ********************STOPPING CRITERION*************
      PARAMETER mean_runcost(run), std_dev_runcost(run), delta_std_dev_runcost(r
      un), max_delta_std_dev_runcost(run), N_run count of runs;
      mean_runcost(run)=0;
      std_dev_runcost(run)=0;
      delta_std_dev_runcost(run)=0;
      max_delta_std_dev_runcost(run)=0;
      N_run=0;
      ALIAS(run,run_p);
      ********************STOPPING CRITERION*************
 847   
 848  ********************[Start] Evaluations Runs *****************************
      **********
 849  loop(run,
      put screen;
      put 'I am on run ' run.tl;
      putclose;
      put log;
      put 'I am on run ' run.tl;
      putclose;
 858   
 859  *We need to reset Dst_full(s,h) with each run to nominal values
 860  *and then as MH goes forward, Dst_full slowly takes the value of Dst_full_
      realization
 861  *for that particular run, after which here we need to refresh it to nomina
      l values
 862  Dst_full(s,h)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(deliveries_time(o,r
      un)/1)));
 863   
 864  if(0 eq 1,
 865  abort$1 "Look into robust case demand generation in MasterFile and make su
      re its correct";
 866           Dst_full(s,h)=Dst_full(s,h)*(1+ lambda_Demand);
 867  );
 868  *this time sample is equal to 1, so we are in evaluation mode
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\ModelSolution9.gm
           s
 870  loop(calc,
 871  *Caution: Watch out W equations in case changeovers are involved with rega
      rds to lifting(pi(i)+tauC)
 872  *fixed_decisions=re_freq-1-mod(ord(calc)-1+re_freq-1,re_freq);
 873  *abort$1 "stopped for debugging";
 874  *abort$(ord(calc)-1 eq 1) "stopped for debugging";
 875   
 876  *********VARIABLE RESCHEDULING FREQUENCY********
 877  *resetting old parameter values
 878  WbarInfo(i,j,n,hbar)=0;
 879  BbarInfo(i,j,n,hbar)=0;
 880   
 881  *DEMAND SAMPLING
 882  *Picking realized demand upto surprise factor within MH from demand_sample
       generated for this run
 883          Dst_full(s,h)$(ord(h)-1 le (ord(calc)-1 + ceil(card(n)*(1-surprise
      ))) )=Dst_full_realization(s,h,run);
 884  *Now allocating demands to the rolling horizon calculation
 885          Dst(s,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Dst_full(s,h
      ));
 886   
 887   
      * EVENT BASED RESCHEDULING (HAS BUG: when moving horizon is shorter than r
      escheduling freq, more decisions
      *are wrongly fixed)
      if (re_freq=0,
      *Reschedule flag is 1 for first optimization
              reschedule_flag=0;
      *Now see if we should reschedule or not depending on whether new demand ca
      me or not
              reschedule_flag=1$(sum((s,n)$(ord(n) eq card(n)),Dst(s,n)) > 0);
      *Also do find schedule for the very first optimization
              reschedule_flag$(ord(calc)-1 eq 0)=1;
      *Now decide the fixed decisions (W,B) depending on rescheduling_flag
              if (reschedule_flag=1,
      *Complete freedom to start new tasks (subject to old tasks not already run
      ning)
                      fixed_decisions=0;
              else
      *Forced to follow previous fixed (planned) decisions
                      fixed_decisions=card(n)-1;
              );
      else
 908          fixed_decisions=re_freq-1 - mod(ord(calc)-1+(re_freq-1),re_freq);
 909          reschedule_flag=0;
 910          reschedule_flag$(fixed_decisions=0)=1;
 911  *);
 912  record_fixed_decision(calc)=fixed_decisions;
 913  record_reschedule_flag(calc,run)=reschedule_flag;
 914   
 915  *Unfix fixed variables
 916  Ship.lo(s,n)=0;Ship.up(s,n)=Inf;
 917  Rst.lo(s,n)=0;Rst.up(s,n)=Inf;
 918  Ship_sales.lo(s,n)=0;Ship_sales.up(s,n)=Inf;
 919  *Uut.lo(u,n)=0; Uut.up(u,n)=Inf;
 920  *Fix Input states
 921  WbarInfo(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 le pi(i)
       and Ij(i,j))=record_states(run,calc-1,'W',i,j,n,hbar-1)+InitialWbar(i,j,n
      ,hbar)$(ord(calc)-1 eq 0)+Yhat(i,j,n,hbar)-Yhat(i,j,n,hbar-1);
 922  BbarInfo(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 le pi(i)
       and Ij(i,j))=record_states(run,calc-1,'B',i,j,n,hbar-1)+InitialBbar(i,j,n
      ,hbar)$(ord(calc)-1 eq 0)+record_states(run,calc-1,'B',i,j,n,hbar)*Yhat(i,
      j,n,hbar)-record_states(run,calc-1,'B',i,j,n,hbar-1)*Yhat(i,j,n,hbar-1);
 923  Ship.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_shipment(run,calc-1,s,
      n+1);
 924  Rst.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_Rst(run,calc-1,s,n+1);
 925  Ship_sales.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_shipment_sales(r
      un,calc-1,s,n+1);
 926  T.fx(i,j,hbar)=0;
 927  *********VARIABLE RESCHEDULING FREQUENCY********
 928   
 929  *Since inventory and backlog depend on the inputs, as long as we have corr
      ectly carried over the inventory we are good
 930  Sst.fx(s,n)$(ord(n)-1 le 0)=record_inventory(run,calc-1,s,n+1)+InitialInve
      ntory(s)$(ord(calc)-1 eq 0);
 931  Backlog.fx(s,n)$(ord(n)-1 le 0)=record_backlog(run,calc-1,s,n+1)+InitialBa
      cklog(s)$(ord(calc)-1 eq 0);
 932  *Uut.fx(u,n)$(ord(n)-1 le 0)=record_utility(run,calc-1,u,n+1);
 933   
 934   
 935  *Fix backlogs to zero if corresponding flag is 0
 936  if(1 eq 0,
 937  Backlog.fx(s,n)=0;
 938  BacklogTerminal.fx(s)=0;
 939  );
 940  *Dst(s,n)$(product_states(s) AND ord(n) eq 1) = 1;
 941  *Ship_sales.fx(s,n)$(ord(n)-1 eq 0 AND sameas(s,'M4')) = 8.05;
 942  *Ship_sales.fx(s,n)$(ord(n) lt card(n)) = 0;
 943   
 944  *cc=execseed;
 945  ***************SAMPLING DISTURBANCES/UNCERTAINTIES************************
      ******
 946  *Introducing disturbance in demand by modifying Dst_full(s,h) only if Dist
      urbance flag is 1(on)
 947  *if(%Demand_Disturbance_Flag% eq 1,
 948  *);
 949   
 950  **UNCOMMENT HERE TO HERE  (commented for event based rescheduling)
 951  **        Dst_full(s,h)$(ord(h)-1 le (ord(calc)-1 + ceil(card(n)*(1-surpri
      se))) )=Dst_full_realization(s,h,run);
 952  *Now allocating demands to the rolling horizon calculation
 953  *        Dst(s,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Dst_full(s,
      h));
 954  **UNCOMMENT HERE TO HERE
 955  *Display Dst_full;
 956   
 957   
 958  *UnitBreakdown disturbance
 959  *First breakdown unit for whole horizon and then sample after 1 time step
 960  *when it is coming back
 961  UnitBroken(j,n)=0;
 962  Zhat(i,j,n,hbar)=0;
 963  if(0 eq 1 and ord(calc)-1 ge 2,
 964           Breakdown(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and De
      lay(calc-1,i,j,hbar-1) eq 0)=1$(uniform(0,1) gt 0.9 and Duration_breakdown
      (calc-1,j) eq 0 and (sum(n$(ord(n)-1 eq 0),record_states(run,calc-1,'W',i,
      j,n,hbar-1)) gt 0));
 965   
 966  *If there is a delay ongoing then sample this breakdown
 967           Breakdown(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and De
      lay(calc-1,i,j,hbar) gt 0)=1$(uniform(0,1) gt 0.9 and Duration_breakdown(c
      alc-1,j) eq 0 and (sum(n$(ord(n)-1 eq 0),record_states(run,calc-1,'W',i,j,
      n,hbar)) gt 0));
 968   
 969  *Assume on breakdown that the unit by default is not available the whole r
      emaining horizon and then
 970  *resample after one time step when it is due to come back[here half of rol
      ling horizon length]
 971   
 972  *         Duration_breakdown(calc,j)=floor(uniform(0,card(n)/2))$(sum((hba
      r,i)$(Ij(i,j) and ord(hbar)-1 le pi(i)),Breakdown(calc-1,i,j,hbar)) eq 1 a
      nd Duration_breakdown(calc-1,j) eq (card(h)))
 973  *                                         +(Duration_breakdown(calc-1,j)-1
      )$(Duration_breakdown(calc-1,j) gt 0 and Duration_breakdown(calc-1,j) lt c
      ard(h))
 974  *                                         +card(h)$(sum((hbar,i)$(Ij(i,j) 
      and ord(hbar)-1 le pi(i)),Breakdown(calc,i,j,hbar)) eq 1);
 975           Duration_breakdown(calc,j)=2$(sum((hbar,i)$(Ij(i,j) and ord(hbar)
      -1 le pi(i)),Breakdown(calc-1,i,j,hbar)) eq 1 and Duration_breakdown(calc-
      1,j) eq (card(h)))
 976                                           +(Duration_breakdown(calc-1,j)-1)
      $(Duration_breakdown(calc-1,j) gt 0 and Duration_breakdown(calc-1,j) lt ca
      rd(h))
 977                                           +(card(h))$(sum((hbar,i)$(Ij(i,j)
       and ord(hbar)-1 le pi(i)),Breakdown(calc,i,j,hbar)) eq 1);
 978  *display Breakdown,duration_breakdown;
 979   
 980           UnitBroken(j,n)=0;
 981           UnitBroken(j,n)$(ord(n)-1 lt Duration_breakdown(calc,j))=1;
 982   
 983           Zhat(i,j,n,hbar)=0;
 984           Zhat(i,j,n,hbar)$(ord(n)-1 eq 0 and Breakdown(calc,i,j,hbar) eq 1
      )=1;
 985   
 986  );
 987   
 988   
 989   
 990  *Disturbance associated with delay in tasks, hbar indicates the running st
      atus of the task
 991  *Due to nature of lifting, there is already a 1 time unit lag, hence we li
      mit hbar from 0 to pi(i)
 992  *so that recordstates is accessed only upto pi(i)-1. Record state being pi
      (i) means that the task
 993  *was already over in the last horizon
 994  if(0 eq 1,
 995  *          Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i))=(Delay(
      calc-1,i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) ge 1)
 996  *                                                            +2$(uniform(0
      ,1) ge 0 and (sum(n$(ord(n)-1 eq 0),record_states(calc-1,'W',i,j,n,hbar-1)
      ) gt 0) and Delay(calc-1,i,j,hbar-1) eq 0);
 997            Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i))=(Delay(c
      alc-1,i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) ge 1);
 998            Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and Delay
      (calc-1,i,j,hbar) eq 0)=2$(uniform(0,1) ge 0.6 and (sum(n$(ord(n)-1 eq 0),
      record_states(run,calc-1,'W',i,j,n,hbar-1)) gt 0 and Delay(calc-1,i,j,hbar
      -1) eq 0));
 999  *          Delay(calc,i,j,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=(Delay(calc-1,
      i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) gt 0)
1000  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=1$(uniform(0,1) gt
       0 and record_states(calc-1,'W',i,j,n,hbar-1) gt 0);
1001   
1002  *display Delay;
1003  *Wipes out previous Yhats
1004            Yhat(i,j,n,hbar)=0;
1005  *Over-rides Delays with Unit breakdown. ie if unit breakdown occurs then t
      here cannot be a delay
1006            Delay(calc,i,j,hbar)=Delay(calc,i,j,hbar)$(sum(n$(ord(n)-1 eq 0)
      ,Zhat(i,j,n,hbar)+Zhat(i,j,n,hbar+1)) eq 0);
1007  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=1$(Delay(calc,i,j,
      hbar) gt 0);
1008            Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 lt Delay(calc,i,j,hbar))=
      1$(Delay(calc,i,j,hbar) gt 0);
1009   
1010  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0 and ord(hbar)-1 le 
      pi(i))=1$(uniform(0,1) ge 0 and record_states(calc-1,'W',i,j,n,hbar) gt 0)
      ;
1011  *          WbarInfo(i,j,n,hbar)$Yhat(i,j,n,hbar)=1;
1012  *          BbarInfo(i,j,n,hbar)$Yhat(i,j,n,hbar)=record_states(calc-1,'W',
      i,j,n,hbar);
1013  );
1014   
1015  *display Yhat;
1016  *display WbarInfo;
1017  *display BbarInfo;
1018   
1019   
1020  *Introducing disturbance in material handling(loading/unloading)
1021  *Here we implement only production disturbance because its more likely tha
      n consumption disturbance
1022  *Consumption disturbance has the tricky part that if loading was 5 units, 
      and we had just 5 units, the task is already started and we cant
1023  *then add a disturbance on top of it saying 5.5 units was actually consume
      d because the task has already started.
1024  if(0 eq 1,
1025  *the last two multiplication of (1-z(h+1))(1-z(h)) are when there are only
       unit breakdown, and when there is unit breakdown in middle of delay respe
      ctively
1026  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0 and produc
      t_states(s))=uniform(-0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),rec
      ord_states(calc-1,'B',i,j,n,hbar)*(1-Yhat(i,j,n,hbar+1))*(1-Zhat(i,j,n,hba
      r+1))*(1-Zhat(i,j,n,hbar)));
1027  *wipes out previous parameter values
1028  betaHatProd(i,j,s,n)=0;
1029  betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-0
      .1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)),BbarInfo(i,j,n,hbar)*(1-Yhat
      (i,j,n,hbar))*(1-Zhat(i,j,n,hbar))*(1-Zhat(i,j,n,hbar-1)));
1030  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-
      0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),record_states(calc-1,'B',
      i,j,n,hbar)*(1-Yhat(i,j,n,hbar+1))*(1-Zhat(i,j,n,hbar)));
1031  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-
      0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),record_states(calc-1,'B',
      i,j,n,hbar));
1032  );
1033  *Display betaHatProd;
1034   
1035   
1036  *Correct allocation constraint
1037  *KillDurationCountdown(i,j)$Ij(i,j)=%KillSwitch%$(sum(hbar,T.l(i,j,hbar)) 
      gt 0);
1038  KillOccupy(j,n)=0;
1039  KillDuration(i,j)$Ij(i,j)=KillLength$(0);
1040  *KillDuration(i,j)$Ij(i,j)=(%KillSwitch%+1)$(sum(hbar,T.l(i,j,hbar)) gt 0 
      and KillDuration(i,j) eq 0);
1041  *KillDuration(i,j)$(Ij(i,j) and KillDuration(i,j) <> 0)=KillDuration(i,j)-
      1;
1042  KillCountdown(j)=sum((i,hbar)$Ij(i,j),T.l(i,j,hbar)*KillDuration(i,j))  +(
      KillCountdown(j)-1)$(KillCountdown(j) gt 0);
1043  KillOccupy(j,n)$(ord(n)-1 lt KillCountdown(j)-1)=1;
1044  if(0 eq 0,
1045     T.fx(i,j,hbar)=0;
1046  );
1047  *Display Breakdown,Duration_breakdown,UnitBroken,Zhat,KillOccupy;
1048  ***************SAMPLING DISTURBANCES/UNCERTAINTIES************************
      ******
1049   
1050  ***************UTILITIES**************************************************
      ******
1051  Uutmax(u,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Uutmax_full(u,h))
      ;
1052  Unitunavailable(j,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Unitunav
      ailable_full(j,h));
1053  Cut(u,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Cut_full(u,h));
1054  *Correct Cutfull calculation, all the relation of taking hours to time poi
      nts
1055  *This correction is needed in model file
1056  ***************UTILITIES**************************************************
      ******
1057  *Display Dst;
1058   
1059  *abort$(sameas(calc,"calc25")) "stopped for debugging";
1060  *Solve optimization horizon
1061   
1062  Option IntVarUp=0;
1063  *******************FIND OPEN LOOP SCHEDULE********************************
      ******
1064  MIN_COST.optcr = optcr_value$(reschedule_flag)+1$(NOT reschedule_flag);
1065  MIN_COST.reslim = timelimit;
1066  MIN_COST.holdFixed=1;
1067  solve MIN_COST using MIP MINIMIZING obj_variable;
1068   
1069  modelStat(calc,run)=MIN_COST.ModelStat;
1070  *Watch out what should be denominator, Relaxed or Best found solution
1071  *Cplex uses division by best found integer solution
1072  Est_modelGap1(calc,run)=abs((MIN_COST.objEst-MIN_COST.objVal)/(MIN_COST.ob
      jVal+1E-10));
1073  Est_modelGap2(calc,run)=abs((MIN_COST.objEst-MIN_COST.objVal)/(MIN_COST.ob
      jEst+1E-10));
1074  Suboptimal_objective=MIN_COST.objVal;
1075   
1076  ETSolve(calc,run)=MIN_COST.etSolve;
1077  ETSolver(calc,run)=MIN_COST.etSolver;
1078  iterUsd(calc,run)=MIN_COST.iterUsd;
1079  nodUsd(calc,run)=MIN_COST.nodUsd;
1080  resUsd(calc,run)=MIN_COST.resUsd;
1081  numDVar(calc,run)=MIN_COST.numDVar;
1082  numEqu(calc,run)=MIN_COST.numEqu;
1083  numInfes(calc,run)=MIN_COST.numInfes;
1084  numNZ(calc,run)=MIN_COST.numNZ;
1085  numVar(calc,run)=MIN_COST.numVar;
1086  solveStat(calc,run)=MIN_COST.solveStat;
1087   
1088  *Recording optimized variables for each optimization horizon
1089  record_states_raw(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,
      j))= Bbar.l(i,j,n,hbar);
1090  record_states_raw(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,
      j))= Wbar.l(i,j,n,hbar);
1091  record_states(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))=
       round(Bbar.l(i,j,n,hbar),2)$(Bbar.l(i,j,n,hbar) ge vminij(i,j)+Small_numb
      er and Bbar.l(i,j,n,hbar) le vmaxij(i,j)-Small_number) + round(Bbar.l(i,j,
      n,hbar))$(NOT (Bbar.l(i,j,n,hbar) ge vminij(i,j)+Small_number and Bbar.l(i
      ,j,n,hbar) le vmaxij(i,j)-Small_number));
1092  record_states(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))=
       round(Wbar.l(i,j,n,hbar));
1093  record_T(run,calc,i,j,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))= T.l(i,j,hb
      ar);
1094  record_inventory(run,calc,s,n)=round(Sst.l(s,n),3);
1095  record_backlog(run,calc,s,n)=round(Backlog.l(s,n),3);
1096  record_inventory_raw(run,calc,s,n)=Sst.l(s,n);
1097  record_backlog_raw(run,calc,s,n)=Backlog.l(s,n);
1098  record_yieldloss(run,calc,i,j,s,n)=betaHatProd(i,j,s,n);
1099  record_objective(run,calc)=obj_variable.l;
1100  record_utility(run,calc,u,n)=Uut.l(u,n);
1101  record_inventoryTerminal(run,calc,s)=SstTerminal.l(s);
1102  record_backlogTerminal(run,calc,s)=BacklogTerminal.l(s);
1103  record_shipment_raw(run,calc,s,n)=Ship.l(s,n);
1104  record_shipment(run,calc,s,n)=round(Ship.l(s,n),2);
1105  record_shipment_sales_raw(run,calc,s,n)=Ship_sales.l(s,n);
1106  record_shipment_sales(run,calc,s,n)=round(Ship_sales.l(s,n),2);
1107  record_Rst_raw(run,calc,s,n)=Rst.l(s,n);
1108  record_Rst(run,calc,s,n)=round(Rst.l(s,n),2);
1109  record_demands(run,calc,s,n)=Dst(s,n);
1110  record_Demands_realization(run,s,h)=Dst_Full_Realization(s,h,run);
1111   
1112  record_WbarInfo(run,calc,i,j,n,hbar)=WbarInfo(i,j,n,hbar);
1113  record_BbarInfo(run,calc,i,j,n,hbar)=BbarInfo(i,j,n,hbar);
1114   
1115  BOStat_OL(calc,run) =  1$(sum((s,n),record_backlog(run,calc,s,n)+record_ba
      cklogTerminal(run,calc,s)) > 0);
1116  BOStat_CL(calc,run) =  1$(sum((s,n)$(ord(n)-1 eq 0),record_backlog(run,cal
      c,s,n)) > 0);
1117   
1118  *display ship.l;
1119  Optimal_Objective=Suboptimal_Objective;
1120  ***********************FIND OPTIMAL OBJECTIVE IF OPTCR <>0****************
      *
1121  IF(MIN_COST.optcr <> 0 AND reschedule_flag eq 1,
      put screen;
      put 'Now solving optimal open loop';
      putclose;
1127  MIN_COST.optcr=0;
1128  solve MIN_COST using MIP MINIMIZING obj_variable;
1129  Optimal_Objective=MIN_COST.objVal;
1130  True_modelGap(calc,run)=(Suboptimal_objective-Optimal_Objective)/(Optimal_
      objective+1E-10);
1131  TimeToSolveOptimal(calc,run)=MIN_COST.resUsd;
1132  );
1133   
1134  ***********************FIND OPTIMAL OBJECTIVE IF OPTCR <>0****************
      *
1135   
1136  ******WARNING: ALL VARIABLE LEVEL VALUES ARE THOSE OF OPTCR=0 NOW*********
      *
1137   
1138  IF (reschedule_flag eq 1,
1139  ***********************SOLVE RMIP TO GET INTEGRALITY GAP*****************
1140  solve MIN_COST using RMIP MINIMIZING obj_variable;
1141  record_relaxed_objective(run,calc)=obj_variable.l;
1142  IntegralityGap(calc,run)=record_relaxed_objective(run,calc)/(Optimal_Objec
      tive+1E-10);
1143  record_relaxed_states(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and I
      j(i,j))= Bbar.l(i,j,n,hbar);
1144  record_relaxed_states(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and I
      j(i,j))= Wbar.l(i,j,n,hbar);
1145  record_relaxed_shipment(run,calc,s,n)=Ship.l(s,n);
1146  record_relaxed_shipment_sales(run,calc,s,n)=Ship_sales.l(s,n);
1147  record_relaxed_backlog(run,calc,s,n)=Backlog.l(s,n);
1148  );
1149  ***********************SOLVE RMIP TO GET INTEGRALITY GAP*****************
1150   
1151  ******WARNING: ALL VARIABLE LEVEL VALUES ARE THOSE OF RMIP NOW**********
1152   
1153  );
1154  **END OF CALC LOOP HERE
1155   
1156  *END OF SOLUTION FILE
1157   
1158   
1159   
1160  loop((n,calc)$(ord(n)-1 eq 0),
1161           ClosedLoopINV(run,s,h)$(ord(h) eq ord(calc))=record_inventory(run
      ,calc,s,n);
1162           ClosedLoopBO(run,s,h)$(ord(h) eq ord(calc))=record_backlog(run,ca
      lc,s,n);
1163           ClosedLoopShip(run,s,h)$(ord(h) eq ord(calc))=record_shipment(run
      ,calc,s,n);
1164           ClosedLoopShip_sales(run,s,h)$(ord(h) eq ord(calc))=record_shipme
      nt_sales(run,calc,s,n);
1165           ClosedLoopStart(run,h)$(ord(calc) eq ord(h))=sum((i,j,hbar)$(Ij(i
      ,j) AND ord(hbar)-1 eq 0),record_states(run,calc,'W',i,j,n,hbar));
1166  *         ClosedLoopStart(run,h)$(ord(calc) eq ord(h))=0;
1167  );
1168           ClosedLoopExecutions(run,i)=sum((calc,j,n,hbar)$(Ij(i,j) AND ord(
      hbar)-1 eq 0
1169                                           AND ord(n)-1 eq 0 AND ord(calc)-1
       le 24-1),
1170                                           record_states(run,calc,'W',i,j,n,
      hbar));
1171   
1172  *         runcost_Inv(run)=1E1*sum((s,h)$closed_loop(h),Cst_new(s)*Sinv(s,
      h));
1173  *         runcost_BO(run)=1E2*sum((s,h)$closed_loop(h),Cst_new(s)*BO(s,h))
      ;
1174           runcost_Inv(run)=1E1*sum((s,h)$closed_loop(h),Cst_new(s)*ClosedLo
      opINV(run,s,h));
1175           runcost_BO(run)=1E2*sum((s,h)$closed_loop(h),Cst_new(s)*ClosedLoo
      pBO(run,s,h));
1176           runcost_W(run)=sum((h)$closed_loop(h),ClosedLoopStart(run,h));
1177  *total profit from all shipments (demand+sales)
1178   
1179           runcost(run)=runcost_Inv(run)+runcost_BO(run)+runcost_W(run);
1180   
1181  *         sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(
      h) and (ord(h)-1 ne %Closed_Loop_Upper_delta%) ),
1182  *                                 Cst_new(s)*(ClosedLoopShip(run,s,h)+Clos
      edLoopShip_sales(run,s,h) ));
1183           sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(h
      ) and (ord(h)-1 ne 24) ),
1184                                   Cst_new(s)*(ClosedLoopShip_sales(run,s,h)
       ));
1185  *         sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(
      h) and (ord(h)-1 ne %Closed_Loop_Upper_delta%) ),Cst_new(s)*ClosedLoopShip
      _sales(run,s,h));
1186           Cost_EndInventory(run)=sum((s,h)$(product_states(s) and ord(h)-1 
      eq 24),Cst_new(s)*ClosedLoopINV(run,s,h));
1187  *         runcost_W(run)=0;
1188  *         runprofit(run)=sum((s,h)$(product_states(s) and closed_loop(h)),
      Cst_new(s)*ClosedLoopShip(run,s,h))+runcost_W(run);
1189  *Runprofit includes subtraction of BO even at last point because BO are wr
      itten like inventory
1190  *BO at 168 means just before 168th point. Ship at 168 means at 168 not bef
      ore or after.
1191  *Our runprofit is only for 167 points of closed loop and 168th point as co
      rrection. So we are essentially wasting the last decision
1192  *that is the open loop that was computed at 168.
1193           runprofit(run)=sales_profit(run)+Cost_EndInventory(run)
1194                           -(runcost_W(run)-sum((h)$(ord(h)-1 eq 24),ClosedL
      oopStart(run,h)))
1195                           -runcost_BO(run);
1196   
1197  *         runprofit(run)=runcost_Inv(run)-runcost_BO(run)
1198  *                        +1E1*sum((s,h)$(product_states(s) and closed_loop
      (h)),Cst_new(s)*ClosedLoopShip(run,s,h));
1199   
1200  *Does not include cost of Terminal BO and inventory but thats okay because
       they are irrelevant when some extra horizon is allowed for getting comple
      te closed loop rolling horizon solution
1201  ************[Start]Information to get very crude estimate for running time
       left**************
1202  timeLeft=MIN_COST.etSolve*(card(run)-ord(run))*card(calc);
      put screen;
      put 'Time for run ' P1.etSolve;
      put ' Estimated Time Left ' timeLeft;
      putclose;
1209  *************[End]Information to get very crude estimate for running time 
      left***************
1210   
      *************Stopping Criterion**************
      N_run=ord(run);
      mean_runcost(run)=sum(run_p$(ord(run_p) le N_run),runcost(run_p))/N_run;
      std_dev_runcost(run)$(ord(run) gt 1)= sqrt(       sum(run_p$(ord(run_p) le
       N_run),     ( abs(  runcost(run_p)-mean_runcost(run) )**2)) /(N_run-1)   
       );
      delta_std_dev_runcost(run)$(ord(run) gt 2)=std_dev_runcost(run)/std_dev_ru
      ncost(run-1)  - 1;
      max_delta_std_dev_runcost(run)= sqrt( 1 + (1.96**2-1)/N_run ) -1;
      *icdfnorm(0.95,0,1);
      *************Stopping Criterion**************
1221  );
1222  ********************[End] runs loop **************************************
      *
1223   
1224  *******************GANTT CHART PARAMETERS*********************************
      ****
1225  PARAMETERS BS(i,j,h),start(i,j,h),Sinv(s,h),end(i,j,h),BO(s,h);
1226  IF (1 eq 0,
1227           loop((run,calc)$(ord(run) eq 1),
1228             BS(i,j,h)$(ord(h) eq ord(calc))=sum((hbar,n)$(ord(hbar)-1 eq 0 
      and ord(n)-1 eq 0),record_states(run,calc,'B',i,j,n,hbar));
1229  *start(i,j,h)$(ord(h)eq ord(calc))=round(sum((hbar,n)$(ord(hbar)-1 eq 0 an
      d ord(n)-1 eq 0),record_states(calc,'W',i,j,n,hbar)));
1230             start(i,j,h)$(ord(h)eq ord(calc))=sum((hbar,n)$(ord(hbar)-1 eq 
      0 and ord(n)-1 eq 0),record_states(run,calc,'W',i,j,n,hbar));
1231             Sinv(s,h)$(ord(h) eq ord(calc))=sum(n$(ord(n)-1 eq 0),record_in
      ventory(run,calc,s,n));
1232             BO(s,h)$(ord(h) eq ord(calc))=sum(n$(ord(n)-1 eq 0),record_back
      log(run,calc,s,n));
1233           );
1234  ELSE
1235  *Write OPEN loop static gantt chart %GanttChart_OPENLOOP% eq 1
1236           loop((run,calc)$(ord(run) eq 1 and ord(calc) eq 3),
1237             BS(i,j,h)$(Ij(i,j))=sum((hbar,n)$(ord(hbar)-1 eq 0 and (ord(n) 
      eq ord(h))),record_states(run,calc,'B',i,j,n,hbar));
1238             start(i,j,h)$(Ij(i,j))=sum((hbar,n)$(ord(hbar)-1 eq 0 and (ord(
      n) eq ord(h))),record_states(run,calc,'W',i,j,n,hbar));
1239             Sinv(s,h)=sum(n$(ord(n) eq ord(h)),record_inventory(run,calc,s,
      n));
1240             BO(s,h)=sum(n$(ord(n) eq ord(h)),record_backlog(run,calc,s,n));
1241           );
1242  );
1243  *Have ending account for task delays
1244  end(i,j,h) = start(i,j,h-pi_new(i))$(BS(i,j,h-pi_new(i))>0);
1245  *******************GANTT CHART PARAMETERS*********************************
      ****
1246   
1247  *******************EXPORT ALL RESULTS IN GDX FILE*************************
      ****
1248  SUCCESS=1;
1249  EXECUTE_UNLOAD 'Z_N2_MH18_RF1_OPT1_DF12_DV3_DL12_DU1_S1_MC1_Cost.gdx';
1250  *******************EXPORT ALL RESULTS IN GDX FILE*************************
      ****
1251   
1252  *********Generate EXCEL SHEEL FOR GANTT CHARTING (Requires windows)*******
      ****
1253  IF(1 eq 1,
1254  ************************************************
1255  ********Closed-Loop GanttChartGeneration********
1256  ************************************************
1257  *Name of the excel file where the data will be exported
1258  *$setglobal file %Results_FileName%_Gantt
1259  *i = set of tasks
1260  *j = set of units
1261  *h = set of time points
1262  *BS = batch size of task i starting in unit j at time t (must be indexed i
      jt)
1263  *start = binary variable that is 1 if task i starts in unit j at time t (m
      ust be indexed ijt)
1264  *Sinv = inventory level of material s at time t (must be indexed st)
1265  *BO= backorder of state s at time t
1266  *end =  binary variable that is 1 if task i ends in unit j at time t (must
       be indexed ijt)
1267   
1268  *EXECUTE_UNLOAD '%Results_FileName%_Gantt.gdx' BS i j h  Sinv start end;
1269   
1270  *The first word of each line gives the type: set = set, var = variable, pa
      r = parameter. This may need to be changed depending on your model
1271  *The location of the output or the sheet names must not be changed
1281   
1282  *display BS,start,end,Sinv,BO;
1283           IF (1 eq 0,
1284                    EXECUTE 'gdxxrw Input=Z_N2_MH18_RF1_OPT1_DF12_DV3_DL12_D
      U1_S1_MC1_Cost.gdx Output=Z_N2_MH18_RF1_OPT1_DF12_DV3_DL12_DU1_S1_MC1_Cost
      _Gantt_CL @GANTT_write.txt'
1285           ELSE
1286                    EXECUTE 'gdxxrw Input=Z_N2_MH18_RF1_OPT1_DF12_DV3_DL12_D
      U1_S1_MC1_Cost.gdx Output=Z_N2_MH18_RF1_OPT1_DF12_DV3_DL12_DU1_S1_MC1_Cost
      _Gantt_OL_3 @GANTT_write.txt'
1287           );
1288  );
1289  *********Generate EXCEL SHEEL FOR GANTT CHARTING (Requires windows)*******
      ****
1290   
1291  *END OF MASTER FILE
1292   
1293   
1294   
1295   
1296   
1297   
1298  *Watch out for overflow of solution for rolling horizon...ie the spilling 
      over of
1299  *rolling horizon beyond real horizon to get last implemented closed loop s
      olution
1300   
1301   
1302  *$set console
1303  *$if %system.filesys% == UNIX  $set console /dev/tty
1304  *$if %system.filesys% == DOS $set console con
1305  *$if %system.filesys% == MS95  $set console con
1306  *$if %system.filesys% == MSNT  $set console con
1307  *$if "%console%." == "." abort "filesys not recognized";
1308  *file screen / '%console%' /;
1309  *file log /''/
1310   
1311   
1312   
1313   
1314   
1315   
1316   
1317   
1318   
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 5
State_Space_Model
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\dhruv\Box Sync\Work\Codes\GAM
                                          S_Code_Paper1\Z_N2_MH18_RF1_OPT1_DF12_
                                          DV3_DL12_DU1_S1_MC1_Cost.gms
     2       21 INCLUDE        1      21  .C:\Users\dhruv\Box Sync\Work\Codes\GA
                                           MS_Code_Paper1\ConfigurationFile.gms
     3       90 INCLUDE        2      69  ..C:\Users\dhruv\Box Sync\Work\Codes\G
                                            AMS_Code_Paper1\MasterFile.gms
     4      107 INCLUDE        3      17  ...C:\Users\dhruv\Box Sync\Work\Codes\
                                             GAMS_Code_Paper1\NetworkN2.gms
     5      215 INCLUDE        3      18  ...C:\Users\dhruv\Box Sync\Work\Codes\
                                             GAMS_Code_Paper1\Model9.gms
     6      869 INCLUDE        3     149  ...C:\Users\dhruv\Box Sync\Work\Codes\
                                             GAMS_Code_Paper1\ModelSolution9.gms


COMPILATION TIME     =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 6
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc0


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      4 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.109 SECONDS      4 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc0

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 7
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6004.0000

 RESOURCE USAGE, LIMIT          0.156       600.000
 ITERATION COUNT, LIMIT        98    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.14sec (det. 4.86 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.02sec (det. 0.37 ticks)
Proven optimal solution.

MIP Solution:         6004.000000    (95 iterations, 0 nodes)
Final Solve:          6004.000000    (3 iterations)

Best possible:        6004.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 8
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc0


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc0

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 9
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             3803.6000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        81    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.11 ticks)
Optimal solution found.
Objective :        3803.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 10
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc1


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.109 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc1

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 11
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             8955.0000

 RESOURCE USAGE, LIMIT          0.374       600.000
 ITERATION COUNT, LIMIT      1488    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.25sec (det. 73.42 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.38 ticks)
Proven optimal solution.

MIP Solution:         8955.000000    (1484 iterations, 117 nodes)
Final Solve:          8955.000000    (4 iterations)

Best possible:        8955.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 12
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc1


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc1

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 13
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             3803.6000

 RESOURCE USAGE, LIMIT          0.062       600.000
 ITERATION COUNT, LIMIT        78    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.05sec (det. 1.08 ticks)
Optimal solution found.
Objective :        3803.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 14
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc2


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc2

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 15
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             9056.0000

 RESOURCE USAGE, LIMIT          0.265       600.000
 ITERATION COUNT, LIMIT      1733    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.25sec (det. 106.42 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         9056.000000    (1729 iterations, 130 nodes)
Final Solve:          9056.000000    (4 iterations)

Best possible:        9056.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 16
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc2


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc2

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 17
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             3803.6000

 RESOURCE USAGE, LIMIT          0.016       600.000
 ITERATION COUNT, LIMIT        66    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.00 ticks)
Optimal solution found.
Objective :        3803.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 18
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc3


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.032 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.110 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc3

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 19
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             9056.0000

 RESOURCE USAGE, LIMIT          0.219       600.000
 ITERATION COUNT, LIMIT       902    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.20sec (det. 58.37 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         9056.000000    (898 iterations, 71 nodes)
Final Solve:          9056.000000    (4 iterations)

Best possible:        9056.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 20
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc3


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc3

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 21
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             3803.6000

 RESOURCE USAGE, LIMIT          0.016       600.000
 ITERATION COUNT, LIMIT        70    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.02 ticks)
Optimal solution found.
Objective :        3803.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 22
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc4


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc4

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 23
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             9056.0000

 RESOURCE USAGE, LIMIT          0.124       600.000
 ITERATION COUNT, LIMIT      1153    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.09sec (det. 65.52 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.01sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         9056.000000    (1149 iterations, 77 nodes)
Final Solve:          9056.000000    (4 iterations)

Best possible:        9056.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 24
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc4


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc4

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 25
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             3803.6000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        74    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.03 ticks)
Optimal solution found.
Objective :        3803.600000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 26
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc5


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.078 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc5

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 27
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             9055.0000

 RESOURCE USAGE, LIMIT          0.234       600.000
 ITERATION COUNT, LIMIT       223    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.22sec (det. 18.46 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.02sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         9055.000000    (220 iterations, 0 nodes)
Final Solve:          9055.000000    (3 iterations)

Best possible:        9055.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 28
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc5


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc5

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 29
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6303.0000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        74    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.04 ticks)
Optimal solution found.
Objective :        6303.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 30
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc6


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.125 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc6

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 31
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             9055.0000

 RESOURCE USAGE, LIMIT          0.109       600.000
 ITERATION COUNT, LIMIT       213    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.08sec (det. 19.10 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         9055.000000    (209 iterations, 0 nodes)
Final Solve:          9055.000000    (4 iterations)

Best possible:        9055.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 32
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc6


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc6

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 33
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6303.0000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT        82    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.10 ticks)
Optimal solution found.
Objective :        6303.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 34
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc7


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc7

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 35
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             9054.0000

 RESOURCE USAGE, LIMIT          0.109       600.000
 ITERATION COUNT, LIMIT       115    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.08sec (det. 9.10 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         9054.000000    (110 iterations, 0 nodes)
Final Solve:          9054.000000    (5 iterations)

Best possible:        9054.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 36
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc7


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.031 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.047 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc7

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 37
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             7052.5000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        85    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.12 ticks)
Optimal solution found.
Objective :        7052.500000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 38
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc8


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.078 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.156 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc8

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 39
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             8704.0000

 RESOURCE USAGE, LIMIT          0.109       600.000
 ITERATION COUNT, LIMIT       113    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.09sec (det. 8.99 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         8704.000000    (108 iterations, 0 nodes)
Final Solve:          8704.000000    (5 iterations)

Best possible:        8704.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 40
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc8


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc8

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 41
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6702.5000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        93    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.17 ticks)
Optimal solution found.
Objective :        6702.500000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 42
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc9


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.109 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc9

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 43
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             8354.0000

 RESOURCE USAGE, LIMIT          0.110       600.000
 ITERATION COUNT, LIMIT       168    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.08sec (det. 12.60 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         8354.000000    (163 iterations, 5 nodes)
Final Solve:          8354.000000    (5 iterations)

Best possible:        8354.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 44
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc9


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc9

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 45
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6352.5000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT       103    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.23 ticks)
Optimal solution found.
Objective :        6352.500000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 46
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc10


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.109 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc10

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 47
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             8003.0000

 RESOURCE USAGE, LIMIT          0.062       600.000
 ITERATION COUNT, LIMIT        18    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.03sec (det. 3.98 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.01sec (det. 0.40 ticks)
Proven optimal solution.

MIP Solution:         8003.000000    (14 iterations, 0 nodes)
Final Solve:          8003.000000    (4 iterations)

Best possible:        8003.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 48
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc10


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc10

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 49
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6701.8000

 RESOURCE USAGE, LIMIT          0.046       600.000
 ITERATION COUNT, LIMIT        94    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.05sec (det. 1.17 ticks)
Optimal solution found.
Objective :        6701.800000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 50
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc11


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc11

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 51
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             7502.0000

 RESOURCE USAGE, LIMIT          0.156       600.000
 ITERATION COUNT, LIMIT        13    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.14sec (det. 3.80 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.02sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         7502.000000    (11 iterations, 0 nodes)
Final Solve:          7502.000000    (2 iterations)

Best possible:        7502.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 52
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc11


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc11

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 53
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             7201.2000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT        94    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.18 ticks)
Optimal solution found.
Objective :        7201.200000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 54
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc12


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc12

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 55
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             7002.0000

 RESOURCE USAGE, LIMIT          0.156       600.000
 ITERATION COUNT, LIMIT        13    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.14sec (det. 4.06 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.02sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         7002.000000    (11 iterations, 0 nodes)
Final Solve:          7002.000000    (2 iterations)

Best possible:        7002.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 56
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc12


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.156 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.156 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc12

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 57
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6701.2000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT       100    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.23 ticks)
Optimal solution found.
Objective :        6701.200000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 58
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc13


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.078 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc13

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 59
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6501.0000

 RESOURCE USAGE, LIMIT          0.156       600.000
 ITERATION COUNT, LIMIT         3    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.14sec (det. 3.45 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         6501.000000    (1 iterations, 0 nodes)
Final Solve:          6501.000000    (2 iterations)

Best possible:        6501.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 60
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc13


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc13

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 61
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             6500.7000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT        90    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 1.19 ticks)
Optimal solution found.
Objective :        6500.700000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 62
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc14


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc14

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 63
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             4951.0000

 RESOURCE USAGE, LIMIT          0.140       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.14sec (det. 2.43 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         4951.000000    (0 iterations, 0 nodes)
Final Solve:          4951.000000    (2 iterations)

Best possible:        4951.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 64
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc14


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.078 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.078 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc14

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 65
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             4950.7000

 RESOURCE USAGE, LIMIT          0.016       600.000
 ITERATION COUNT, LIMIT        96    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.02sec (det. 1.25 ticks)
Optimal solution found.
Objective :        4950.700000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 66
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc15


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc15

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 67
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             3400.0000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.00sec (det. 2.84 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         3400.000000    (0 iterations, 0 nodes)
Final Solve:          3400.000000    (2 iterations)

Best possible:        3400.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 68
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc15


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.046 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.046 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc15

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 69
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             3400.0000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        15    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.86 ticks)
Optimal solution found.
Objective :        3400.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 70
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc16


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.109 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.109 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc16

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 71
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             1700.0000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.00sec (det. 2.82 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.39 ticks)
Proven optimal solution.

MIP Solution:         1700.000000    (0 iterations, 0 nodes)
Final Solve:          1700.000000    (2 iterations)

Best possible:        1700.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 72
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc16


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc16

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 73
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE             1700.0000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        15    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.86 ticks)
Optimal solution found.
Objective :        1700.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 74
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc17


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.094 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.094 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc17

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 75
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.00sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 76
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc17


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc17

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 77
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 78
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc18


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.110 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc18

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 79
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.00sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 80
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc18


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc18

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 81
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 82
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc19


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc19

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 83
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.00sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 84
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc19


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc19

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 85
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 86
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc20


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.110 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc20

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 87
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.125       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.13sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 88
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc20


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc20

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 89
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.000       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 90
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc21


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc21

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 91
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.125       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.13sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 92
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc21


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc21

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 93
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 94
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc22


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc22

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 95
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.124       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.12sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 96
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc22


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc22

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 97
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.016       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 98
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc23


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc23

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 99
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.00sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 100
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc23


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc23

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 101
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.015       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 102
State_Space_Model
Model Statistics    SOLVE MIN_COST Using MIP From line 1067


LOOPS                                  run   run1
                                      calc   calc24


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc24

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 103
State_Space_Model
Solution Report     SOLVE MIN_COST Using MIP From line 1067


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    MIP                 DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1067

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.031       600.000
 ITERATION COUNT, LIMIT         2    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
MIP status(101): integer optimal solution
Cplex Time: 0.00sec (det. 1.18 ticks)
Fixing integer variables, and solving final LP...
Fixed MIP status(1): optimal
Cplex Time: 0.00sec (det. 0.36 ticks)
Proven optimal solution.

MIP Solution:            0.000000    (0 iterations, 0 nodes)
Final Solve:             0.000000    (2 iterations)

Best possible:           0.000000
Absolute gap:            0.000000
Relative gap:            0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 104
State_Space_Model
Model Statistics    SOLVE MIN_COST Using RMIP From line 1140


LOOPS                                  run   run1
                                      calc   calc24


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS          480
BLOCKS OF VARIABLES          10     SINGLE VARIABLES          497
NON ZERO ELEMENTS         1,378     DISCRETE VARIABLES        173


GENERATION TIME      =        0.000 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  24.5.6 r55090 WEX-WEI
               L O O P S                run run1
                                       calc calc24

GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 105
State_Space_Model
Solution Report     SOLVE MIN_COST Using RMIP From line 1140


               S O L V E      S U M M A R Y

     MODEL   MIN_COST            OBJECTIVE  obj_variable
     TYPE    RMIP                DIRECTION  MINIMIZE
     SOLVER  CPLEX               FROM LINE  1140

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      1 Optimal                   
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.016       600.000
 ITERATION COUNT, LIMIT        29    2000000000

IBM ILOG CPLEX   24.5.6 r55090 Released Nov 27, 2015 WEI x86 64bit/MS Windows 
--- GAMS/Cplex licensed for continuous and discrete problems.
Cplex 12.6.2.0

Space for names approximately 0.03 Mb
Use option 'names no' to turn use of names off
LP status(1): optimal
Cplex Time: 0.00sec (det. 0.59 ticks)
Optimal solution found.
Objective :           0.000000



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/14/16 15:45:39 Page 106
State_Space_Model
E x e c u t i o n


EXECUTION TIME       =        0.624 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


USER: Department of Chemical & Biological EngineeringG151026:1254AO-GEN
      University of Wisconsin - Madison                          DC4923
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\Z_N2_MH18_RF1_OPT
           1_DF12_DV3_DL12_DU1_S1_MC1_Cost.gms
Output     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\Z_N2_MH18_RF1_OPT
           1_DF12_DV3_DL12_DU1_S1_MC1_Cost.lst
