GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/10/16 14:46:20 Page 1
CONFIGURATION_FILE
C o m p i l a t i o n


   2   
   3  *$SETGLOBAL OPTIMIZATION_DIRECTION  maximizing
   4  *$SETGLOBAL MODEL_NAME MAX_PROFIT
   5  *$SETGLOBAL InitialInventoryFlag 1
   6   
   7  *$SETGLOBAL OPTIMIZATION_DIRECTION  minimizing
   8  *$SETGLOBAL MODEL_NAME MIN_COST
   9  *$SETGLOBAL InitialInventoryFlag 0
  10  *******HORIZON********
  11  *$SETGLOBAL H 192
  13  *$SETGLOBAL MH 20
  14  *SCALAR re_freq /1/;
  15  *Used in chopping off initial transient in closed loop cost evaluation
  16  *$SETGLOBAL Transient_H 48
  17  *$SETGLOBAL Transient_H 0
  18  *We do Closed_Loop_Upper # of calc and record closed loop solution only ti
      ll there
  19  *$SETGLOBAL Closed_Loop_Upper 168
  20  *$SETGLOBAL Closed_Loop_Upper 192
  21  *******HORIZON********
  22   
  23  *******NETWORK AND MODEL********
  24  *$SETGLOBAL NetworkNumber 1
  27  *******NETWORK AND MODEL********
  28   
  29  *******DEMAND LOAD********
  30  *PARAMETER demand_cycletime /12/;
  31  *PARAMETER demand_variation /3/;
  32  *PARAMETER demand_magnitude NOMINAL LOAD /25/;
  33  *******DEMAND LOAD********
  34   
  35  ******DISTURBANCES********************
  36  *$SETGLOBAL Demand_Disturbance_flag 0
  40  *Parameters for demand uncertainty
  41  *What fraction ahead of rolling Horizon does demand forecast changes'
  42  *SCALAR surprise /0.34/;
  43  *Magnitude of Uncertainties
  44  *PARAMETER lambda_Demand /0.2/;
  45  *Yet to replace these names in ModelSolution9 file
  46  *and these values are hardcoded right now (look into code again)
  47  PARAMETER lambda_TaskDelay /0.2/;
  48  PARAMETER lambda_UnitBreakdown /0.2/;
  49  PARAMETER bringing_unit_back /2/;
  50  PARAMETER lambda_Handling /0.2/;
  51  ******DISTURBANCES********************
  52   
  53  *******OPTIMIZATION OPTIONS****
  54  *SCALAR   optcr_value /0/;
  55  SCALAR   timelimit /600/;
  56  *******OPTIMIZATION OPTIONS****
  57   
  58  *******EVALUATION********
  59  *$SETGLOBAL N_runs 1
  60  *******EVALUATION********
  61   
  62  *******REPORTING********
  65  *$SETGLOBAL Results_FileName Config_Results
  66  *******REPORTING********
  67   
  68  *Run the closed loop and generate results
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\MasterFile.gms
  70  *Change this to name of the instance
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/10/16 14:46:20 Page 2
MasterFile
C o m p i l a t i o n


  76  *$OFFLISTING
  77   
  78  execseed=SEED_VALUE;
****                    $140
**** LINE      9 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
  79  *parameter cc /0/;
  80   
  82  SCALAR KillLength /2/;
  83   
  84  SET run /run1*run%N_runs%/;
****                  $763,508
**** LINE     15 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
  85   
  86  $include Network%NetworkNumber%.gms
****                                    $282
**** LINE     17 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\Model9.gms
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/10/16 14:46:20 Page 3
State_Space_Model
C o m p i l a t i o n


  89  OPTIONS limrow = 0, limcol = 0, solprint = off;
  90  *OPTIONS limrow = 1000, limcol = 1000, solprint = on;
  91  *No upper limit on inventory (equation not enforced)
  92   
  93  *used for rounding W,B in recordstates in modelsolution file
  94  PARAMETER Small_number /1E-2/;
  95   
  96  *Now generating time grid using delta
  97  $EvalGlobal horizon floor(%H%/1)
****                                 $659,684
**** LINE     10 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
  98  $EvalGlobal window floor(%MH%/1)
****                                 $659,684
**** LINE     11 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
  99  *$EvalGlobal calculations (%horizon%-%window%)
 100  $EvalGlobal Transient_H_delta floor(%Transient_H%/1)
****                                                     $659,684
**** LINE     13 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 101  $EVALGLOBAL Closed_Loop_Upper_delta floor(%Closed_Loop_Upper%/1)
****                                                                 $659,684
**** LINE     14 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 102  $EvalGlobal calculations UNDF
****                              $659,693
**** LINE     15 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 103   
 104  set h time(multiples of delta) /h0*hUNDF/
****                                         $764
**** LINE     17 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 105      n time window   /n0*nUNDF/
****                              $764
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 106      calc #of windows /calc0*calcUNDF/
****                                     $764
**** LINE     19 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 107   
 108      closed_loop(h) horizon points for which we calculate closed loop cost
 109   
 110      Sbari(s,i)  materials produced by task i
****            $120,120
**** LINE     23 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 111      Si(s,i)     materials consumed by task i
 112      Tbars(i,s)    Tasks producing material s
 113      Ts(i,s) Tasks consuming material s;
 114   
 115  Sbari(s,i)=1$(rhobar(i,s) gt 0);
****                     $140
**** LINE     28 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 116  Si(s,i)=1$(rho(i,s) gt 0);
****               $140
**** LINE     29 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 117  *Ij(i,j)=Ki(j,i);
 118  Tbars(i,s)=Sbari(s,i);
 119  Ts(i,s)=Si(s,i);
 120   
 121  closed_loop(h)=0;
 122  closed_loop(h)$(ord(h)-1 ge UNDF and ord(h)-1 le UNDF)=1;
****                                 $140
**** LINE     35 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 123   
 124   
 125  alias(i,ip)
 126  alias(j,jp)
****            $157
**** LINE     39 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 127  alias(s,sp)
 128  alias(n,np)
 129  alias(h,hbar);
 130   
 131  set     UnitUnavailable_full(j,h)
 132  UnitUnavailable(j,n);
 133   
 134  parameter Uutmax_full(u,h),Cut_full(u,h) utility price;
****                        $120
**** LINE     47 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 135   
 136  parameters Dst(s,n),Uutmax(u,n),Cut(u,n);
 137   
 138   
 139  parameter pis_new(i,s),pi_new(i);
 140  *tau_new(j,k,kp);
 141  pis_new(i,s)=ceil(pis(i,s)/1);
****                      $140
**** LINE     54 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 142  pi_new(i)=ceil(pi(i)/1);
****                   $8,409
**** LINE     55 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 143   
 144  parameter alpha_new(u,i),beta_new(u,i),Cst_new(s);
 145   
 146  alpha_new(u,i)=alpha(u,i);
****                     $140
**** LINE     59 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 147   
 148  beta_new(u,i)=beta(u,i);
****                      $148,201,148,201
**** LINE     61 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 149   
 150  Cst_new(s)=Cst(s);
****               $140
**** LINE     63 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 151   
 152   
 153   
 154   
 155  *UTILITY CALCULATIONS NEED TO BE CORRECTED
 156  *RIGHT NOW THERE IS BUG THAT IF THERE IS MORE THAN ONE CHANGE
 157  *WITHIN AN INTERVAL THEN THE CODE TAKES FIRST CHANGE ONLY
 158  *AND IGNORES THE SECOND CHANGE
 159  loop(UtilInt,
****             $120
**** LINE     72 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 160  *Maximum available utility
 161  Uutmax_full(u,h)$(ord(UtilInt) eq 1 and
 162                   ord(h) ge 1 and
 163                   ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1)$(
****                                             $140                    $116   
      UtilData(UtilInt,u,"magnitude") gt UtilData(UtilInt+1,u,"magnitude"))+
                                   $116
**** LINE     76 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 164                                ceil(UtilData(UtilInt+1,u,"starttime")/1)$(U
      tilData(UtilInt,u,"magnitude") le UtilData(UtilInt+1,u,"magnitude")) ))
 165                  =  UtilData(UtilInt,u,"magnitude");
 166   
 167   
 168   
 169   
 170  Uutmax_full(u,h)$((ord(UtilInt) gt 1 and ord(UtilInt) lt card(UtilInt)) an
      d
 171                   ord(h)-1 ge (floor(UtilData(UtilInt,u,"starttime")/1)$(Ut
      ilData(UtilInt-1,u,"magnitude") gt UtilData(UtilInt,u,"magnitude"))+
 172                                ceil(UtilData(UtilInt,u,"starttime")/1)$(Uti
      lData(UtilInt-1,u,"magnitude") le UtilData(UtilInt,u,"magnitude")) ) and
 173                   ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1)$(
      UtilData(UtilInt,u,"magnitude") gt UtilData(UtilInt+1,u,"magnitude"))+
 174                                ceil(UtilData(UtilInt+1,u,"starttime")/1)$(U
      tilData(UtilInt,u,"magnitude") le UtilData(UtilInt+1,u,"magnitude")) ))
 175                  =  UtilData(UtilInt,u,"magnitude");
 176   
 177   
 178   
 179  Uutmax_full(u,h)$(ord(UtilInt) eq card(UtilInt) and
 180                   ord(h)-1 ge (floor(UtilData(UtilInt,u,"starttime")/1)$(Ut
      ilData(UtilInt-1,u,"magnitude") gt UtilData(UtilInt,u,"magnitude"))+
 181                                ceil(UtilData(UtilInt,u,"starttime")/1)$(Uti
      lData(UtilInt-1,u,"magnitude") le UtilData(UtilInt,u,"magnitude")) ) and
 182                   ord(h) le card(h))
 183                  =  UtilData(UtilInt,u,"magnitude");
 184   
 185   
 186  *Utility Price
 187  Cut_full(u,h)$(ord(UtilInt) eq 1 and
 188            ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1))   )
 189            =  UtilData(UtilInt,u,"price");
****                                        $116
**** LINE    102 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 190   
 191  Cut_full(u,h)$(ord(UtilInt) gt 1 and ord(UtilInt) lt card(UtilInt) and
 192            ord(h)-1 gt (floor(UtilData(UtilInt,u,"starttime")/1)) and
 193            ord(h)-1 lt (floor(UtilData(UtilInt+1,u,"starttime")/1))   )
 194            =  UtilData(UtilInt,u,"price");
 195   
 196  Cut_full(u,h)$(ord(UtilInt) eq card(UtilInt) and
 197            ord(h)-1 gt floor(UtilData(UtilInt,u,"starttime")/1) and
 198            ord(h) le card(h)   )
 199            =  UtilData(UtilInt,u,"price");
 200   
 201  Cut_full(u,h)$(ord(UtilInt) gt 1 and
 202           ord(h)-1 eq floor(UtilData(UtilInt,u,"starttime")/1))
 203           =(   UtilData(UtilInt-1,u,"price")*(UtilData(UtilInt,u,"starttime
      ")-(ord(h)-1)* 1 )
 204                +UtilData(UtilInt,u,"price")*(ord(h)*1-UtilData(UtilInt,u,"s
      tarttime"))   )/1;
 205  *Bug in cost calculation: what if there are 3 cost levels within one time 
      grid?
 206  )
 207   
 208   
 209  *UnitUnavailabality(note the difference in inequalities as opposed to Util
      ity....1=>unit not available so more magnitude is bad)
 210  loop(UnitInt,
****             $120,340
**** LINE    123 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 211  Unitunavailable_full(j,h)$(ord(UnitInt) eq 1 and
****                       $352
**** LINE    124 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 212                   ord(h)-1 ge 0 and
 213                   ord(h)-1 lt (floor(UnitData(UnitInt+1,j,"starttime")/1)$(
****                                             $140        $352               
      UnitData(UnitInt,j,"magnitude") lt UnitData(UnitInt+1,j,"magnitude"))+
                       $352                                 $352
**** LINE    126 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 214                                ceil(UnitData(UnitInt+1,j,"starttime")/1)$(U
****                                                        $352                
      nitData(UnitInt,j,"magnitude") ge UnitData(UnitInt+1,j,"magnitude")) ))
                      $352                                 $352
**** LINE    127 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 215                  =  UnitData(UnitInt,j,"magnitude");
****                                      $352
**** LINE    128 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 216   
 217   
 218   
 219   
 220  Unitunavailable_full(j,h)$((ord(UnitInt) gt 1 and ord(UnitInt) lt card(Uni
****                       $352
      tInt)) and
**** LINE    133 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 221                   ord(h)-1 ge (floor(UnitData(UnitInt,j,"starttime")/1)$(Un
****                                                       $352                 
      itData(UnitInt-1,j,"magnitude") lt UnitData(UnitInt,j,"magnitude"))+
                       $352                               $352
**** LINE    134 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 222                                ceil(UnitData(UnitInt,j,"starttime")/1)$(Uni
****                                                      $352                  
      tData(UnitInt-1,j,"magnitude") ge UnitData(UnitInt,j,"magnitude")) ) and
                      $352                               $352
**** LINE    135 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 223                   ord(h)-1 lt (floor(UnitData(UnitInt+1,j,"starttime")/1)$(
****                                                         $352               
      UnitData(UnitInt,j,"magnitude") lt UnitData(UnitInt+1,j,"magnitude"))+
                       $352                                 $352
**** LINE    136 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 224                                ceil(UnitData(UnitInt+1,j,"starttime")/1)$(U
****                                                        $352                
      nitData(UnitInt,j,"magnitude") ge UnitData(UnitInt+1,j,"magnitude")) ))
                      $352                                 $352
**** LINE    137 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 225                  =  UnitData(UnitInt,j,"magnitude");
****                                      $352
**** LINE    138 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 226   
 227   
 228   
 229  Unitunavailable_full(j,h)$(ord(UnitInt) eq card(UnitInt) and
****                       $352
**** LINE    142 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 230                   ord(h)-1 ge (floor(UnitData(UnitInt,j,"starttime")/1)$(Un
****                                                       $352                 
      itData(UnitInt-1,j,"magnitude") lt UnitData(UnitInt,j,"magnitude"))+
                       $352                               $352
**** LINE    143 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 231                                ceil(UnitData(UnitInt,j,"starttime")/1)$(Uni
****                                                      $352                  
      tData(UnitInt-1,j,"magnitude") ge UnitData(UnitInt,j,"magnitude")) ) and
                      $352                               $352
**** LINE    144 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 232                   ord(h) le card(h))
 233                  =  UnitData(UnitInt,j,"magnitude");
****                                      $352
**** LINE    146 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 234  )
 235   
 236   
 237   
 238  *display UnitUnavailable_full,Uutmax_full,Cut_full,Sbari,Si,rhobar,rho,Tba
      rs,Ts,calc;
 239   
 240  *Ijk,tauChangeMax
 241   
 242   
 243   
 244  *Disturbance parameter for loading/unloading of materials
 245  parameters betaHatProd(i,j,s,n),betaHatCons(i,j,s,n);
 246  betaHatProd(i,j,s,n)=0;
****                $352
**** LINE    159 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 247  betaHatCons(i,j,s,n)=0;
****                $352
**** LINE    160 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 248   
 249   
 250  *Disturbance parameter for task delays
 251  parameters
 252  Yhat(i,j,n,hbar)
 253  Delay(calc,i,j,hbar)
 254  Zhat(i,j,n,hbar)
 255  Breakdown(calc,i,j,hbar)
 256  Duration_breakdown(calc,j)
 257  UnitBroken(j,n)
 258  WbarInfo(i,j,n,hbar)
 259  BbarInfo(i,j,n,hbar)
 260  KillDuration(i,j)
 261  KillDurationCountdown(i,j)
 262  KillOccupy(j,n)
 263  KillCountdown(j);
 264   
 265  *Initializing parameters
 266  Yhat(i,j,n,hbar)=0;
****         $352
**** LINE    179 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 267  Delay(calc,i,j,hbar)=0;
****               $352
**** LINE    180 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 268  Zhat(i,j,n,hbar)=0;
****         $352
**** LINE    181 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 269  Breakdown(calc,i,j,hbar)=0;
****                   $352
**** LINE    182 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 270  Duration_breakdown(calc,j)=0;
****                          $352
**** LINE    183 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 271  UnitBroken(j,n)=0;
****             $352
**** LINE    184 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 272  WbarInfo(i,j,n,hbar)=0;
****             $352
**** LINE    185 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 273  BbarInfo(i,j,n,hbar)=0;
****             $352
**** LINE    186 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 274  KillDuration(i,j)=0;
****                 $352
**** LINE    187 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 275  KillDurationCountdown(i,j)=0;
****                          $352
**** LINE    188 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 276  KillOccupy(j,n)=0;
****             $352
**** LINE    189 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 277  KillCountdown(j)=0;
****                $352
**** LINE    190 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 278   
 279  *hbar are the time points for lifting of variables
 280  *binary variables W(i,j,n),Wbar(i,j,n,hbar),T(i,j,hbar) Kill_Variable;
 281  binary variables Wbar(i,j,n,hbar),T(i,j,hbar) Kill_Variable;
 282  positive variable Bbar(i,j,n,hbar),Sst(s,n),Backlog(s,n),Ship(s,n),Ship_sa
      les(s,n),Uut(u,n),Rst(s,n),SstTerminal(s),BacklogTerminal(s);
 283  variables obj_variable;
 284  integer variable NB(i,j) number of batches;
 285  *Assigning values to variables that might not participate in optimization
 286  Uut.l(u,n)=0;
 287  Ship_sales.l(s,n)=0;
 288   
 289  Equations
 290  numberOfBatches,
 291  Allocation,
 292  UnitCapacityMax,UnitCapacityMin,
 293  InventoryLimit,
 294  InventoryBalance,
 295  EndingInventory,
 296  BacklogBalance,
 297  EndingBacklog,
 298  UtilityLimit,
 299  UtilityBalance,
 300  objective_MIN_COST,
 301  objective_MAX_PROFIT,
 302  objective_MAX_PROFIT_Greedy
 303  UnitUnavailabality,
 304  *CorrectHolding(i,j,n),
 305  LiftingW,
 306  *LiftingW0,
 307  LiftingB,
 308  *LiftingB0,
 309  Carryover_W,Carryover_B,
 310  InventoryBalance_MAX_PROFIT,
 311  EndingInventory_MAX_PROFIT
 312  Ship_constraint(s,n)
 313  NoShip(s,n);
 314  *SHIPMENT;
 315  *NoTaskRunningAtEndOfHorizon;
 316   
 317  numberOfBatches(i,j)$Ij(i,j).. NB(i,j)=E=sum((n,hbar)$(ord(hbar)-1 eq 0),W
****                        $140
      bar(i,j,n,hbar));
**** LINE    230 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 318   
 319  *scalar ord_calc /0/;
 320  SCALAR fixed_decisions /0/;
 321  SCALAR reschedule_flag /0/;
 322  *re_freq-1-mod(ord_calc-1+re_freq-1,re_freq)  is zero for calc0
 323  Carryover_W(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 ge 1 
      and ord(hbar)-1 le pi(i) and Ij(i,j))..Wbar(i,j,n,hbar)=E=WbarInfo(i,j,n,h
****                       $8,36            $409
      bar)*(1-T(i,j,hbar))*(1-Zhat(i,j,n,hbar));
**** LINE    236 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 324  Carryover_B(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 ge 1 
      and ord(hbar)-1 le pi(i) and Ij(i,j))..Bbar(i,j,n,hbar)=E=BbarInfo(i,j,n,h
****                       $8,36            $409
      bar)*(1-T(i,j,hbar))*(1-Zhat(i,j,n,hbar));
**** LINE    237 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 325   
 326  *LiftingW(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (
      ord(n) lt card(n)) and Ij(i,j))..
 327  *         Wbar(i,j,n+1,hbar)=E=Wbar(i,j,n,hbar-1)+Yhat(i,j,n,hbar)-Yhat(i,
      j,n,hbar-1)-Zhat(i,j,n,hbar-1);
 328  *LiftingB(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (
      ord(n) lt card(n)) and Ij(i,j))..
 329  *         Bbar(i,j,n+1,hbar)=E=Bbar(i,j,n,hbar-1)+Bbar(i,j,n,hbar)*Yhat(i,
      j,n,hbar)-Bbar(i,j,n,hbar-1)*Yhat(i,j,n,hbar-1)
 330   
 331  LiftingW(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (o
****                                                                 $8,36      
      rd(n) lt card(n)) and Ij(i,j))..
                                     $409
**** LINE    244 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 332           Wbar(i,j,n+1,hbar)=E=Wbar(i,j,n,hbar-1)+Yhat(i,j,n,hbar)-Yhat(i,j
      ,n,hbar-1);
 333   
 334  LiftingB(i,j,n,hbar)$((ord(hbar)-1 ge 1) and (ord(hbar)-1 le pi(i)) and (o
****                                                                 $8,36      
      rd(n) lt card(n)) and Ij(i,j))..
                                     $409
**** LINE    247 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 335           Bbar(i,j,n+1,hbar)=E=Bbar(i,j,n,hbar-1)+Bbar(i,j,n,hbar)*Yhat(i,j
      ,n,hbar)-Bbar(i,j,n,hbar-1)*Yhat(i,j,n,hbar-1);
 336  Allocation(j,n).. sum((i,hbar)$(Ij(i,j) and (ord(hbar) -1 le (pi_new(i)-1)
      ) ), Wbar(i,j,n,hbar))=L=1-sum((i,hbar)$(Ij(i,j) and (ord(hbar) -1 eq pi_n
      ew(i)) ) , Yhat(i,j,n,hbar))-UnitBroken(j,n)
 337                        -sum((i,hbar)$(Ij(i,j) and ord(hbar)-1 ge 1 and ord(
      hbar)-1 le pi(i)),T(i,j,hbar)$(ord(n)-1 lt KillDuration(i,j)))-KillOccupy(
****               $8,10,148,133,654,409
      j,n);
**** LINE    250 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 338  *ord(np)-1=0 => Wbar0 which is also included in the above sum, so we dont 
      have to explicitly sum over W now since W0 is also there
 339   
 340  UnitCapacityMax(i,j,n,hbar)$(Ij(i,j) and ord(hbar)-1 eq 0).. Bbar(i,j,n,hb
      ar)=L=Wbar(i,j,n,hbar)*vmaxij(i,j);
****                              $140
**** LINE    253 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 341   
 342  UnitCapacityMin(i,j,n,hbar)$(Ij(i,j) and ord(hbar)-1 eq 0).. Bbar(i,j,n,hb
      ar)=G=Wbar(i,j,n,hbar)*vminij(i,j);
****                              $140
**** LINE    255 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 343   
 344  InventoryLimit(s,n)$(FIS(s)).. Sst(s,n)=L=Cs(s);
****                         $140                $140
**** LINE    257 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 345   
 346  *Watch out for brackets in betahatCons and betaHatProd. One has multiplica
      tion with rho other does not
 347  InventoryBalance(s,n)$(ord(n) lt card(n)).. Sst(s,n+1)=E=Sst(s,n)+sum((i,j
      ,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(hbar) -1 eq pis_new(i,s))),rhobar(
      i,s)*(Bbar(i,j,n,hbar)*(1-Yhat(i,j,n,hbar)-Zhat(i,j,n,hbar))+betaHatProd(i
      ,j,s,n)))
 348                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j) and ord(hbar
      ) eq 1),rho(i,s)*Bbar(i,j,n,hbar)+betaHatCons(i,j,s,n)) -Ship(s,n)$(produc
      t_states(s))+Rst(s,n)$(feed_states(s));
****         $140                      $140
**** LINE    261 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 349  EndingInventory(s,n)$(ord(n) eq card(n)).. SstTerminal(s)=E=Sst(s,n)+sum((
      i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(hbar) -1 eq pis_new(i,s))),rhob
      ar(i,s)*(Bbar(i,j,n,hbar)*(1-Yhat(i,j,n,hbar)-Zhat(i,j,n,hbar))+betaHatPro
      d(i,j,s,n)))
 350                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j)and ord(hbar)
       eq 1),rho(i,s)*Bbar(i,j,n,hbar)+betaHatCons(i,j,s,n)) -Ship(s,n)$(product
      _states(s))+Rst(s,n)$(feed_states(s));
 351   
 352  ********
 353  *Inventory at point 2 means, inventory level infinitesimal time just befor
      e point 2, ie 2-, need to define extra ending inventory variable SstTermin
      al(s)
 354  *Deliveries are point functions like B, W while inventory is interval func
      tion
 355  *Kondili has convention that inventory at point 2 is 2+, so has to define 
      extra initial inventory parameter Sst0(s)
 356   
 357   
 358  ***********Backlogs******
 359  BacklogBalance(s,n)$(product_states(s) and ord(n) lt card(n)).. Backlog(s,
      n+1)=E=Backlog(s,n)-Ship(s,n)+Dst(s,n);
 360  EndingBacklog(s,n)$(product_states(s) and ord(n) eq card(n)).. BacklogTerm
      inal(s)=E=Backlog(s,n)-Ship(s,n)+Dst(s,n);
 361   
 362  ***********UtilityBalance******
 363  UtilityLimit(u,n).. Uut(u,n)=L=Uutmax(u,n);
 364  UtilityBalance(u,n).. Uut(u,n)=E=sum((i,j,hbar)$(Ij(i,j) and (ord(hbar)-1 
      le pi_new(i)-1)),alpha_new(u,i)*Wbar(i,j,n,hbar)+beta_new(u,i)*Bbar(i,j,n,
      hbar)  );
 365   
 366  UnitUnavailabality(i,j,n)$(UnitUnavailable(j,n) and Ij(i,j)).. sum((hbar)$
      (ord(hbar)-1 le pi_new(i)-1),Wbar(i,j,n,hbar))=E=0;
 367   
 368  *Utility cost: sum((u,n),Cut(u,n)*Uut(u,n))
 369  *objective_MIN_COST.. obj_variable  =E= 1E1*sum(s,Cst_new(s)*SstTerminal(s
      )) +1E1*sum((s,n),Cst_new(s)*Sst(s,n))
 370  *                                 +1E2*sum((s,n)$(product_states(s)),Cst_n
      ew(s)*Backlog(s,n))+1E2*sum(s$(product_states(s)),Cst_new(s)*BacklogTermin
      al(s))
 371  *                                 +sum((i,j,hbar)$Ij(i,j),T(i,j,hbar));
 372  objective_MIN_COST.. obj_variable  =E= 1E1*sum(s,Cst_new(s)*SstTerminal(s)
      ) + 1E1*sum((s,n),Cst_new(s)*Sst(s,n))
 373                                   +1E2*sum((s,n)$(product_states(s)),Cst_ne
      w(s)*Backlog(s,n))
 374                                   +1E2*sum(s$(product_states(s)),Cst_new(s)
      *BacklogTerminal(s))
 375                                   +sum((i,j,n,hbar)$(Ij(i,j) AND ord(hbar)-
      1 eq 0),Wbar(i,j,n,hbar));
 376   
 377   
 378  *objective_MAX_PROFIT.. obj_variable =E= 1E1*sum(s$(product_states(s)),Cst
      _new(s)*SstTerminal(s))+1E1*sum((s,n)$(product_states(s)),Cst_new(s)*Ship(
      s,n))
 379  *                                       -1E2*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Backlog(s,n))-1E2*sum(s$(product_states(s)),Cst_new(s)*Backlog
      Terminal(s) );
 380   
 381  *objective_MAX_PROFIT.. obj_variable =E= 1E1*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Sst(s,n))+1E1*sum(s$(product_states(s)),Cst_new(s)*SstTerminal
      (s))
 382  *                                       -1E2*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Backlog(s,n))-1E2*sum(s$(product_states(s)),Cst_new(s)*Backlog
      Terminal(s))
 383  *                                       +1E1*sum((s,n)$(product_states(s))
      ,Cst_new(s)*Ship(s,n));
 384   
 385  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),rou
      nd(2-ord(n)/card(n),2)*Cst_new(s)*Ship(s,n))-sum((i,j,n,hbar)$(Ij(i,j) AND
       ord(hbar)-1 eq 0),Wbar(i,j,n,hbar));
 386   
 387  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst
      _new(s)*(Ship_sales(s,n)))
 388  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst
      _new(s)*(Ship_sales(s,n)+Ship(s,n)))
 389  objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),Cst_
      new(s)*(Ship_sales(s,n)))
 390                                           -sum((i,j,n,hbar)$(Ij(i,j) AND or
      d(hbar)-1 eq 0),Wbar(i,j,n,hbar))
 391                                           -1E2*sum((s,n)$(product_states(s)
      ),Cst_new(s)*Backlog(s,n))
 392                                           -1E2*sum(s$(product_states(s)),Cs
      t_new(s)*BacklogTerminal(s));
 393   
 394  objective_MAX_PROFIT_Greedy.. obj_variable =E= sum((s,n)$(product_states(s
      )),round(2-(ord(n)/card(n)),2)*Cst_new(s)*(Ship(s,n)+Ship_sales(s,n)))
 395                                           -sum((i,j,n,hbar)$(Ij(i,j) AND or
      d(hbar)-1 eq 0),Wbar(i,j,n,hbar))
 396                                           -1E2*sum((s,n)$(product_states(s)
      ),Cst_new(s)*Backlog(s,n))
 397                                           -1E2*sum(s$(product_states(s)),Cs
      t_new(s)*BacklogTerminal(s));
 398   
 399  *objective_MAX_PROFIT.. obj_variable =E= sum((s,n)$(product_states(s)),rou
      nd(2-ord(n)/card(n),2)*Cst_new(s)*Ship(s,n));
 400   
 401  *SHIPMENT(s,n).. Ship(s,n)=L=Dst(s,n)  ;
 402  InventoryBalance_MAX_PROFIT(s,n)$(ord(n) lt card(n)).. Sst(s,n+1)=E=Sst(s,
      n)
 403                           +sum((i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(
      hbar) -1 eq pis_new(i,s))),rhobar(i,s)*Bbar(i,j,n,hbar))
 404                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j) and ord(hbar
      ) eq 1),rho(i,s)*Bbar(i,j,n,hbar))
 405                           -Ship_sales(s,n)$(product_states(s))-Ship(s,n)$(p
      roduct_states(s))+Rst(s,n)$(feed_states(s));
 406   
 407  EndingInventory_MAX_PROFIT(s,n)$(ord(n) eq card(n)).. SstTerminal(s)=E=Sst
      (s,n)
 408                           +sum((i,j,hbar)$(Tbars(i,s) and Ij(i,j) and (ord(
      hbar) -1 eq pis_new(i,s))),rhobar(i,s)*Bbar(i,j,n,hbar))
 409                           -sum((i,j,hbar)$(Ts(i,s) and Ij(i,j)and ord(hbar)
       eq 1),rho(i,s)*Bbar(i,j,n,hbar))
 410                           -Ship(s,n)$(product_states(s))-Ship_sales(s,n)$(p
      roduct_states(s))+Rst(s,n)$(feed_states(s));
 411   
 412  *Ship_constraint(s,n)$(ord(n) gt 1 AND ord(n) lt card(n) ).. Ship(s,n)=E=0
      ;
 413  *Ship_constraint(s,n)$(Dst(s,n) eq 0).. Ship_sales(s,n)=E=0;
 414  Ship_constraint(s,n)$(NOT Dst(s,n) gt 0).. Ship_sales(s,n)=E=0;
 415   
 416  *NoTaskRunningAtEndOfHorizon(i,j,n)$(ord(n) eq card(n) and Ij(i,j))..   su
      m(hbar$(ord(hbar)-1 le pi_new(i)-1),Wbar(i,j,n,hbar))=E=0;
 417  NoShip(s,n)$(ord(n) lt card(n)/2 and sameas(s,'M4')).. Ship_sales(s,n)=E=0
      ;
 418  *NoShip(s,n)$(ord(n) lt card(n)/2).. Ship_sales(s,n)=E=0;
 419   
 420  *****************
 421  *DISTURBANCE VARIABLES
 422  *Build feature rich instances and do rigorous testing
 423  *****************
 424   
 425  SET attributes_states /W,B/;
 426  PARAMETERS
 427  record_states_raw(run,calc,attributes_states,i,j,n,hbar),
 428  record_states(run,calc,attributes_states,i,j,n,hbar),
 429  record_objective(run,calc),
 430  record_utility(run,calc,u,n),
 431  record_inventory(run,calc,s,n),
 432  record_inventory_raw(run,calc,s,n),
 433  record_backlog(run,calc,s,n),
 434  record_backlog_raw(run,calc,s,n),
 435  record_inventoryTerminal(run,calc,s),
 436  record_backlogTerminal(run,calc,s)
 437  record_T(run,calc,i,j,hbar)
 438  record_shipment(run,calc,s,n)
 439  record_shipment_sales(run,calc,s,n)
 440  record_shipment_sales_raw(run,calc,s,n)
 441  record_Rst(run,calc,s,n)
 442  record_shipment_raw(run,calc,s,n)
 443  record_Rst_raw(run,calc,s,n)
 444  record_yieldloss(run,calc,i,j,s,n)
 445  record_demands(run,calc,s,n)
 446  record_WbarInfo(run,calc,i,j,n,hbar)
 447  record_BbarInfo(run,calc,i,j,n,hbar)
 448  record_Demands_realization(run,s,h)
 449  record_fixed_decision(calc)
 450  record_reschedule_flag(calc,run)
 451  record_relaxed_objective(run,calc) Objective from solving RMIP
 452  record_relaxed_states(run,calc,attributes_states,i,j,n,hbar) states from s
      olving RMIP
 453  record_relaxed_shipment(run,calc,s,n)
 454  record_relaxed_shipment_sales(run,calc,s,n)
 455  record_relaxed_backlog(run,calc,s,n);
 456   
 457  record_states_raw(run,calc,attributes_states,i,j,n,hbar)=0;
****                                                 $352
**** LINE    370 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 458  record_states(run,calc,'B',i,j,n,hbar)=0;
****                               $352
**** LINE    371 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 459  record_states(run,calc,'W',i,j,n,hbar)=0;
****                               $352
**** LINE    372 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 460  record_inventory(run,calc,s,n)=0;
 461  record_inventory_raw(run,calc,s,n)=0;
 462  record_backlog(run,calc,s,n)=0;
 463  record_backlog_raw(run,calc,s,n)=0;
 464  record_T(run,calc,i,j,hbar)=0;
****                      $352
**** LINE    377 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 465  record_shipment(run,calc,s,n)=0 ;
 466  record_Rst(run,calc,s,n)=0;
 467  record_shipment_raw(run,calc,s,n)=0;
 468  record_shipment_sales_raw(run,calc,s,n)=0;
 469  record_shipment_sales(run,calc,s,n)=0;
 470  record_Rst_raw(run,calc,s,n)=0;
 471  record_yieldloss(run,calc,i,j,s,n)=0;
****                              $352
**** LINE    384 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 472  record_demands(run,calc,s,n)=0;
 473  record_WbarInfo(run,calc,i,j,n,hbar)=0;
****                             $352
**** LINE    386 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 474  record_BbarInfo(run,calc,i,j,n,hbar)=0;
****                             $352
**** LINE    387 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 475  record_Demands_realization(run,s,h)=0;
 476  record_fixed_decision(calc)=0;
 477  record_reschedule_flag(calc,run)=0;
 478  record_relaxed_objective(run,calc)=0;
 479  record_relaxed_states(run,calc,attributes_states,i,j,n,hbar)=0;
****                                                     $352
**** LINE    392 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 480  record_relaxed_shipment(run,calc,s,n)=0;
 481  record_relaxed_shipment_sales(run,calc,s,n)=0;
 482  record_relaxed_backlog(run,calc,s,n)=0;
 483   
 484  *Initial conditions for first optimization horizon
 485  PARAMETERS InitialBbar(i,j,n,hbar),InitialWbar(i,j,n,hbar),InitialInventor
      y(s),InitialBacklog(s);
 486  InitialBbar(i,j,n,hbar)=0;
****                $352
**** LINE    399 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 487  InitialWbar(i,j,n,hbar)=0;
****                $352
**** LINE    400 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 488  InitialInventory(s)=0;
 489  InitialBacklog(s)=0;
 490   
 491  *if (%InitialInventoryFlag% eq 1,
 492  *Start with half day of inventory
 493  *InitialInventory(s)$product_states(s)=12*demand_magnitude/demand_cycletim
      e;
 494  *);
 495  InitialInventory(s)$product_states(s)=%InitialInventoryBufferHours%*demand
****                                        $119                       $140,409
      _magnitude/demand_cycletime;
**** LINE    408 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 496   
 497   
 498  *MODEL P1 /all/;
 499  MODEL MIN_COST /
 500  numberOfBatches,
 501  Allocation,
 502  UnitCapacityMax,
 503  UnitCapacityMin,
 504  *InventoryLimit,
 505  InventoryBalance,
 506  EndingInventory,
 507  BacklogBalance,
 508  EndingBacklog,
 509  *UtilityLimit,
 510  *UtilityBalance,
 511  *UnitUnavailabality,
 512  LiftingW,
 513  LiftingB,
 514  Carryover_W,
 515  Carryover_B,
 516  objective_MIN_COST/;
 517   
 518  MODEL MAX_PROFIT_1 /
 519  numberOfBatches,
 520  Allocation,
 521  UnitCapacityMax,
 522  UnitCapacityMin,
 523  Carryover_B
 524  InventoryBalance_MAX_PROFIT,
 525  LiftingW,
 526  BacklogBalance
 527  LiftingB,
 528  Carryover_W,
 529  objective_MAX_PROFIT
 530  Ship_constraint
 531  EndingInventory_MAX_PROFIT,
 532  EndingBacklog/;
 533   
 534  MODEL MAX_PROFIT_2 /
 535  numberOfBatches,
 536  Allocation,
 537  UnitCapacityMax,
 538  UnitCapacityMin,
 539  InventoryBalance_MAX_PROFIT,
 540  EndingInventory_MAX_PROFIT,
 541  BacklogBalance,
 542  EndingBacklog,
 543  LiftingW,
 544  LiftingB,
 545  Carryover_W,
 546  Carryover_B,
 547  objective_MAX_PROFIT
 548  Ship_constraint/;
 549   
 550  MODEL MAX_PROFIT_GREEDY /
 551  numberOfBatches,
 552  Allocation,
 553  UnitCapacityMax,
 554  UnitCapacityMin,
 555  InventoryBalance_MAX_PROFIT,
 556  EndingInventory_MAX_PROFIT,
 557  BacklogBalance,
 558  EndingBacklog,
 559  LiftingW,
 560  LiftingB,
 561  Carryover_W,
 562  Carryover_B,
 563  *objective_MAX_PROFIT
 564  objective_MAX_PROFIT_Greedy
 565  Ship_constraint/;
 566  *NoShip/;
 567   
 568  MODEL MAX_PROFIT_NOSHIP /
 569  numberOfBatches,
 570  Allocation,
 571  UnitCapacityMax,
 572  UnitCapacityMin,
 573  InventoryBalance_MAX_PROFIT,
 574  EndingInventory_MAX_PROFIT,
 575  BacklogBalance,
 576  EndingBacklog,
 577  LiftingW,
 578  LiftingB,
 579  Carryover_W,
 580  Carryover_B,
 581  objective_MAX_PROFIT
 582  *objective_MAX_PROFIT_Greedy
 583  Ship_constraint
 584  NoShip/;
 585   
 586  MODEL MAX_PROFIT_GREEDY_NOSHIP /
 587  numberOfBatches,
 588  Allocation,
 589  UnitCapacityMax,
 590  UnitCapacityMin,
 591  InventoryBalance_MAX_PROFIT,
 592  EndingInventory_MAX_PROFIT,
 593  BacklogBalance,
 594  EndingBacklog,
 595  LiftingW,
 596  LiftingB,
 597  Carryover_W,
 598  Carryover_B,
 599  *objective_MAX_PROFIT
 600  objective_MAX_PROFIT_Greedy
 601  Ship_constraint
 602  NoShip/;
 603   
 604  *SHIPMENT/;
 605   
 606   
 607  T.l(i,j,hbar)=0;
****        $352
**** LINE    520 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \Model9.gms
**** LINE     18 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 608  *Parameters for Gantt Charting in Excel
 609  *END OF MODEL FILE
 610   
 611   
 612   
 613   
 614  PARAMETER runcost(run) cost of implemented closed loop
 615           runcost_Inv(run) Inventory cost,runcost_BO(run) Backlog cost, run
      cost_W(run) start_cost_of_tasks
 616           runprofit(run) closed loop profit in MAX_profit
 617           sales_profit(run);
 618   
 619           runcost_Inv(run)=0;runcost_BO(run)=0; runcost_W(run)=0;runcost(ru
      n)=0; runprofit(run)=0;sales_profit(run)=0;
 620   
 621  PARAMETER modelStat(calc,run)     Should be 1 for successful optimization
 622            BOStat_OL(calc,run)     If 1 means open loop had non zero back o
      rder
 623            BOStat_CL(calc,run)     If 1 means closed loop had non zero back
       order
 624            IntegralityGap(calc,run)
 625            Est_modelGap1(calc,run)  Estimated optimality gap by CPLEX (obj.
      val in denominator)
 626            Est_modelGap2(calc,run)  Estimated optimality gap by CPLEX (obj.
      Est in denominator)
 627            True_modelGap(calc,run) True optimality gap obtained by solving 
      to optcr=0
 628            ETSolve(calc,run)
 629            ETSolver(calc,run)
 630            iterUsd(calc,run)
 631            nodUsd(calc,run)
 632            resUsd(calc,run)
 633            numDVar(calc,run)
 634            numEqu(calc,run)
 635            numInfes(calc,run)
 636            numNZ(calc,run)
 637            numVar(calc,run)
 638            solveStat(calc,run)
 639            Suboptimal_objective /0/
 640            Optimal_Objective /0/
 641            TimeToSolveOptimal(calc,run);
 642   
      ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
      ******DEMAND INFORMATION*****************************
      *Each order for all products
      SET         o orders /o1*o%H%/;
      PARAMETER deliveries_time(o,run);
      deliveries_time(o,run)=demand_cycletime*ord(o);
      PARAMETER deliveries(o,s);
      deliveries(o,s)$(product_states(s))=demand_magnitude;
      ******DEMAND INFORMATION*****************************
       
      PARAMETER Dst_full(s,h);
      Dst_full(s,h)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(deliveries_time(o)/
      %delta%)));
       
      PARAMETER Dst_full_realization(s,h,run);
      Dst_full_realization(s,h,run)=Dst_full(s,h);
       
      *IF(%Demand_Disturbance_flag% eq 1,
               LOOP(run,
                  deliveries_time(o,run)=deliveries_time(o,run)+UniformInt(-dema
      nd_variation,demand_variation);
                  Dst_full_realization(s,h,run)=(Dst_full(s,h)+Dst_full(s,h)*uni
      formInt(-lambda_Demand,lambda_Demand)  )$(Dst_full(s,h) gt 0);
               );
      *);
      ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 668  ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 669  ******DEMAND INFORMATION*****************************
 670  *Each order for all products
 671  SET         o orders /o1*o%H%/;
****                           $763,508
**** LINE     79 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 672  PARAMETER deliveries_time(o,run);
 673  deliveries_time(o,run)=demand_cycletime*ord(o);
****                                        $140
**** LINE     81 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 674  PARAMETER deliveries(o,s);
 675  deliveries(o,s)$(product_states(s))=demand_magnitude;
****                                                     $140
**** LINE     83 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 676  ******DEMAND INFORMATION*****************************
 677   
 678  PARAMETER Dst_full_realization(s,h,run),Dst_full(s,h);
 679   
 680  *IF(%Demand_Disturbance_flag% eq 1,
 681  LOOP(run,
 682    deliveries_time(o,run)=deliveries_time(o,run)+UniformInt(-demand_variati
      on,demand_variation);
****   $140
**** LINE     90 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 683    Dst_full_realization(s,h,run)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(d
      eliveries_time(o,run)/1)));
 684    Dst_full_realization(s,h,run)=(Dst_full_realization(s,h,run)+Dst_full_re
      alization(s,h,run)/100*uniformInt(-lambda_Demand*100,lambda_Demand*100)  )
****                                                 $140
      $(Dst_full_realization(s,h,run) gt 0);
**** LINE     92 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 685  );
 686  *);
 687  ********************DEMAND SAMPLING TO KEEP IT STANDARDIZED FOR ALL APPROA
      CHES(NOMINAL, ROBUST, STOCHASTIC)************************
 688   
 689   
 690  PARAMETER ClosedLoopINV(run,s,h),ClosedLoopBO(run,s,h),ClosedLoopShip(run,
      s,h),ClosedLoopShip_sales(run,s,h),
 691            ClosedLoopStart(run,h),Cost_EndInventory(run),ClosedLoopExecutio
      ns(run,i);
 692  ClosedLoopINV(run,s,h)=0;
 693  ClosedLoopBO(run,s,h)=0;
 694  ClosedLoopShip(run,s,h)=0;
 695  ClosedLoopShip_sales(run,s,h)=0;
 696  ClosedLoopStart(run,h)=0;
 697  Cost_EndInventory(run)=0;
 698  ClosedLoopExecutions(run,i)=0;
 699  *This parameter switches to 1 at end of this file
 700  *indicating a succesful run(sweep of code) throughout
 701  PARAMETER SUCCESS /0/;
 702   
 703   
 704  PARAMETER timeLeft /0/;
 705  PARAMETER endingSeed /0/;
 706  *PARAMETER sample /0/;
 707   
 708  ********************STOPPING CRITERION*************
      PARAMETER mean_runcost(run), std_dev_runcost(run), delta_std_dev_runcost(r
      un), max_delta_std_dev_runcost(run), N_run count of runs;
      mean_runcost(run)=0;
      std_dev_runcost(run)=0;
      delta_std_dev_runcost(run)=0;
      max_delta_std_dev_runcost(run)=0;
      N_run=0;
      ALIAS(run,run_p);
      ********************STOPPING CRITERION*************
 719   
 720  ********************[Start] Evaluations Runs *****************************
      **********
 721  loop(run,
      put screen;
      put 'I am on run ' run.tl;
      putclose;
      put log;
      put 'I am on run ' run.tl;
      putclose;
 730   
 731  *We need to reset Dst_full(s,h) with each run to nominal values
 732  *and then as MH goes forward, Dst_full slowly takes the value of Dst_full_
      realization
 733  *for that particular run, after which here we need to refresh it to nomina
      l values
 734  Dst_full(s,h)=sum(o,deliveries(o,s)$(ord(h)-1 eq floor(deliveries_time(o,r
      un)/1)));
 735   
 736  if(0 eq 1,
 737  abort$1 "Look into robust case demand generation in MasterFile and make su
      re its correct";
 738           Dst_full(s,h)=Dst_full(s,h)*(1+ lambda_Demand);
 739  );
 740  *this time sample is equal to 1, so we are in evaluation mode
INCLUDE    C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\ModelSolution9.gm
           s
 742  loop(calc,
 743  *Caution: Watch out W equations in case changeovers are involved with rega
      rds to lifting(pi(i)+tauC)
 744  *fixed_decisions=re_freq-1-mod(ord(calc)-1+re_freq-1,re_freq);
 745  *abort$1 "stopped for debugging";
 746  *abort$(ord(calc)-1 eq 1) "stopped for debugging";
 747   
 748  *********VARIABLE RESCHEDULING FREQUENCY********
 749  *resetting old parameter values
 750  WbarInfo(i,j,n,hbar)=0;
****             $352
**** LINE      9 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 751  BbarInfo(i,j,n,hbar)=0;
****             $352
**** LINE     10 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 752   
 753  *DEMAND SAMPLING
 754  *Picking realized demand upto surprise factor within MH from demand_sample
       generated for this run
 755          Dst_full(s,h)$(ord(h)-1 le (ord(calc)-1 + ceil(card(n)*(1-surprise
****                                                                           $
      ))) )=Dst_full_realization(s,h,run);
      140
**** LINE     14 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 756  *Now allocating demands to the rolling horizon calculation
 757          Dst(s,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Dst_full(s,h
      ));
 758   
 759   
      * EVENT BASED RESCHEDULING (HAS BUG: when moving horizon is shorter than r
      escheduling freq, more decisions
      *are wrongly fixed)
      if (re_freq=0,
      *Reschedule flag is 1 for first optimization
              reschedule_flag=0;
      *Now see if we should reschedule or not depending on whether new demand ca
      me or not
              reschedule_flag=1$(sum((s,n)$(ord(n) eq card(n)),Dst(s,n)) > 0);
      *Also do find schedule for the very first optimization
              reschedule_flag$(ord(calc)-1 eq 0)=1;
      *Now decide the fixed decisions (W,B) depending on rescheduling_flag
              if (reschedule_flag=1,
      *Complete freedom to start new tasks (subject to old tasks not already run
      ning)
                      fixed_decisions=0;
              else
      *Forced to follow previous fixed (planned) decisions
                      fixed_decisions=card(n)-1;
              );
      else
 780          fixed_decisions=re_freq-1 - mod(ord(calc)-1+(re_freq-1),re_freq);
****                                $140
**** LINE     39 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 781          reschedule_flag=0;
 782          reschedule_flag$(fixed_decisions=0)=1;
 783  *);
 784  record_fixed_decision(calc)=fixed_decisions;
 785  record_reschedule_flag(calc,run)=reschedule_flag;
 786   
 787  *Unfix fixed variables
 788  Ship.lo(s,n)=0;Ship.up(s,n)=Inf;
 789  Rst.lo(s,n)=0;Rst.up(s,n)=Inf;
 790  Ship_sales.lo(s,n)=0;Ship_sales.up(s,n)=Inf;
 791  *Uut.lo(u,n)=0; Uut.up(u,n)=Inf;
 792  *Fix Input states
 793  WbarInfo(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 le pi(i)
****             $352                                                        $8,
       and Ij(i,j))=record_states(run,calc-1,'W',i,j,n,hbar-1)+InitialWbar(i,j,n
      36           $767         $12                $352       $36
      ,hbar)$(ord(calc)-1 eq 0)+Yhat(i,j,n,hbar)-Yhat(i,j,n,hbar-1);
**** LINE     52 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 794  BbarInfo(i,j,n,hbar)$(ord(n)-1 le fixed_decisions and ord(hbar)-1 le pi(i)
****             $352                                                        $8,
       and Ij(i,j))=record_states(run,calc-1,'B',i,j,n,hbar-1)+InitialBbar(i,j,n
      36           $767         $409
      ,hbar)$(ord(calc)-1 eq 0)+record_states(run,calc-1,'B',i,j,n,hbar)*Yhat(i,
      j,n,hbar)-record_states(run,calc-1,'B',i,j,n,hbar-1)*Yhat(i,j,n,hbar-1);
**** LINE     53 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 795  Ship.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_shipment(run,calc-1,s,
****                                                                  $149 $149
      n+1);
**** LINE     54 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 796  Rst.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_Rst(run,calc-1,s,n+1);
****                                                            $149 $149
**** LINE     55 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 797  Ship_sales.fx(s,n)$(ord(n)-1 le fixed_decisions-1)=record_shipment_sales(r
      un,calc-1,s,n+1);
****    $149 $149
**** LINE     56 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 798  T.fx(i,j,hbar)=0;
****         $352
**** LINE     57 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 799  *********VARIABLE RESCHEDULING FREQUENCY********
 800   
 801  *Since inventory and backlog depend on the inputs, as long as we have corr
      ectly carried over the inventory we are good
 802  Sst.fx(s,n)$(ord(n)-1 le 0)=record_inventory(run,calc-1,s,n+1)+InitialInve
****                                                  $149 $149                 
      ntory(s)$(ord(calc)-1 eq 0);
                       $154
**** LINE     61 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 803  Backlog.fx(s,n)$(ord(n)-1 le 0)=record_backlog(run,calc-1,s,n+1)+InitialBa
****                                                    $149 $149               
      cklog(s)$(ord(calc)-1 eq 0);
                       $154
**** LINE     62 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 804  *Uut.fx(u,n)$(ord(n)-1 le 0)=record_utility(run,calc-1,u,n+1);
 805   
 806   
 807  *Fix backlogs to zero if corresponding flag is 0
 808  if(%Backlog_Flag% eq 0,
****     $119        $140,10,8,409
**** LINE     67 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 809  Backlog.fx(s,n)=0;
 810  BacklogTerminal.fx(s)=0;
 811  );
****  $408
**** LINE     70 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 812  *Dst(s,n)$(product_states(s) AND ord(n) eq 1) = 1;
 813  *Ship_sales.fx(s,n)$(ord(n)-1 eq 0 AND sameas(s,'M4')) = 8.05;
 814  *Ship_sales.fx(s,n)$(ord(n) lt card(n)) = 0;
 815   
 816  *cc=execseed;
 817  ***************SAMPLING DISTURBANCES/UNCERTAINTIES************************
      ******
 818  *Introducing disturbance in demand by modifying Dst_full(s,h) only if Dist
      urbance flag is 1(on)
 819  *if(%Demand_Disturbance_Flag% eq 1,
 820  *);
 821   
 822  **UNCOMMENT HERE TO HERE  (commented for event based rescheduling)
 823  **        Dst_full(s,h)$(ord(h)-1 le (ord(calc)-1 + ceil(card(n)*(1-surpri
      se))) )=Dst_full_realization(s,h,run);
 824  *Now allocating demands to the rolling horizon calculation
 825  *        Dst(s,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Dst_full(s,
      h));
 826  **UNCOMMENT HERE TO HERE
 827  *Display Dst_full;
 828   
 829   
 830  *UnitBreakdown disturbance
 831  *First breakdown unit for whole horizon and then sample after 1 time step
 832  *when it is coming back
 833  UnitBroken(j,n)=0;
****             $352
**** LINE     92 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 834  Zhat(i,j,n,hbar)=0;
****         $352
**** LINE     93 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 835  if(0 eq 1 and ord(calc)-1 ge 2,
****                       $154
**** LINE     94 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 836           Breakdown(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and De
****                            $352          $352                    $8,36     
      lay(calc-1,i,j,hbar-1) eq 0)=1$(uniform(0,1) gt 0.9 and Duration_breakdown
                                  $8,409
      (calc-1,j) eq 0 and (sum(n$(ord(n)-1 eq 0),record_states(run,calc-1,'W',i,
      j,n,hbar-1)) gt 0));
**** LINE     95 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 837   
 838  *If there is a delay ongoing then sample this breakdown
 839           Breakdown(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and De
****                            $352          $352                    $8,36     
      lay(calc-1,i,j,hbar) gt 0)=1$(uniform(0,1) gt 0.9 and Duration_breakdown(c
                                $409
      alc-1,j) eq 0 and (sum(n$(ord(n)-1 eq 0),record_states(run,calc-1,'W',i,j,
      n,hbar)) gt 0));
**** LINE     98 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 840   
 841  *Assume on breakdown that the unit by default is not available the whole r
      emaining horizon and then
 842  *resample after one time step when it is due to come back[here half of rol
      ling horizon length]
 843   
 844  *         Duration_breakdown(calc,j)=floor(uniform(0,card(n)/2))$(sum((hba
      r,i)$(Ij(i,j) and ord(hbar)-1 le pi(i)),Breakdown(calc-1,i,j,hbar)) eq 1 a
      nd Duration_breakdown(calc-1,j) eq (card(h)))
 845  *                                         +(Duration_breakdown(calc-1,j)-1
      )$(Duration_breakdown(calc-1,j) gt 0 and Duration_breakdown(calc-1,j) lt c
      ard(h))
 846  *                                         +card(h)$(sum((hbar,i)$(Ij(i,j) 
      and ord(hbar)-1 le pi(i)),Breakdown(calc,i,j,hbar)) eq 1);
 847           Duration_breakdown(calc,j)=2$(sum((hbar,i)$(Ij(i,j) and ord(hbar)
****                                   $352                     $352            
      -1 le pi(i)),Breakdown(calc-1,i,j,hbar)) eq 1 and Duration_breakdown(calc-
              $8,10,148,8,409
      1,j) eq (card(h)))
**** LINE    106 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 848                                           +(Duration_breakdown(calc-1,j)-1)
      $(Duration_breakdown(calc-1,j) gt 0 and Duration_breakdown(calc-1,j) lt ca
      rd(h))
 849                                           +(card(h))$(sum((hbar,i)$(Ij(i,j)
       and ord(hbar)-1 le pi(i)),Breakdown(calc,i,j,hbar)) eq 1);
 850  *display Breakdown,duration_breakdown;
 851   
 852           UnitBroken(j,n)=0;
****                      $352
**** LINE    111 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 853           UnitBroken(j,n)$(ord(n)-1 lt Duration_breakdown(calc,j))=1;
****                      $352                                     $149,352
**** LINE    112 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 854   
 855           Zhat(i,j,n,hbar)=0;
****                  $352
**** LINE    114 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 856           Zhat(i,j,n,hbar)$(ord(n)-1 eq 0 and Breakdown(calc,i,j,hbar) eq 1
****                  $352                                       $149,352
      )=1;
**** LINE    115 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 857   
 858  );
****  $408
**** LINE    117 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 859   
 860   
 861   
 862  *Disturbance associated with delay in tasks, hbar indicates the running st
      atus of the task
 863  *Due to nature of lifting, there is already a 1 time unit lag, hence we li
      mit hbar from 0 to pi(i)
 864  *so that recordstates is accessed only upto pi(i)-1. Record state being pi
      (i) means that the task
 865  *was already over in the last horizon
 866  if(0 eq 1,
 867  *          Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i))=(Delay(
      calc-1,i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) ge 1)
 868  *                                                            +2$(uniform(0
      ,1) ge 0 and (sum(n$(ord(n)-1 eq 0),record_states(calc-1,'W',i,j,n,hbar-1)
      ) gt 0) and Delay(calc-1,i,j,hbar-1) eq 0);
 869            Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i))=(Delay(c
****                         $352          $352                    $8,36,8,409
      alc-1,i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) ge 1);
**** LINE    128 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 870            Delay(calc,i,j,hbar)$(Ij(i,j) and ord(hbar)-1 le pi(i) and Delay
****                         $352          $352                    $8,36        
      (calc-1,i,j,hbar) eq 0)=2$(uniform(0,1) ge 0.6 and (sum(n$(ord(n)-1 eq 0),
                             $409
      record_states(run,calc-1,'W',i,j,n,hbar-1)) gt 0 and Delay(calc-1,i,j,hbar
      -1) eq 0));
**** LINE    129 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 871  *          Delay(calc,i,j,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=(Delay(calc-1,
      i,j,hbar)-1)$(Delay(calc-1,i,j,hbar) gt 0)
 872  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=1$(uniform(0,1) gt
       0 and record_states(calc-1,'W',i,j,n,hbar-1) gt 0);
 873   
 874  *display Delay;
 875  *Wipes out previous Yhats
 876            Yhat(i,j,n,hbar)=0;
****                   $352
**** LINE    135 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 877  *Over-rides Delays with Unit breakdown. ie if unit breakdown occurs then t
      here cannot be a delay
 878            Delay(calc,i,j,hbar)=Delay(calc,i,j,hbar)$(sum(n$(ord(n)-1 eq 0)
****                         $352                 $352                          
      ,Zhat(i,j,n,hbar)+Zhat(i,j,n,hbar+1)) eq 0);
              $352             $352
**** LINE    137 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 879  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0)=1$(Delay(calc,i,j,
      hbar) gt 0);
 880            Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 lt Delay(calc,i,j,hbar))=
****                   $352            $352                         $149,352    
      1$(Delay(calc,i,j,hbar) gt 0);
                   $149,352
**** LINE    139 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 881   
 882  *          Yhat(i,j,n,hbar)$(Ij(i,j) and ord(n)-1 eq 0 and ord(hbar)-1 le 
      pi(i))=1$(uniform(0,1) ge 0 and record_states(calc-1,'W',i,j,n,hbar) gt 0)
      ;
 883  *          WbarInfo(i,j,n,hbar)$Yhat(i,j,n,hbar)=1;
 884  *          BbarInfo(i,j,n,hbar)$Yhat(i,j,n,hbar)=record_states(calc-1,'W',
      i,j,n,hbar);
 885  );
****  $408
**** LINE    144 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 886   
 887  *display Yhat;
 888  *display WbarInfo;
 889  *display BbarInfo;
 890   
 891   
 892  *Introducing disturbance in material handling(loading/unloading)
 893  *Here we implement only production disturbance because its more likely tha
      n consumption disturbance
 894  *Consumption disturbance has the tricky part that if loading was 5 units, 
      and we had just 5 units, the task is already started and we cant
 895  *then add a disturbance on top of it saying 5.5 units was actually consume
      d because the task has already started.
 896  if(0 eq 1,
 897  *the last two multiplication of (1-z(h+1))(1-z(h)) are when there are only
       unit breakdown, and when there is unit breakdown in middle of delay respe
      ctively
 898  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0 and produc
      t_states(s))=uniform(-0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),rec
      ord_states(calc-1,'B',i,j,n,hbar)*(1-Yhat(i,j,n,hbar+1))*(1-Zhat(i,j,n,hba
      r+1))*(1-Zhat(i,j,n,hbar)));
 899  *wipes out previous parameter values
 900  betaHatProd(i,j,s,n)=0;
****                $352
**** LINE    159 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 901  betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-0
****                $352                        $352                            
      .1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)),BbarInfo(i,j,n,hbar)*(1-Yhat
                                                               $352             
      (i,j,n,hbar))*(1-Zhat(i,j,n,hbar))*(1-Zhat(i,j,n,hbar-1)));
         $352                 $352                 $352
**** LINE    160 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 902  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-
      0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),record_states(calc-1,'B',
      i,j,n,hbar)*(1-Yhat(i,j,n,hbar+1))*(1-Zhat(i,j,n,hbar)));
 903  *betaHatProd(i,j,s,n)$(Tbars(i,s) and Ij(i,j) and ord(n)-1 eq 0)=uniform(-
      0.1,0)*sum(hbar$(ord(hbar) -1 eq pis_new(i,s)-1),record_states(calc-1,'B',
      i,j,n,hbar));
 904  );
 905  *Display betaHatProd;
 906   
 907   
 908  *Correct allocation constraint
 909  *KillDurationCountdown(i,j)$Ij(i,j)=%KillSwitch%$(sum(hbar,T.l(i,j,hbar)) 
      gt 0);
 910  KillOccupy(j,n)=0;
****             $352
**** LINE    169 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 911  KillDuration(i,j)$Ij(i,j)=KillLength$(0);
****                 $352    $352
**** LINE    170 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 912  *KillDuration(i,j)$Ij(i,j)=(%KillSwitch%+1)$(sum(hbar,T.l(i,j,hbar)) gt 0 
      and KillDuration(i,j) eq 0);
 913  *KillDuration(i,j)$(Ij(i,j) and KillDuration(i,j) <> 0)=KillDuration(i,j)-
      1;
 914  KillCountdown(j)=sum((i,hbar)$Ij(i,j),T.l(i,j,hbar)*KillDuration(i,j))  +(
****                $352                 $352     $352                   $352   
      KillCountdown(j)-1)$(KillCountdown(j) gt 0);
                    $352                 $352
**** LINE    173 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 915  KillOccupy(j,n)$(ord(n)-1 lt KillCountdown(j)-1)=1;
****             $352                            $352
**** LINE    174 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 916  if(0 eq 0,
 917     T.fx(i,j,hbar)=0;
****            $352
**** LINE    176 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 918  );
 919  *Display Breakdown,Duration_breakdown,UnitBroken,Zhat,KillOccupy;
 920  ***************SAMPLING DISTURBANCES/UNCERTAINTIES************************
      ******
 921   
 922  ***************UTILITIES**************************************************
      ******
 923  Uutmax(u,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Uutmax_full(u,h))
****                                                    $154
      ;
**** LINE    182 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 924  Unitunavailable(j,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Unitunav
****                  $352                                       $154           
      ailable_full(j,h));
                   $352
**** LINE    183 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 925  Cut(u,n)=sum(h$((ord(h)-1) eq (ord(n)-1+ord(calc)-1)),Cut_full(u,h));
****                                                 $154
**** LINE    184 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 926  *Correct Cutfull calculation, all the relation of taking hours to time poi
      nts
 927  *This correction is needed in model file
 928  ***************UTILITIES**************************************************
      ******
 929  *Display Dst;
 930   
 931  *abort$(sameas(calc,"calc25")) "stopped for debugging";
 932  *Solve optimization horizon
 933   
 934  Option IntVarUp=0;
 935  *******************FIND OPEN LOOP SCHEDULE********************************
      ******
 936  %MODEL_NAME%.optcr = optcr_value$(reschedule_flag)+1$(NOT reschedule_flag)
****  $409
      ;
**** LINE    195 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 937  %MODEL_NAME%.reslim = timelimit;
****  $409
**** LINE    196 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 938  %MODEL_NAME%.holdFixed=1;
****  $409
**** LINE    197 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 939  solve %MODEL_NAME% using MIP %OPTIMIZATION_DIRECTION% obj_variable;
****        $2        $140,241,812
**** LINE    198 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 940   
 941  modelStat(calc,run)=%MODEL_NAME%.ModelStat;
****                      $119      $143,409
**** LINE    200 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 942  *Watch out what should be denominator, Relaxed or Best found solution
 943  *Cplex uses division by best found integer solution
 944  Est_modelGap1(calc,run)=abs((%MODEL_NAME%.objEst-%MODEL_NAME%.objVal)/(%MO
****                               $119      $143,8,409
      DEL_NAME%.objVal+1E-10));
**** LINE    203 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 945  Est_modelGap2(calc,run)=abs((%MODEL_NAME%.objEst-%MODEL_NAME%.objVal)/(%MO
****                               $119      $143,8,409
      DEL_NAME%.objEst+1E-10));
**** LINE    204 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 946  Suboptimal_objective=%MODEL_NAME%.objVal;
****                       $119      $143,409
**** LINE    205 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 947   
 948  ETSolve(calc,run)=%MODEL_NAME%.etSolve;
****                    $119      $143,409
**** LINE    207 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 949  ETSolver(calc,run)=%MODEL_NAME%.etSolver;
****                     $119      $143,409
**** LINE    208 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 950  iterUsd(calc,run)=%MODEL_NAME%.iterUsd;
****                    $119      $143,409
**** LINE    209 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 951  nodUsd(calc,run)=%MODEL_NAME%.nodUsd;
****                   $119      $143,409
**** LINE    210 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 952  resUsd(calc,run)=%MODEL_NAME%.resUsd;
****                   $119      $143,409
**** LINE    211 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 953  numDVar(calc,run)=%MODEL_NAME%.numDVar;
****                    $119      $143,409
**** LINE    212 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 954  numEqu(calc,run)=%MODEL_NAME%.numEqu;
****                   $119      $143,409
**** LINE    213 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 955  numInfes(calc,run)=%MODEL_NAME%.numInfes;
****                     $119      $143,409
**** LINE    214 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 956  numNZ(calc,run)=%MODEL_NAME%.numNZ;
****                  $119      $143,409
**** LINE    215 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 957  numVar(calc,run)=%MODEL_NAME%.numVar;
****                   $119      $143,409
**** LINE    216 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 958  solveStat(calc,run)=%MODEL_NAME%.solveStat;
****                      $119      $143,409
**** LINE    217 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 959   
 960  *Recording optimized variables for each optimization horizon
 961  record_states_raw(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,
****                                   $352                        $8,36        
      j))= Bbar.l(i,j,n,hbar);
         $409
**** LINE    220 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 962  record_states_raw(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,
****                                   $352                        $8,36        
      j))= Wbar.l(i,j,n,hbar);
         $409
**** LINE    221 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 963  record_states(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))=
****                               $352                        $8,36           $
       round(Bbar.l(i,j,n,hbar),2)$(Bbar.l(i,j,n,hbar) ge vminij(i,j)+Small_numb
      409
      er and Bbar.l(i,j,n,hbar) le vmaxij(i,j)-Small_number) + round(Bbar.l(i,j,
      n,hbar))$(NOT (Bbar.l(i,j,n,hbar) ge vminij(i,j)+Small_number and Bbar.l(i
      ,j,n,hbar) le vmaxij(i,j)-Small_number));
**** LINE    222 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 964  record_states(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))=
****                               $352                        $8,36           $
       round(Wbar.l(i,j,n,hbar));
      409
**** LINE    223 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 965  record_T(run,calc,i,j,hbar)$(ord(hbar)-1 le pi(i) and Ij(i,j))= T.l(i,j,hb
****                      $352                      $8,36           $409
      ar);
**** LINE    224 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 966  record_inventory(run,calc,s,n)=round(Sst.l(s,n),3);
 967  record_backlog(run,calc,s,n)=round(Backlog.l(s,n),3);
 968  record_inventory_raw(run,calc,s,n)=Sst.l(s,n);
 969  record_backlog_raw(run,calc,s,n)=Backlog.l(s,n);
 970  record_yieldloss(run,calc,i,j,s,n)=betaHatProd(i,j,s,n);
****                              $352                 $352
**** LINE    229 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 971  record_objective(run,calc)=obj_variable.l;
****                                          $141
**** LINE    230 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 972  record_utility(run,calc,u,n)=Uut.l(u,n);
 973  record_inventoryTerminal(run,calc,s)=SstTerminal.l(s);
****                                                   $141
**** LINE    232 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 974  record_backlogTerminal(run,calc,s)=BacklogTerminal.l(s);
 975  record_shipment_raw(run,calc,s,n)=Ship.l(s,n);
 976  record_shipment(run,calc,s,n)=round(Ship.l(s,n),2);
 977  record_shipment_sales_raw(run,calc,s,n)=Ship_sales.l(s,n);
 978  record_shipment_sales(run,calc,s,n)=round(Ship_sales.l(s,n),2);
 979  record_Rst_raw(run,calc,s,n)=Rst.l(s,n);
 980  record_Rst(run,calc,s,n)=round(Rst.l(s,n),2);
 981  record_demands(run,calc,s,n)=Dst(s,n);
 982  record_Demands_realization(run,s,h)=Dst_Full_Realization(s,h,run);
 983   
 984  record_WbarInfo(run,calc,i,j,n,hbar)=WbarInfo(i,j,n,hbar);
****                             $352                 $352
**** LINE    243 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 985  record_BbarInfo(run,calc,i,j,n,hbar)=BbarInfo(i,j,n,hbar);
****                             $352                 $352
**** LINE    244 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
 986   
 987  BOStat_OL(calc,run) =  1$(sum((s,n),record_backlog(run,calc,s,n)+record_ba
      cklogTerminal(run,calc,s)) > 0);
 988  BOStat_CL(calc,run) =  1$(sum((s,n)$(ord(n)-1 eq 0),record_backlog(run,cal
      c,s,n)) > 0);
 989   
 990  *display ship.l;
 991  Optimal_Objective=Suboptimal_Objective;
 992  ***********************FIND OPTIMAL OBJECTIVE IF OPTCR <>0****************
      *
 993  IF(%MODEL_NAME%.optcr <> 0 AND reschedule_flag eq 1,
****     $119      $143,10,8,409
**** LINE    252 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
      put screen;
      put 'Now solving optimal open loop';
      putclose;
 999  %MODEL_NAME%.optcr=0;
1000  solve %MODEL_NAME% using MIP %OPTIMIZATION_DIRECTION% obj_variable;
****        $2        $241,812
**** LINE    259 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1001  Optimal_Objective=%MODEL_NAME%.objVal;
****                    $119      $143,409
**** LINE    260 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1002  True_modelGap(calc,run)=(Suboptimal_objective-Optimal_Objective)/(Optimal_
      objective+1E-10);
1003  TimeToSolveOptimal(calc,run)=%MODEL_NAME%.resUsd;
****                               $119      $143,409
**** LINE    262 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1004  );
****  $408
**** LINE    263 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1005   
1006  ***********************FIND OPTIMAL OBJECTIVE IF OPTCR <>0****************
      *
1007   
1008  ******WARNING: ALL VARIABLE LEVEL VALUES ARE THOSE OF OPTCR=0 NOW*********
      *
1009   
1010  IF (reschedule_flag eq 1,
1011  ***********************SOLVE RMIP TO GET INTEGRALITY GAP*****************
1012  solve %MODEL_NAME% using RMIP %OPTIMIZATION_DIRECTION% obj_variable;
****        $2        $241,812
**** LINE    271 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1013  record_relaxed_objective(run,calc)=obj_variable.l;
1014  IntegralityGap(calc,run)=record_relaxed_objective(run,calc)/(Optimal_Objec
      tive+1E-10);
1015  record_relaxed_states(run,calc,'B',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and I
****                                       $352                        $8,36    
      j(i,j))= Bbar.l(i,j,n,hbar);
             $8,409
**** LINE    274 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1016  record_relaxed_states(run,calc,'W',i,j,n,hbar)$(ord(hbar)-1 le pi(i) and I
****                                       $352                        $8,36    
      j(i,j))= Wbar.l(i,j,n,hbar);
             $409
**** LINE    275 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1017  record_relaxed_shipment(run,calc,s,n)=Ship.l(s,n);
1018  record_relaxed_shipment_sales(run,calc,s,n)=Ship_sales.l(s,n);
1019  record_relaxed_backlog(run,calc,s,n)=Backlog.l(s,n);
1020  );
****  $408
**** LINE    279 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1021  ***********************SOLVE RMIP TO GET INTEGRALITY GAP*****************
1022   
1023  ******WARNING: ALL VARIABLE LEVEL VALUES ARE THOSE OF RMIP NOW**********
1024   
1025  );
****  $408
**** LINE    284 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ModelSolution9.gms
**** LINE    149 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1026  **END OF CALC LOOP HERE
1027   
1028  *END OF SOLUTION FILE
1029   
1030   
1031   
1032  loop((n,calc)$(ord(n)-1 eq 0),
1033           ClosedLoopINV(run,s,h)$(ord(h) eq ord(calc))=record_inventory(run
      ,calc,s,n);
1034           ClosedLoopBO(run,s,h)$(ord(h) eq ord(calc))=record_backlog(run,ca
      lc,s,n);
1035           ClosedLoopShip(run,s,h)$(ord(h) eq ord(calc))=record_shipment(run
      ,calc,s,n);
1036           ClosedLoopShip_sales(run,s,h)$(ord(h) eq ord(calc))=record_shipme
      nt_sales(run,calc,s,n);
1037           ClosedLoopStart(run,h)$(ord(calc) eq ord(h))=sum((i,j,hbar)$(Ij(i
****                                                               $352         
      ,j) AND ord(hbar)-1 eq 0),record_states(run,calc,'W',i,j,n,hbar));
       $352                                                  $352
**** LINE    156 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1038  *         ClosedLoopStart(run,h)$(ord(calc) eq ord(h))=0;
1039  );
1040           ClosedLoopExecutions(run,i)=sum((calc,j,n,hbar)$(Ij(i,j) AND ord(
****                                                 $352            $352
      hbar)-1 eq 0
**** LINE    159 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1041                                           AND ord(n)-1 eq 0 AND ord(calc)-1
       le UNDF-1),
1042                                           record_states(run,calc,'W',i,j,n,
****                                                                        $352
      hbar));
**** LINE    161 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1043   
1044  *         runcost_Inv(run)=1E1*sum((s,h)$closed_loop(h),Cst_new(s)*Sinv(s,
      h));
1045  *         runcost_BO(run)=1E2*sum((s,h)$closed_loop(h),Cst_new(s)*BO(s,h))
      ;
1046           runcost_Inv(run)=1E1*sum((s,h)$closed_loop(h),Cst_new(s)*ClosedLo
      opINV(run,s,h));
1047           runcost_BO(run)=1E2*sum((s,h)$closed_loop(h),Cst_new(s)*ClosedLoo
      pBO(run,s,h));
1048           runcost_W(run)=sum((h)$closed_loop(h),ClosedLoopStart(run,h));
1049  *total profit from all shipments (demand+sales)
1050   
1051           runcost(run)=runcost_Inv(run)+runcost_BO(run)+runcost_W(run);
1052   
1053  *         sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(
      h) and (ord(h)-1 ne %Closed_Loop_Upper_delta%) ),
1054  *                                 Cst_new(s)*(ClosedLoopShip(run,s,h)+Clos
      edLoopShip_sales(run,s,h) ));
1055           sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(h
      ) and (ord(h)-1 ne UNDF) ),
1056                                   Cst_new(s)*(ClosedLoopShip_sales(run,s,h)
       ));
1057  *         sales_profit(run)=sum( (s,h)$(product_states(s) and closed_loop(
      h) and (ord(h)-1 ne %Closed_Loop_Upper_delta%) ),Cst_new(s)*ClosedLoopShip
      _sales(run,s,h));
1058           Cost_EndInventory(run)=sum((s,h)$(product_states(s) and ord(h)-1 
      eq UNDF),Cst_new(s)*ClosedLoopINV(run,s,h));
1059  *         runcost_W(run)=0;
1060  *         runprofit(run)=sum((s,h)$(product_states(s) and closed_loop(h)),
      Cst_new(s)*ClosedLoopShip(run,s,h))+runcost_W(run);
1061  *Runprofit includes subtraction of BO even at last point because BO are wr
      itten like inventory
1062  *BO at 168 means just before 168th point. Ship at 168 means at 168 not bef
      ore or after.
1063  *Our runprofit is only for 167 points of closed loop and 168th point as co
      rrection. So we are essentially wasting the last decision
1064  *that is the open loop that was computed at 168.
1065           runprofit(run)=sales_profit(run)+Cost_EndInventory(run)
1066                           -(runcost_W(run)-sum((h)$(ord(h)-1 eq UNDF),Close
      dLoopStart(run,h)))
1067                           -runcost_BO(run);
1068   
1069  *         runprofit(run)=runcost_Inv(run)-runcost_BO(run)
1070  *                        +1E1*sum((s,h)$(product_states(s) and closed_loop
      (h)),Cst_new(s)*ClosedLoopShip(run,s,h));
1071   
1072  *Does not include cost of Terminal BO and inventory but thats okay because
       they are irrelevant when some extra horizon is allowed for getting comple
      te closed loop rolling horizon solution
1073  ************[Start]Information to get very crude estimate for running time
       left**************
1074  timeLeft=%MODEL_NAME%.etSolve*(card(run)-ord(run))*card(calc);
****           $119      $143,409
**** LINE    193 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
      put screen;
      put 'Time for run ' P1.etSolve;
      put ' Estimated Time Left ' timeLeft;
      putclose;
1081  *************[End]Information to get very crude estimate for running time 
      left***************
1082   
      *************Stopping Criterion**************
      N_run=ord(run);
      mean_runcost(run)=sum(run_p$(ord(run_p) le N_run),runcost(run_p))/N_run;
      std_dev_runcost(run)$(ord(run) gt 1)= sqrt(       sum(run_p$(ord(run_p) le
       N_run),     ( abs(  runcost(run_p)-mean_runcost(run) )**2)) /(N_run-1)   
       );
      delta_std_dev_runcost(run)$(ord(run) gt 2)=std_dev_runcost(run)/std_dev_ru
      ncost(run-1)  - 1;
      max_delta_std_dev_runcost(run)= sqrt( 1 + (1.96**2-1)/N_run ) -1;
      *icdfnorm(0.95,0,1);
      *************Stopping Criterion**************
1093  );
****  $408
**** LINE    212 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1094  ********************[End] runs loop **************************************
      *
1095   
1096  *******************GANTT CHART PARAMETERS*********************************
      ****
1097  PARAMETERS BS(i,j,h),start(i,j,h),Sinv(s,h),end(i,j,h),BO(s,h);
1098  IF (0 eq 0,
1099           loop((run,calc)$(ord(run) eq 1),
1100             BS(i,j,h)$(ord(h) eq ord(calc))=sum((hbar,n)$(ord(hbar)-1 eq 0 
****                  $352                                                      
      and ord(n)-1 eq 0),record_states(run,calc,'B',i,j,n,hbar));
                                                      $352
**** LINE    219 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1101  *start(i,j,h)$(ord(h)eq ord(calc))=round(sum((hbar,n)$(ord(hbar)-1 eq 0 an
      d ord(n)-1 eq 0),record_states(calc,'W',i,j,n,hbar)));
1102             start(i,j,h)$(ord(h)eq ord(calc))=sum((hbar,n)$(ord(hbar)-1 eq 
****                     $352                                                   
      0 and ord(n)-1 eq 0),record_states(run,calc,'W',i,j,n,hbar));
                                                        $352
**** LINE    221 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1103             Sinv(s,h)$(ord(h) eq ord(calc))=sum(n$(ord(n)-1 eq 0),record_in
      ventory(run,calc,s,n));
1104             BO(s,h)$(ord(h) eq ord(calc))=sum(n$(ord(n)-1 eq 0),record_back
      log(run,calc,s,n));
1105           );
1106  ELSE
1107  *Write OPEN loop static gantt chart %GanttChart_OPENLOOP% eq 1
1108           loop((run,calc)$(ord(run) eq 1 and ord(calc) eq 1),
1109             BS(i,j,h)$(Ij(i,j))=sum((hbar,n)$(ord(hbar)-1 eq 0 and (ord(n) 
****                  $352       $352                                           
      eq ord(h))),record_states(run,calc,'B',i,j,n,hbar));
                                               $352
**** LINE    228 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1110             start(i,j,h)$(Ij(i,j))=sum((hbar,n)$(ord(hbar)-1 eq 0 and (ord(
****                     $352       $352                                        
      n) eq ord(h))),record_states(run,calc,'W',i,j,n,hbar));
                                                  $352
**** LINE    229 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1111             Sinv(s,h)=sum(n$(ord(n) eq ord(h)),record_inventory(run,calc,s,
      n));
1112             BO(s,h)=sum(n$(ord(n) eq ord(h)),record_backlog(run,calc,s,n));
1113           );
1114  );
1115  *Have ending account for task delays
1116  end(i,j,h) = start(i,j,h-pi_new(i))$(BS(i,j,h-pi_new(i))>0);
****        $352           $352                 $352
**** LINE    235 INCLUDE     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \MasterFile.gms
**** LINE     69 INPUT       C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1
                             \ConfigurationFile.gms
1117  *******************GANTT CHART PARAMETERS*********************************
      ****
1118   
1119  *******************EXPORT ALL RESULTS IN GDX FILE*************************
      ****
1120  SUCCESS=1;
1121  EXECUTE_UNLOAD '%Results_FileName%.gdx';
1122  *******************EXPORT ALL RESULTS IN GDX FILE*************************
      ****
1123   
1124  *********Generate EXCEL SHEEL FOR GANTT CHARTING (Requires windows)*******
      ****
1125  if(1 eq 1,
1126  ************************************************
1127  ********Closed-Loop GanttChartGeneration********
1128  ************************************************
1129  *Name of the excel file where the data will be exported
1130  *$setglobal file %Results_FileName%_Gantt
1131  *i = set of tasks
1132  *j = set of units
1133  *h = set of time points
1134  *BS = batch size of task i starting in unit j at time t (must be indexed i
      jt)
1135  *start = binary variable that is 1 if task i starts in unit j at time t (m
      ust be indexed ijt)
1136  *Sinv = inventory level of material s at time t (must be indexed st)
1137  *BO= backorder of state s at time t
1138  *end =  binary variable that is 1 if task i ends in unit j at time t (must
       be indexed ijt)
1139   
1140  *EXECUTE_UNLOAD '%Results_FileName%_Gantt.gdx' BS i j h  Sinv start end;
1141   
1142  *The first word of each line gives the type: set = set, var = variable, pa
      r = parameter. This may need to be changed depending on your model
1143  *The location of the output or the sheet names must not be changed
1153   
1154  *display BS,start,end,Sinv,BO;
1155  EXECUTE 'gdxxrw Input=%Results_FileName%.gdx Output=%Results_FileName%_Gan
      tt @GANTT_write.txt'
1156  );
1157  *********Generate EXCEL SHEEL FOR GANTT CHARTING (Requires windows)*******
      ****
1158   
1159  *END OF MASTER FILE
1160   
1161   
1162   
1163   
1164   
1165   
1166  *Watch out for overflow of solution for rolling horizon...ie the spilling 
      over of
1167  *rolling horizon beyond real horizon to get last implemented closed loop s
      olution
1168   
1169   
1170  *$set console
1171  *$if %system.filesys% == UNIX  $set console /dev/tty
1172  *$if %system.filesys% == DOS $set console con
1173  *$if %system.filesys% == MS95  $set console con
1174  *$if %system.filesys% == MSNT  $set console con
1175  *$if "%console%." == "." abort "filesys not recognized";
1176  *file screen / '%console%' /;
1177  *file log /''/
1178   
1179   
1180   
1181   
1182   
1183   
1184   
1185   
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/10/16 14:46:20 Page 4
State_Space_Model
Error Messages


  2  Identifier expected
  8  ')' expected
 10  ',' expected
 12  ';' expected
 36  '=' or '..' or ':=' or '$=' operator expected
     rest of statement ignored
116  Label is unknown
119  Number (primary) expected
120  Unknown identifier entered as set
133  Incompatible operands for addition
140  Unknown symbol
141  Symbol declared but no values have been assigned. Check for missing
        data definition, assignment, data loading or implicit assignment
        via a solve statement.
        A wild shot: You may have spurious commas in the explanatory
        text of a declaration. Check symbol reference list.
143  A suffix is missing
148  Dimension different - The symbol is referenced with more/less
        indices as declared
149  Uncontrolled set entered as constant
154  Set for 'ord' is not controlled
157  No known set found in alias list
201  Invalid argument for function
241  Model has not been defined
282  Unable to open include file
340  A label/element with the same name exist. You may have forgotten
        to quote a label/element reference. For example,
        set i / a,b,c /; parameter x(i); x('a') = 10;
352  Set has not been initialized
408  Too many ),] or }
409  Unrecognizable item - skip to find a new statement
       looking for a ';' or a key word to get started again
508  Blank needed between element and text
       (-or- illegal character in element)
654  The right side of an equation cannot be a set expression
659  Error in evaluation
684  Constant evaluation: BAD_CHAR
693  Constant evaluation: FPU EXCEPTION
763  Numeric field missing in <element> * <element> list
764  Could not extract number in <element> * <element> list
767  Unexpected symbol will terminate the loop - symbol replaced by )
812  Solve keys expected - USING MAX/MIN SCENARIO

**** 376 ERROR(S)   0 WARNING(S)
GAMS 24.5.6  r55090 Released Nov 27, 2015 WEX-WEI x86 64bit/MS Windows 04/10/16 14:46:20 Page 5
State_Space_Model
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\dhruv\Box Sync\Work\Codes\GAM
                                          S_Code_Paper1\ConfigurationFile.gms
     2       69 INCLUDE        1      69  .C:\Users\dhruv\Box Sync\Work\Codes\GA
                                           MS_Code_Paper1\MasterFile.gms
     3       87 INCLUDE        2      18  ..C:\Users\dhruv\Box Sync\Work\Codes\G
                                            AMS_Code_Paper1\Model9.gms
     4      741 INCLUDE        2     149  ..C:\Users\dhruv\Box Sync\Work\Codes\G
                                            AMS_Code_Paper1\ModelSolution9.gms


COMPILATION TIME     =        0.515 SECONDS      3 MB  24.5.6 r55090 WEX-WEI


USER: Department of Chemical & Biological EngineeringG151026:1254AO-GEN
      University of Wisconsin - Madison                          DC4923
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\ConfigurationFile
           .gms
Output     C:\Users\dhruv\Box Sync\Work\Codes\GAMS_Code_Paper1\ConfigurationFile
           .lst

**** USER ERROR(S) ENCOUNTERED
